class SimplexNoise{constructor(t=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let s=0;s<256;s++)this.p[s]=Math.floor(256*t.random());this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[255&t];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}dot(t,s,h){return t[0]*s+t[1]*h}dot3(t,s,h,r){return t[0]*s+t[1]*h+t[2]*r}dot4(t,s,h,r,i){return t[0]*s+t[1]*h+t[2]*r+t[3]*i}noise(t,s){let h,r,i;const e=(t+s)*(.5*(Math.sqrt(3)-1)),o=Math.floor(t+e),l=Math.floor(s+e),p=(3-Math.sqrt(3))/6,d=(o+l)*p,a=t-(o-d),m=s-(l-d);let n,M;a>m?(n=1,M=0):(n=0,M=1);const f=a-n+p,g=m-M+p,c=a-1+2*p,u=m-1+2*p,x=255&o,q=255&l,N=this.perm[x+this.perm[q]]%12,S=this.perm[x+n+this.perm[q+M]]%12,b=this.perm[x+1+this.perm[q+1]]%12;let j=.5-a*a-m*m;j<0?h=0:(j*=j,h=j*j*this.dot(this.grad3[N],a,m));let k=.5-f*f-g*g;k<0?r=0:(k*=k,r=k*k*this.dot(this.grad3[S],f,g));let v=.5-c*c-u*u;return v<0?i=0:(v*=v,i=v*v*this.dot(this.grad3[b],c,u)),70*(h+r+i)}noise3d(t,s,h){let r,i,e,o;const l=(t+s+h)*(1/3),p=Math.floor(t+l),d=Math.floor(s+l),a=Math.floor(h+l),m=1/6,n=(p+d+a)*m,M=t-(p-n),f=s-(d-n),g=h-(a-n);let c,u,x,q,N,S;M>=f?f>=g?(c=1,u=0,x=0,q=1,N=1,S=0):M>=g?(c=1,u=0,x=0,q=1,N=0,S=1):(c=0,u=0,x=1,q=1,N=0,S=1):f<g?(c=0,u=0,x=1,q=0,N=1,S=1):M<g?(c=0,u=1,x=0,q=0,N=1,S=1):(c=0,u=1,x=0,q=1,N=1,S=0);const b=M-c+m,j=f-u+m,k=g-x+m,v=M-q+2*m,w=f-N+2*m,y=g-S+2*m,z=M-1+.5,A=f-1+.5,B=g-1+.5,C=255&p,D=255&d,E=255&a,F=this.perm[C+this.perm[D+this.perm[E]]]%12,G=this.perm[C+c+this.perm[D+u+this.perm[E+x]]]%12,H=this.perm[C+q+this.perm[D+N+this.perm[E+S]]]%12,I=this.perm[C+1+this.perm[D+1+this.perm[E+1]]]%12;let J=.6-M*M-f*f-g*g;J<0?r=0:(J*=J,r=J*J*this.dot3(this.grad3[F],M,f,g));let K=.6-b*b-j*j-k*k;K<0?i=0:(K*=K,i=K*K*this.dot3(this.grad3[G],b,j,k));let L=.6-v*v-w*w-y*y;L<0?e=0:(L*=L,e=L*L*this.dot3(this.grad3[H],v,w,y));let O=.6-z*z-A*A-B*B;return O<0?o=0:(O*=O,o=O*O*this.dot3(this.grad3[I],z,A,B)),32*(r+i+e+o)}noise4d(t,s,h,r){const i=this.grad4,e=this.simplex,o=this.perm,l=(Math.sqrt(5)-1)/4,p=(5-Math.sqrt(5))/20;let d,a,m,n,M;const f=(t+s+h+r)*l,g=Math.floor(t+f),c=Math.floor(s+f),u=Math.floor(h+f),x=Math.floor(r+f),q=(g+c+u+x)*p,N=t-(g-q),S=s-(c-q),b=h-(u-q),j=r-(x-q),k=(N>S?32:0)+(N>b?16:0)+(S>b?8:0)+(N>j?4:0)+(S>j?2:0)+(b>j?1:0),v=e[k][0]>=3?1:0,w=e[k][1]>=3?1:0,y=e[k][2]>=3?1:0,z=e[k][3]>=3?1:0,A=e[k][0]>=2?1:0,B=e[k][1]>=2?1:0,C=e[k][2]>=2?1:0,D=e[k][3]>=2?1:0,E=e[k][0]>=1?1:0,F=e[k][1]>=1?1:0,G=e[k][2]>=1?1:0,H=e[k][3]>=1?1:0,I=N-v+p,J=S-w+p,K=b-y+p,L=j-z+p,O=N-A+2*p,P=S-B+2*p,Q=b-C+2*p,R=j-D+2*p,T=N-E+3*p,U=S-F+3*p,V=b-G+3*p,W=j-H+3*p,X=N-1+4*p,Y=S-1+4*p,Z=b-1+4*p,$=j-1+4*p,_=255&g,tt=255&c,st=255&u,ht=255&x,rt=o[_+o[tt+o[st+o[ht]]]]%32,it=o[_+v+o[tt+w+o[st+y+o[ht+z]]]]%32,et=o[_+A+o[tt+B+o[st+C+o[ht+D]]]]%32,ot=o[_+E+o[tt+F+o[st+G+o[ht+H]]]]%32,lt=o[_+1+o[tt+1+o[st+1+o[ht+1]]]]%32;let pt=.6-N*N-S*S-b*b-j*j;pt<0?d=0:(pt*=pt,d=pt*pt*this.dot4(i[rt],N,S,b,j));let dt=.6-I*I-J*J-K*K-L*L;dt<0?a=0:(dt*=dt,a=dt*dt*this.dot4(i[it],I,J,K,L));let at=.6-O*O-P*P-Q*Q-R*R;at<0?m=0:(at*=at,m=at*at*this.dot4(i[et],O,P,Q,R));let mt=.6-T*T-U*U-V*V-W*W;mt<0?n=0:(mt*=mt,n=mt*mt*this.dot4(i[ot],T,U,V,W));let nt=.6-X*X-Y*Y-Z*Z-$*$;return nt<0?M=0:(nt*=nt,M=nt*nt*this.dot4(i[lt],X,Y,Z,$)),27*(d+a+m+n+M)}}export{SimplexNoise};