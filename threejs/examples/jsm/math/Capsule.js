import{Vector3}from"three";const _v1=new Vector3,_v2=new Vector3,_v3=new Vector3,EPS=1e-10;class Capsule{constructor(t=new Vector3(0,0,0),s=new Vector3(0,1,0),i=1){this.start=t,this.end=s,this.radius=i}clone(){return new Capsule(this.start.clone(),this.end.clone(),this.radius)}set(t,s,i){this.start.copy(t),this.end.copy(s),this.radius=i}copy(t){this.start.copy(t.start),this.end.copy(t.end),this.radius=t.radius}getCenter(t){return t.copy(this.end).add(this.start).multiplyScalar(.5)}translate(t){this.start.add(t),this.end.add(t)}checkAABBAxis(t,s,i,a,e,r,n,h,d){return(e-t<d||e-i<d)&&(t-r<d||i-r<d)&&(n-s<d||n-a<d)&&(s-h<d||a-h<d)}intersectsBox(t){return this.checkAABBAxis(this.start.x,this.start.y,this.end.x,this.end.y,t.min.x,t.max.x,t.min.y,t.max.y,this.radius)&&this.checkAABBAxis(this.start.x,this.start.z,this.end.x,this.end.z,t.min.x,t.max.x,t.min.z,t.max.z,this.radius)&&this.checkAABBAxis(this.start.y,this.start.z,this.end.y,this.end.z,t.min.y,t.max.y,t.min.z,t.max.z,this.radius)}lineLineMinimumPoints(t,s){const i=_v1.copy(t.end).sub(t.start),a=_v2.copy(s.end).sub(s.start),e=_v3.copy(s.start).sub(t.start),r=i.dot(a),n=i.dot(i),h=a.dot(a),d=a.dot(e),c=i.dot(e);let o,u;const m=n*h-r*r;if(Math.abs(m)<EPS){const t=-d/h,s=(r-d)/h;Math.abs(t-.5)<Math.abs(s-.5)?(o=0,u=t):(o=1,u=s)}else o=(d*r+c*h)/m,u=(o*r-d)/h;return u=Math.max(0,Math.min(1,u)),o=Math.max(0,Math.min(1,o)),[i.multiplyScalar(o).add(t.start),a.multiplyScalar(u).add(s.start)]}}export{Capsule};