import{Curve,Vector3,Vector4}from"three";import*as NURBSUtils from"../curves/NURBSUtils.js";class NURBSCurve extends Curve{constructor(t,s,o,e,n){super(),this.degree=t,this.knots=s,this.controlPoints=[],this.startKnot=e||0,this.endKnot=n||this.knots.length-1;for(let t=0;t<o.length;++t){const s=o[t];this.controlPoints[t]=new Vector4(s.x,s.y,s.z,s.w)}}getPoint(t,s=new Vector3){const o=s,e=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),n=NURBSUtils.calcBSplinePoint(this.degree,this.knots,this.controlPoints,e);return 1!==n.w&&n.divideScalar(n.w),o.set(n.x,n.y,n.z)}getTangent(t,s=new Vector3){const o=s,e=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),n=NURBSUtils.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,e,1);return o.copy(n[1]).normalize(),o}}export{NURBSCurve};