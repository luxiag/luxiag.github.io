import TempNode from"../core/TempNode.js";import{addNodeClass}from"../core/Node.js";import{ShaderNode,nodeObject,float,vec3,mat3}from"../shadernode/ShaderNode.js";import{NoToneMapping,LinearToneMapping,ReinhardToneMapping,CineonToneMapping,ACESFilmicToneMapping}from"three";const LinearToneMappingNode=new ShaderNode((({color:e,exposure:o})=>e.mul(o))),ReinhardToneMappingNode=new ShaderNode((({color:e,exposure:o})=>(e=e.mul(o)).div(e.add(1)).clamp())),OptimizedCineonToneMappingNode=new ShaderNode((({color:e,exposure:o})=>{const n=(e=(e=e.mul(o)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),p=e.mul(e.mul(6.2).add(1.7)).add(.06);return n.div(p).pow(2.2)})),RRTAndODTFit=new ShaderNode((({color:e})=>{const o=e.mul(e.add(.0245786)).sub(90537e-9),n=e.mul(e.add(.432951).mul(.983729)).add(.238081);return o.div(n)})),ACESFilmicToneMappingNode=new ShaderNode((({color:e,exposure:o})=>{const n=mat3(vec3(.59719,.076,.0284),vec3(.35458,.90834,.13383),vec3(.04823,.01566,.83777)),p=mat3(vec3(1.60475,-.10208,-.00327),vec3(-.53108,1.10813,-.07276),vec3(-.07367,-.00605,1.07602));return e=e.mul(o).div(.6),e=n.mul(e),e=RRTAndODTFit.call({color:e}),(e=p.mul(e)).clamp()})),toneMappingLib={[LinearToneMapping]:LinearToneMappingNode,[ReinhardToneMapping]:ReinhardToneMappingNode,[CineonToneMapping]:OptimizedCineonToneMappingNode,[ACESFilmicToneMapping]:ACESFilmicToneMappingNode};class ToneMappingNode extends TempNode{constructor(e=NoToneMapping,o=float(1),n=null){super("vec3"),this.toneMapping=e,this.exposureNode=o,this.colorNode=n}construct(e){const o=this.colorNode||e.context.color,n=this.toneMapping;if(n===NoToneMapping)return o;const p={exposure:this.exposureNode,color:o},d=toneMappingLib[n];let i=null;return d?i=d.call(p):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=o),i}}export default ToneMappingNode;export const toneMapping=(e,o,n)=>nodeObject(new ToneMappingNode(e,nodeObject(o),nodeObject(n)));addNodeClass(ToneMappingNode);