import Node,{addNodeClass}from"./Node.js";import{nodeImmutable,nodeObject,getConstNodeType}from"../shadernode/ShaderNode.js";class PropertyNode extends Node{constructor(e,o=null){super(e),this.name=o}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){const o=e.getVarFromNode(this,this.getNodeType(e)),t=this.name;return null!==t&&(o.name=t),e.getPropertyName(o)}}export default PropertyNode;export const property=(e,o)=>nodeObject(new PropertyNode(e,getConstNodeType(o)));export const diffuseColor=nodeImmutable(PropertyNode,"vec4","DiffuseColor");export const roughness=nodeImmutable(PropertyNode,"float","Roughness");export const metalness=nodeImmutable(PropertyNode,"float","Metalness");export const specularColor=nodeImmutable(PropertyNode,"color","SpecularColor");export const shininess=nodeImmutable(PropertyNode,"float","Shininess");addNodeClass(PropertyNode);