import Node,{addNodeClass}from"./Node.js";import{NodeShaderStage}from"./constants.js";import{addNodeElement,nodeProxy}from"../shadernode/ShaderNode.js";class VaryingNode extends Node{constructor(e,o=null){super(),this.node=e,this.name=o}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{name:o,node:t}=this,r=this.getNodeType(e),d=e.getVaryingFromNode(this,r);d.needsInterpolation||(d.needsInterpolation="fragment"===e.shaderStage),null!==o&&(d.name=o);const a=e.getPropertyName(d,NodeShaderStage.VERTEX);return e.flowNodeFromShaderStage(NodeShaderStage.VERTEX,t,r,a),e.getPropertyName(d)}}export default VaryingNode;export const varying=nodeProxy(VaryingNode);addNodeElement("varying",varying),addNodeClass(VaryingNode);