class NodeKeywords{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(s){let o=this.nodes[s];return void 0===o&&void 0!==this.keywordsCallback[s]&&(o=this.keywordsCallback[s](s),this.nodes[s]=o),o}addKeyword(s,o){return this.keywords.push(s),this.keywordsCallback[s]=o,this}parse(s){const o=this.keywords,e=new RegExp(`\\b${o.join("\\b|\\b")}\\b`,"g"),t=s.match(e),d=[];if(null!==t)for(const s of t){const o=this.getNode(s);void 0!==o&&-1===d.indexOf(o)&&d.push(o)}return d}include(s,o){const e=this.parse(o);for(const o of e)o.build(s)}}export default NodeKeywords;