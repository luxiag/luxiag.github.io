import Object3DNode from"./Object3DNode.js";import{addNodeClass}from"../core/Node.js";import{nodeImmutable}from"../shadernode/ShaderNode.js";class CameraNode extends Object3DNode{constructor(e=CameraNode.POSITION){super(e)}getNodeType(e){return this.scope===CameraNode.PROJECTION_MATRIX?"mat4":super.getNodeType(e)}update(e){const a=e.camera,o=this._uniformNode,r=this.scope;r===CameraNode.PROJECTION_MATRIX?o.value=a.projectionMatrix:r===CameraNode.VIEW_MATRIX?o.value=a.matrixWorldInverse:(this.object3d=a,super.update(e))}generate(e){return this.scope===CameraNode.PROJECTION_MATRIX&&(this._uniformNode.nodeType="mat4"),super.generate(e)}}CameraNode.PROJECTION_MATRIX="projectionMatrix";export default CameraNode;export const cameraProjectionMatrix=nodeImmutable(CameraNode,CameraNode.PROJECTION_MATRIX);export const cameraViewMatrix=nodeImmutable(CameraNode,CameraNode.VIEW_MATRIX);export const cameraNormalMatrix=nodeImmutable(CameraNode,CameraNode.NORMAL_MATRIX);export const cameraWorldMatrix=nodeImmutable(CameraNode,CameraNode.WORLD_MATRIX);export const cameraPosition=nodeImmutable(CameraNode,CameraNode.POSITION);addNodeClass(CameraNode);