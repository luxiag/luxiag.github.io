import Node,{addNodeClass}from"../core/Node.js";import{instanceIndex}from"../core/InstanceIndexNode.js";import{temp}from"../core/VarNode.js";import{buffer}from"./BufferNode.js";import{normalLocal}from"./NormalNode.js";import{positionLocal}from"./PositionNode.js";import{nodeProxy,vec3,mat3}from"../shadernode/ShaderNode.js";class InstanceNode extends Node{constructor(o){super("void"),this.instanceMesh=o;const e=buffer(o.instanceMatrix.array,"mat4",o.count);this.instanceMatrixNode=temp(e.element(instanceIndex))}generate(o){const{instanceMatrixNode:e}=this,t=e.mul(positionLocal).xyz,n=mat3(e[0].xyz,e[1].xyz,e[2].xyz),s=normalLocal.div(vec3(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2]))),a=n.mul(s).xyz;positionLocal.assign(t).build(o),normalLocal.assign(a).build(o)}}export default InstanceNode;export const instance=nodeProxy(InstanceNode);addNodeClass(InstanceNode);