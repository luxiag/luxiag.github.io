import Node,{addNodeClass}from"../core/Node.js";import{nodeProxy}from"../shadernode/ShaderNode.js";import{objectPosition}from"../accessors/Object3DNode.js";import{cameraViewMatrix}from"../accessors/CameraNode.js";class LightNode extends Node{constructor(e=LightNode.TARGET_DIRECTION,o=null){super(),this.scope=e,this.light=o}construct(){const{scope:e,light:o}=this;let t=null;return e===LightNode.TARGET_DIRECTION&&(t=cameraViewMatrix.transformDirection(objectPosition(o).sub(objectPosition(o.target)))),t}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}LightNode.TARGET_DIRECTION="targetDirection";export default LightNode;export const lightTargetDirection=nodeProxy(LightNode,LightNode.TARGET_DIRECTION);addNodeClass(LightNode);