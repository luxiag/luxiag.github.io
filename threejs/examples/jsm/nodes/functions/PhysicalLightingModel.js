import BRDF_Lambert from"./BSDF/BRDF_Lambert.js";import BRDF_GGX from"./BSDF/BRDF_GGX.js";import DFGApprox from"./BSDF/DFGApprox.js";import{lightingModel}from"../core/LightingModel.js";import{temp}from"../core/VarNode.js";import{diffuseColor,specularColor,roughness}from"../core/PropertyNode.js";import{transformedNormalView}from"../accessors/NormalNode.js";import{positionViewDirection}from"../accessors/PositionNode.js";import{ShaderNode,float,vec3}from"../shadernode/ShaderNode.js";const computeMultiscattering=(e,i,o=float(1))=>{const r=DFGApprox.call({roughness}),s=specularColor.mul(r.x).add(o.mul(r.y)),l=r.x.add(r.y).oneMinus(),t=specularColor.add(specularColor.oneMinus().mul(.047619)),d=s.mul(t).div(l.mul(t).oneMinus());e.addAssign(s),i.addAssign(d.mul(l))},RE_IndirectSpecular_Physical=new ShaderNode((e=>{const{radiance:i,iblIrradiance:o,reflectedLight:r}=e,s=temp(vec3()),l=temp(vec3()),t=o.mul(1/Math.PI);computeMultiscattering(s,l);const d=diffuseColor.mul(s.add(l).oneMinus());r.indirectSpecular.addAssign(i.mul(s)),r.indirectSpecular.addAssign(l.mul(t)),r.indirectDiffuse.addAssign(d.mul(t))})),RE_IndirectDiffuse_Physical=new ShaderNode((e=>{const{irradiance:i,reflectedLight:o}=e;o.indirectDiffuse.addAssign(i.mul(BRDF_Lambert.call({diffuseColor})))})),RE_Direct_Physical=new ShaderNode((e=>{const{lightDirection:i,lightColor:o,reflectedLight:r}=e,s=transformedNormalView.dot(i).clamp().mul(o);r.directDiffuse.addAssign(s.mul(BRDF_Lambert.call({diffuseColor:diffuseColor.rgb}))),r.directSpecular.addAssign(s.mul(BRDF_GGX.call({lightDirection:i,f0:specularColor,f90:1,roughness})))})),RE_AmbientOcclusion_Physical=new ShaderNode((({ambientOcclusion:e,reflectedLight:i})=>{const o=transformedNormalView.dot(positionViewDirection).clamp().add(e),r=roughness.mul(-16).oneMinus().negate().exp2(),s=e.sub(o.pow(r).oneMinus()).clamp();i.indirectDiffuse.mulAssign(e),i.indirectSpecular.mulAssign(s)})),physicalLightingModel=lightingModel(RE_Direct_Physical,RE_IndirectDiffuse_Physical,RE_IndirectSpecular_Physical,RE_AmbientOcclusion_Physical);export default physicalLightingModel;