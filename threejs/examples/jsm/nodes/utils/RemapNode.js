import Node,{addNodeClass}from"../core/Node.js";import{addNodeElement,nodeProxy}from"../shadernode/ShaderNode.js";class RemapNode extends Node{constructor(e,o,d,a,t){super(),this.node=e,this.inLowNode=o,this.inHighNode=d,this.outLowNode=a,this.outHighNode=t,this.doClamp=!0}construct(){const{node:e,inLowNode:o,inHighNode:d,outLowNode:a,outHighNode:t,doClamp:m}=this;let s=e.sub(o).div(d.sub(o));return!0===m&&(s=s.clamp()),s.mul(t.sub(a)).add(a)}}export default RemapNode;export const remap=nodeProxy(RemapNode,null,null,{doClamp:!1});export const remapClamp=nodeProxy(RemapNode);addNodeElement("remap",remap),addNodeElement("remapClamp",remapClamp),addNodeClass(RemapNode);