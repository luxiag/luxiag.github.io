import{Euler,EventDispatcher,Vector3}from"three";const _euler=new Euler(0,0,0,"YXZ"),_vector=new Vector3,_changeEvent={type:"change"},_lockEvent={type:"lock"},_unlockEvent={type:"unlock"},_PI_2=Math.PI/2;class PointerLockControls extends EventDispatcher{constructor(e,o){super(),this.camera=e,this.domElement=o,this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=onMouseMove.bind(this),this._onPointerlockChange=onPointerlockChange.bind(this),this._onPointerlockError=onPointerlockError.bind(this),this.connect()}connect(){this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return this.camera}getDirection(e){return e.set(0,0,-1).applyQuaternion(this.camera.quaternion)}moveForward(e){const o=this.camera;_vector.setFromMatrixColumn(o.matrix,0),_vector.crossVectors(o.up,_vector),o.position.addScaledVector(_vector,e)}moveRight(e){const o=this.camera;_vector.setFromMatrixColumn(o.matrix,0),o.position.addScaledVector(_vector,e)}lock(){this.domElement.requestPointerLock()}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function onMouseMove(e){if(!1===this.isLocked)return;const o=e.movementX||e.mozMovementX||e.webkitMovementX||0,t=e.movementY||e.mozMovementY||e.webkitMovementY||0,n=this.camera;_euler.setFromQuaternion(n.quaternion),_euler.y-=.002*o*this.pointerSpeed,_euler.x-=.002*t*this.pointerSpeed,_euler.x=Math.max(_PI_2-this.maxPolarAngle,Math.min(_PI_2-this.minPolarAngle,_euler.x)),n.quaternion.setFromEuler(_euler),this.dispatchEvent(_changeEvent)}function onPointerlockChange(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(_lockEvent),this.isLocked=!0):(this.dispatchEvent(_unlockEvent),this.isLocked=!1)}function onPointerlockError(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}export{PointerLockControls};