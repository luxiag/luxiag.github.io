import{BoxGeometry,BufferGeometry,CylinderGeometry,DoubleSide,Euler,Float32BufferAttribute,Line,LineBasicMaterial,Matrix4,Mesh,MeshBasicMaterial,Object3D,OctahedronGeometry,PlaneGeometry,Quaternion,Raycaster,SphereGeometry,TorusGeometry,Vector3}from"three";const _raycaster=new Raycaster,_tempVector=new Vector3,_tempVector2=new Vector3,_tempQuaternion=new Quaternion,_unit={X:new Vector3(1,0,0),Y:new Vector3(0,1,0),Z:new Vector3(0,0,1)},_changeEvent={type:"change"},_mouseDownEvent={type:"mouseDown"},_mouseUpEvent={type:"mouseUp",mode:null},_objectChangeEvent={type:"objectChange"};class TransformControls extends Object3D{constructor(t,e){super(),void 0===e&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),e=document),this.isTransformControls=!0,this.visible=!1,this.domElement=e,this.domElement.style.touchAction="none";const o=new TransformControlsGizmo;this._gizmo=o,this.add(o);const n=new TransformControlsPlane;this._plane=n,this.add(n);const i=this;function s(t,e){let s=e;Object.defineProperty(i,t,{get:function(){return void 0!==s?s:e},set:function(e){s!==e&&(s=e,n[t]=e,o[t]=e,i.dispatchEvent({type:t+"-changed",value:e}),i.dispatchEvent(_changeEvent))}}),i[t]=e,n[t]=e,o[t]=e}s("camera",t),s("object",void 0),s("enabled",!0),s("axis",null),s("mode","translate"),s("translationSnap",null),s("rotationSnap",null),s("scaleSnap",null),s("space","world"),s("size",1),s("dragging",!1),s("showX",!0),s("showY",!0),s("showZ",!0);const r=new Vector3,a=new Vector3,h=new Quaternion,l=new Quaternion,c=new Vector3,p=new Quaternion,m=new Vector3,d=new Vector3,u=new Vector3,_=new Vector3;s("worldPosition",r),s("worldPositionStart",a),s("worldQuaternion",h),s("worldQuaternionStart",l),s("cameraPosition",c),s("cameraQuaternion",p),s("pointStart",m),s("pointEnd",d),s("rotationAxis",u),s("rotationAngle",0),s("eye",_),this._offset=new Vector3,this._startNorm=new Vector3,this._endNorm=new Vector3,this._cameraScale=new Vector3,this._parentPosition=new Vector3,this._parentQuaternion=new Quaternion,this._parentQuaternionInv=new Quaternion,this._parentScale=new Vector3,this._worldScaleStart=new Vector3,this._worldQuaternionInv=new Quaternion,this._worldScale=new Vector3,this._positionStart=new Vector3,this._quaternionStart=new Quaternion,this._scaleStart=new Vector3,this._getPointer=getPointer.bind(this),this._onPointerDown=onPointerDown.bind(this),this._onPointerHover=onPointerHover.bind(this),this._onPointerMove=onPointerMove.bind(this),this._onPointerUp=onPointerUp.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(t){if(void 0===this.object||!0===this.dragging)return;_raycaster.setFromCamera(t,this.camera);const e=intersectObjectWithRay(this._gizmo.picker[this.mode],_raycaster);this.axis=e?e.object.name:null}pointerDown(t){if(void 0!==this.object&&!0!==this.dragging&&0===t.button&&null!==this.axis){_raycaster.setFromCamera(t,this.camera);const e=intersectObjectWithRay(this._plane,_raycaster,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,_mouseDownEvent.mode=this.mode,this.dispatchEvent(_mouseDownEvent)}}pointerMove(t){const e=this.axis,o=this.mode,n=this.object;let i=this.space;if("scale"===o?i="local":"E"!==e&&"XYZE"!==e&&"XYZ"!==e||(i="world"),void 0===n||null===e||!1===this.dragging||-1!==t.button)return;_raycaster.setFromCamera(t,this.camera);const s=intersectObjectWithRay(this._plane,_raycaster,!0);if(s){if(this.pointEnd.copy(s.point).sub(this.worldPositionStart),"translate"===o)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===i&&"XYZ"!==e&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===e.indexOf("X")&&(this._offset.x=0),-1===e.indexOf("Y")&&(this._offset.y=0),-1===e.indexOf("Z")&&(this._offset.z=0),"local"===i&&"XYZ"!==e?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===i&&(n.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert()),-1!==e.search("X")&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),"world"===i&&(n.parent&&n.position.add(_tempVector.setFromMatrixPosition(n.parent.matrixWorld)),-1!==e.search("X")&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(_tempVector.setFromMatrixPosition(n.parent.matrixWorld))));else if("scale"===o){if(-1!==e.search("XYZ")){let t=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(t*=-1),_tempVector2.set(t,t,t)}else _tempVector.copy(this.pointStart),_tempVector2.copy(this.pointEnd),_tempVector.applyQuaternion(this._worldQuaternionInv),_tempVector2.applyQuaternion(this._worldQuaternionInv),_tempVector2.divide(_tempVector),-1===e.search("X")&&(_tempVector2.x=1),-1===e.search("Y")&&(_tempVector2.y=1),-1===e.search("Z")&&(_tempVector2.z=1);n.scale.copy(this._scaleStart).multiply(_tempVector2),this.scaleSnap&&(-1!==e.search("X")&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Y")&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Z")&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===o){this._offset.copy(this.pointEnd).sub(this.pointStart);const t=20/this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));"E"===e?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1):"XYZE"===e?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye))*t):"X"!==e&&"Y"!==e&&"Z"!==e||(this.rotationAxis.copy(_unit[e]),_tempVector.copy(_unit[e]),"local"===i&&_tempVector.applyQuaternion(this.worldQuaternion),this.rotationAngle=this._offset.dot(_tempVector.cross(this.eye).normalize())*t),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===i&&"E"!==e&&"XYZE"!==e?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(_changeEvent),this.dispatchEvent(_objectChangeEvent)}}pointerUp(t){0===t.button&&(this.dragging&&null!==this.axis&&(_mouseUpEvent.mode=this.mode,this.dispatchEvent(_mouseUpEvent)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse((function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}))}attach(t){return this.object=t,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(_changeEvent),this.dispatchEvent(_objectChangeEvent),this.pointStart.copy(this.pointEnd))}getRaycaster(){return _raycaster}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}}function getPointer(t){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:t.button};{const e=this.domElement.getBoundingClientRect();return{x:(t.clientX-e.left)/e.width*2-1,y:-(t.clientY-e.top)/e.height*2+1,button:t.button}}}function onPointerHover(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(t))}}function onPointerDown(t){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(t)),this.pointerDown(this._getPointer(t)))}function onPointerMove(t){this.enabled&&this.pointerMove(this._getPointer(t))}function onPointerUp(t){this.enabled&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(t)))}function intersectObjectWithRay(t,e,o){const n=e.intersectObject(t,!0);for(let t=0;t<n.length;t++)if(n[t].object.visible||o)return n[t];return!1}const _tempEuler=new Euler,_alignVector=new Vector3(0,1,0),_zeroVector=new Vector3(0,0,0),_lookAtMatrix=new Matrix4,_tempQuaternion2=new Quaternion,_identityQuaternion=new Quaternion,_dirVector=new Vector3,_tempMatrix=new Matrix4,_unitX=new Vector3(1,0,0),_unitY=new Vector3(0,1,0),_unitZ=new Vector3(0,0,1),_v1=new Vector3,_v2=new Vector3,_v3=new Vector3;class TransformControlsGizmo extends Object3D{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new LineBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),o=t.clone();o.opacity=.15;const n=e.clone();n.opacity=.5;const i=t.clone();i.color.setHex(16711680);const s=t.clone();s.color.setHex(65280);const r=t.clone();r.color.setHex(255);const a=t.clone();a.color.setHex(16711680),a.opacity=.5;const h=t.clone();h.color.setHex(65280),h.opacity=.5;const l=t.clone();l.color.setHex(255),l.opacity=.5;const c=t.clone();c.opacity=.25;const p=t.clone();p.color.setHex(16776960),p.opacity=.25,t.clone().color.setHex(16776960);const m=t.clone();m.color.setHex(7895160);const d=new CylinderGeometry(0,.04,.1,12);d.translate(0,.05,0);const u=new BoxGeometry(.08,.08,.08);u.translate(0,.04,0);const _=new BufferGeometry;_.setAttribute("position",new Float32BufferAttribute([0,0,0,1,0,0],3));const y=new CylinderGeometry(.0075,.0075,.5,3);function w(t,e){const o=new TorusGeometry(t,.0075,3,64,e*Math.PI*2);return o.rotateY(Math.PI/2),o.rotateX(Math.PI/2),o}y.translate(0,.25,0);const M={X:[[new Mesh(d,i),[.5,0,0],[0,0,-Math.PI/2]],[new Mesh(d,i),[-.5,0,0],[0,0,Math.PI/2]],[new Mesh(y,i),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new Mesh(d,s),[0,.5,0]],[new Mesh(d,s),[0,-.5,0],[Math.PI,0,0]],[new Mesh(y,s)]],Z:[[new Mesh(d,r),[0,0,.5],[Math.PI/2,0,0]],[new Mesh(d,r),[0,0,-.5],[-Math.PI/2,0,0]],[new Mesh(y,r),null,[Math.PI/2,0,0]]],XYZ:[[new Mesh(new OctahedronGeometry(.1,0),c.clone()),[0,0,0]]],XY:[[new Mesh(new BoxGeometry(.15,.15,.01),l.clone()),[.15,.15,0]]],YZ:[[new Mesh(new BoxGeometry(.15,.15,.01),a.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Mesh(new BoxGeometry(.15,.15,.01),h.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},v={X:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[.3,0,0],[0,0,-Math.PI/2]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,.3,0]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,0,.3],[Math.PI/2,0,0]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new Mesh(new OctahedronGeometry(.2,0),o)]],XY:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[.15,.15,0]]],YZ:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[.15,0,.15],[-Math.PI/2,0,0]]]},g={START:[[new Mesh(new OctahedronGeometry(.01,2),n),null,null,null,"helper"]],END:[[new Mesh(new OctahedronGeometry(.01,2),n),null,null,null,"helper"]],DELTA:[[new Line(function(){const t=new BufferGeometry;return t.setAttribute("position",new Float32BufferAttribute([0,0,0,1,1,1],3)),t}(),n),null,null,null,"helper"]],X:[[new Line(_,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Line(_,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Line(_,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},b={XYZE:[[new Mesh(w(.5,1),m),null,[0,Math.PI/2,0]]],X:[[new Mesh(w(.5,.5),i)]],Y:[[new Mesh(w(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new Mesh(w(.5,.5),r),null,[0,Math.PI/2,0]]],E:[[new Mesh(w(.75,1),p),null,[0,Math.PI/2,0]]]},x={AXIS:[[new Line(_,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},P={XYZE:[[new Mesh(new SphereGeometry(.25,10,8),o)]],X:[[new Mesh(new TorusGeometry(.5,.1,4,24),o),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Mesh(new TorusGeometry(.5,.1,4,24),o),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Mesh(new TorusGeometry(.5,.1,4,24),o),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Mesh(new TorusGeometry(.75,.1,2,24),o)]]},f={X:[[new Mesh(u,i),[.5,0,0],[0,0,-Math.PI/2]],[new Mesh(y,i),[0,0,0],[0,0,-Math.PI/2]],[new Mesh(u,i),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new Mesh(u,s),[0,.5,0]],[new Mesh(y,s)],[new Mesh(u,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new Mesh(u,r),[0,0,.5],[Math.PI/2,0,0]],[new Mesh(y,r),[0,0,0],[Math.PI/2,0,0]],[new Mesh(u,r),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new Mesh(new BoxGeometry(.15,.15,.01),l),[.15,.15,0]]],YZ:[[new Mesh(new BoxGeometry(.15,.15,.01),a),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Mesh(new BoxGeometry(.15,.15,.01),h),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Mesh(new BoxGeometry(.1,.1,.1),c.clone())]]},Q={X:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[.3,0,0],[0,0,-Math.PI/2]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,.3,0]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,0,.3],[Math.PI/2,0,0]],[new Mesh(new CylinderGeometry(.2,0,.6,4),o),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[.15,.15,0]]],YZ:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Mesh(new BoxGeometry(.2,.2,.01),o),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Mesh(new BoxGeometry(.2,.2,.2),o),[0,0,0]]]},S={X:[[new Line(_,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Line(_,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Line(_,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function V(t){const e=new Object3D;for(const o in t)for(let n=t[o].length;n--;){const i=t[o][n][0].clone(),s=t[o][n][1],r=t[o][n][2],a=t[o][n][3],h=t[o][n][4];i.name=o,i.tag=h,s&&i.position.set(s[0],s[1],s[2]),r&&i.rotation.set(r[0],r[1],r[2]),a&&i.scale.set(a[0],a[1],a[2]),i.updateMatrix();const l=i.geometry.clone();l.applyMatrix4(i.matrix),i.geometry=l,i.renderOrder=1/0,i.position.set(0,0,0),i.rotation.set(0,0,0),i.scale.set(1,1,1),e.add(i)}return e}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=V(M)),this.add(this.gizmo.rotate=V(b)),this.add(this.gizmo.scale=V(f)),this.add(this.picker.translate=V(v)),this.add(this.picker.rotate=V(P)),this.add(this.picker.scale=V(Q)),this.add(this.helper.translate=V(g)),this.add(this.helper.rotate=V(x)),this.add(this.helper.scale=V(S)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const e="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:_identityQuaternion;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let o=[];o=o.concat(this.picker[this.mode].children),o=o.concat(this.gizmo[this.mode].children),o=o.concat(this.helper[this.mode].children);for(let t=0;t<o.length;t++){const n=o[t];let i;if(n.visible=!0,n.rotation.set(0,0,0),n.position.copy(this.worldPosition),i=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),n.scale.set(1,1,1).multiplyScalar(i*this.size/4),"helper"!==n.tag){if(n.quaternion.copy(e),"translate"===this.mode||"scale"===this.mode){const t=.99,o=.2;"X"===n.name&&Math.abs(_alignVector.copy(_unitX).applyQuaternion(e).dot(this.eye))>t&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),"Y"===n.name&&Math.abs(_alignVector.copy(_unitY).applyQuaternion(e).dot(this.eye))>t&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),"Z"===n.name&&Math.abs(_alignVector.copy(_unitZ).applyQuaternion(e).dot(this.eye))>t&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),"XY"===n.name&&Math.abs(_alignVector.copy(_unitZ).applyQuaternion(e).dot(this.eye))<o&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),"YZ"===n.name&&Math.abs(_alignVector.copy(_unitX).applyQuaternion(e).dot(this.eye))<o&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1),"XZ"===n.name&&Math.abs(_alignVector.copy(_unitY).applyQuaternion(e).dot(this.eye))<o&&(n.scale.set(1e-10,1e-10,1e-10),n.visible=!1)}else"rotate"===this.mode&&(_tempQuaternion2.copy(e),_alignVector.copy(this.eye).applyQuaternion(_tempQuaternion.copy(e).invert()),-1!==n.name.search("E")&&n.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(this.eye,_zeroVector,_unitY)),"X"===n.name&&(_tempQuaternion.setFromAxisAngle(_unitX,Math.atan2(-_alignVector.y,_alignVector.z)),_tempQuaternion.multiplyQuaternions(_tempQuaternion2,_tempQuaternion),n.quaternion.copy(_tempQuaternion)),"Y"===n.name&&(_tempQuaternion.setFromAxisAngle(_unitY,Math.atan2(_alignVector.x,_alignVector.z)),_tempQuaternion.multiplyQuaternions(_tempQuaternion2,_tempQuaternion),n.quaternion.copy(_tempQuaternion)),"Z"===n.name&&(_tempQuaternion.setFromAxisAngle(_unitZ,Math.atan2(_alignVector.y,_alignVector.x)),_tempQuaternion.multiplyQuaternions(_tempQuaternion2,_tempQuaternion),n.quaternion.copy(_tempQuaternion)));n.visible=n.visible&&(-1===n.name.indexOf("X")||this.showX),n.visible=n.visible&&(-1===n.name.indexOf("Y")||this.showY),n.visible=n.visible&&(-1===n.name.indexOf("Z")||this.showZ),n.visible=n.visible&&(-1===n.name.indexOf("E")||this.showX&&this.showY&&this.showZ),n.material._color=n.material._color||n.material.color.clone(),n.material._opacity=n.material._opacity||n.material.opacity,n.material.color.copy(n.material._color),n.material.opacity=n.material._opacity,this.enabled&&this.axis&&(n.name===this.axis||this.axis.split("").some((function(t){return n.name===t})))&&(n.material.color.setHex(16776960),n.material.opacity=1)}else n.visible=!1,"AXIS"===n.name?(n.visible=!!this.axis,"X"===this.axis&&(_tempQuaternion.setFromEuler(_tempEuler.set(0,0,0)),n.quaternion.copy(e).multiply(_tempQuaternion),Math.abs(_alignVector.copy(_unitX).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),"Y"===this.axis&&(_tempQuaternion.setFromEuler(_tempEuler.set(0,0,Math.PI/2)),n.quaternion.copy(e).multiply(_tempQuaternion),Math.abs(_alignVector.copy(_unitY).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),"Z"===this.axis&&(_tempQuaternion.setFromEuler(_tempEuler.set(0,Math.PI/2,0)),n.quaternion.copy(e).multiply(_tempQuaternion),Math.abs(_alignVector.copy(_unitZ).applyQuaternion(e).dot(this.eye))>.9&&(n.visible=!1)),"XYZE"===this.axis&&(_tempQuaternion.setFromEuler(_tempEuler.set(0,Math.PI/2,0)),_alignVector.copy(this.rotationAxis),n.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector,_alignVector,_unitY)),n.quaternion.multiply(_tempQuaternion),n.visible=this.dragging),"E"===this.axis&&(n.visible=!1)):"START"===n.name?(n.position.copy(this.worldPositionStart),n.visible=this.dragging):"END"===n.name?(n.position.copy(this.worldPosition),n.visible=this.dragging):"DELTA"===n.name?(n.position.copy(this.worldPositionStart),n.quaternion.copy(this.worldQuaternionStart),_tempVector.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),_tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert()),n.scale.copy(_tempVector),n.visible=this.dragging):(n.quaternion.copy(e),this.dragging?n.position.copy(this.worldPositionStart):n.position.copy(this.worldPosition),this.axis&&(n.visible=-1!==this.axis.search(n.name)))}super.updateMatrixWorld(t)}}class TransformControlsPlane extends Mesh{constructor(){super(new PlaneGeometry(1e5,1e5,2,2),new MeshBasicMaterial({visible:!1,wireframe:!0,side:DoubleSide,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(e="local"),_v1.copy(_unitX).applyQuaternion("local"===e?this.worldQuaternion:_identityQuaternion),_v2.copy(_unitY).applyQuaternion("local"===e?this.worldQuaternion:_identityQuaternion),_v3.copy(_unitZ).applyQuaternion("local"===e?this.worldQuaternion:_identityQuaternion),_alignVector.copy(_v2),this.mode){case"translate":case"scale":switch(this.axis){case"X":_alignVector.copy(this.eye).cross(_v1),_dirVector.copy(_v1).cross(_alignVector);break;case"Y":_alignVector.copy(this.eye).cross(_v2),_dirVector.copy(_v2).cross(_alignVector);break;case"Z":_alignVector.copy(this.eye).cross(_v3),_dirVector.copy(_v3).cross(_alignVector);break;case"XY":_dirVector.copy(_v3);break;case"YZ":_dirVector.copy(_v1);break;case"XZ":_alignVector.copy(_v3),_dirVector.copy(_v2);break;case"XYZ":case"E":_dirVector.set(0,0,0)}break;default:_dirVector.set(0,0,0)}0===_dirVector.length()?this.quaternion.copy(this.cameraQuaternion):(_tempMatrix.lookAt(_tempVector.set(0,0,0),_dirVector,_alignVector),this.quaternion.setFromRotationMatrix(_tempMatrix)),super.updateMatrixWorld(t)}}export{TransformControls,TransformControlsGizmo,TransformControlsPlane};