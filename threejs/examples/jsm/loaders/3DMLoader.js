import{BufferGeometryLoader,FileLoader,Loader,Object3D,MeshStandardMaterial,Mesh,Color,Points,PointsMaterial,Line,LineBasicMaterial,Matrix4,DirectionalLight,PointLight,SpotLight,RectAreaLight,Sprite,SpriteMaterial,CanvasTexture,LinearFilter,ClampToEdgeWrapping,RepeatWrapping,TextureLoader,DoubleSide}from"three";const _taskCache=new WeakMap;class Rhino3dmLoader extends Loader{constructor(e){super(e),this.libraryPath="",this.libraryPending=null,this.libraryBinary=null,this.libraryConfig={},this.url="",this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.workerConfig={},this.materials=[],this.warnings=[]}setLibraryPath(e){return this.libraryPath=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,r,a){const s=new FileLoader(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),this.url=e,s.load(e,(r=>{if(_taskCache.has(r))return _taskCache.get(r).promise.then(t).catch(a);this.decodeObjects(r,e).then((e=>{e.userData.warnings=this.warnings,t(e)})).catch((e=>a(e)))}),r,a)}debug(){console.log("Task load: ",this.workerPool.map((e=>e._taskLoad)))}decodeObjects(e,t){let r,a;const s=e.byteLength,o=this._getWorker(s).then((t=>(r=t,a=this.workerNextTaskID++,new Promise(((t,s)=>{r._callbacks[a]={resolve:t,reject:s},r.postMessage({type:"decode",id:a,buffer:e},[e])}))))).then((e=>this._createGeometry(e.data))).catch((e=>{throw e}));return o.catch((()=>!0)).then((()=>{r&&a&&this._releaseTask(r,a)})),_taskCache.set(e,{url:t,promise:o}),o}parse(e,t,r){this.decodeObjects(e,"").then((e=>{e.userData.warnings=this.warnings,t(e)})).catch((e=>r(e)))}_compareMaterials(e){const t={};t.name=e.name,t.color={},t.color.r=e.color.r,t.color.g=e.color.g,t.color.b=e.color.b,t.type=e.type;const r=JSON.stringify(t);for(let e=0;e<this.materials.length;e++){const t=this.materials[e],a={};if(a.name=t.name,a.color={},a.color.r=t.color.r,a.color.g=t.color.g,a.color.b=t.color.b,a.type=t.type,JSON.stringify(a)===r)return t}return this.materials.push(e),e}_createMaterial(e){if(void 0===e)return new MeshStandardMaterial({color:new Color(1,1,1),metalness:.8,name:"default",side:DoubleSide});const t=e.diffuseColor,r=new Color(t.r/255,t.g/255,t.b/255);0===t.r&&0===t.g&&0===t.b&&(r.r=1,r.g=1,r.b=1);const a=new MeshStandardMaterial({color:r,name:e.name,side:DoubleSide,transparent:e.transparency>0,opacity:1-e.transparency}),s=new TextureLoader;for(let t=0;t<e.textures.length;t++){const r=e.textures[t];if(null!==r.image){const e=s.load(r.image);switch(r.type){case"Diffuse":a.map=e;break;case"Bump":a.bumpMap=e;break;case"Transparency":a.alphaMap=e,a.transparent=!0;break;case"Emap":a.envMap=e}e.wrapS=0===r.wrapU?RepeatWrapping:ClampToEdgeWrapping,e.wrapT=0===r.wrapV?RepeatWrapping:ClampToEdgeWrapping,e.repeat.set(r.repeat[0],r.repeat[1])}}return a}_createGeometry(e){const t=new Object3D,r=[],a=[],s=[];t.userData.layers=e.layers,t.userData.groups=e.groups,t.userData.settings=e.settings,t.userData.objectType="File3dm",t.userData.materials=null,t.name=this.url;let o=e.objects;const n=e.materials;for(let i=0;i<o.length;i++){const c=o[i],l=c.attributes;switch(c.objectType){case"InstanceDefinition":a.push(c);break;case"InstanceReference":s.push(c);break;default:let o;if(l.materialIndex>=0){const e=n[l.materialIndex];let t=this._createMaterial(e);t=this._compareMaterials(t),o=this._createObject(c,t)}else{const e=this._createMaterial();o=this._createObject(c,e)}if(void 0===o)continue;const i=e.layers[l.layerIndex];o.visible=!i||e.layers[l.layerIndex].visible,l.isInstanceDefinitionObject?r.push(o):t.add(o)}}for(let e=0;e<a.length;e++){const n=a[e];o=[];for(let e=0;e<n.attributes.objectIds.length;e++){const t=n.attributes.objectIds[e];for(let e=0;e<r.length;e++)t===r[e].userData.attributes.id&&o.push(r[e])}for(let e=0;e<s.length;e++){const r=s[e];if(r.geometry.parentIdefId===n.attributes.id){const e=new Object3D,a=r.geometry.xform.array,s=new Matrix4;s.set(...a),e.applyMatrix4(s);for(let t=0;t<o.length;t++)e.add(o[t].clone(!0));t.add(e)}}}return t.userData.materials=this.materials,t}_createObject(e,t){const r=new BufferGeometryLoader,a=e.attributes;let s,o,n,i;switch(e.objectType){case"Point":case"PointSet":s=r.parse(e.geometry),s.attributes.hasOwnProperty("color")?o=new PointsMaterial({vertexColors:!0,sizeAttenuation:!1,size:2}):(n=a.drawColor,i=new Color(n.r/255,n.g/255,n.b/255),o=new PointsMaterial({color:i,sizeAttenuation:!1,size:2})),o=this._compareMaterials(o);const c=new Points(s,o);return c.userData.attributes=a,c.userData.objectType=e.objectType,a.name&&(c.name=a.name),c;case"Mesh":case"Extrusion":case"SubD":case"Brep":if(null===e.geometry)return;s=r.parse(e.geometry),s.attributes.hasOwnProperty("color")&&(t.vertexColors=!0),null===t&&(t=this._createMaterial(),t=this._compareMaterials(t));const l=new Mesh(s,t);return l.castShadow=a.castsShadows,l.receiveShadow=a.receivesShadows,l.userData.attributes=a,l.userData.objectType=e.objectType,a.name&&(l.name=a.name),l;case"Curve":s=r.parse(e.geometry),n=a.drawColor,i=new Color(n.r/255,n.g/255,n.b/255),o=new LineBasicMaterial({color:i}),o=this._compareMaterials(o);const p=new Line(s,o);return p.userData.attributes=a,p.userData.objectType=e.objectType,a.name&&(p.name=a.name),p;case"TextDot":s=e.geometry;const u=document.createElement("canvas").getContext("2d"),h=`${s.fontHeight}px ${s.fontFace}`;u.font=h;const d=u.measureText(s.text).width+10,g=s.fontHeight+10,y=window.devicePixelRatio;u.canvas.width=d*y,u.canvas.height=g*y,u.canvas.style.width=d+"px",u.canvas.style.height=g+"px",u.setTransform(y,0,0,y,0,0),u.font=h,u.textBaseline="middle",u.textAlign="center",i=a.drawColor,u.fillStyle=`rgba(${i.r},${i.g},${i.b},${i.a})`,u.fillRect(0,0,d,g),u.fillStyle="white",u.fillText(s.text,d/2,g/2);const m=new CanvasTexture(u.canvas);m.minFilter=LinearFilter,m.wrapS=ClampToEdgeWrapping,m.wrapT=ClampToEdgeWrapping,o=new SpriteMaterial({map:m,depthTest:!1});const b=new Sprite(o);return b.position.set(s.point[0],s.point[1],s.point[2]),b.scale.set(d/10,g/10,1),b.userData.attributes=a,b.userData.objectType=e.objectType,a.name&&(b.name=a.name),b;case"Light":let f;switch(s=e.geometry,s.lightStyle.name){case"LightStyle_WorldPoint":f=new PointLight,f.castShadow=a.castsShadows,f.position.set(s.location[0],s.location[1],s.location[2]),f.shadow.normalBias=.1;break;case"LightStyle_WorldSpot":f=new SpotLight,f.castShadow=a.castsShadows,f.position.set(s.location[0],s.location[1],s.location[2]),f.target.position.set(s.direction[0],s.direction[1],s.direction[2]),f.angle=s.spotAngleRadians,f.shadow.normalBias=.1;break;case"LightStyle_WorldRectangular":f=new RectAreaLight;const e=Math.abs(s.width[2]),t=Math.abs(s.length[0]);f.position.set(s.location[0]-t/2,s.location[1],s.location[2]-e/2),f.height=t,f.width=e,f.lookAt(s.direction[0],s.direction[1],s.direction[2]);break;case"LightStyle_WorldDirectional":f=new DirectionalLight,f.castShadow=a.castsShadows,f.position.set(s.location[0],s.location[1],s.location[2]),f.target.position.set(s.direction[0],s.direction[1],s.direction[2]),f.shadow.normalBias=.1}return f&&(f.intensity=s.intensity,n=s.diffuse,i=new Color(n.r/255,n.g/255,n.b/255),f.color=i,f.userData.attributes=a,f.userData.objectType=e.objectType),f}}_initLibrary(){if(!this.libraryPending){const e=new FileLoader(this.manager);e.setPath(this.libraryPath);const t=new Promise(((t,r)=>{e.load("rhino3dm.js",t,void 0,r)})),r=new FileLoader(this.manager);r.setPath(this.libraryPath),r.setResponseType("arraybuffer");const a=new Promise(((e,t)=>{r.load("rhino3dm.wasm",e,void 0,t)}));this.libraryPending=Promise.all([t,a]).then((([e,t])=>{this.libraryConfig.wasmBinary=t;const r=Rhino3dmWorker.toString(),a=["/* rhino3dm.js */",e,"/* worker */",r.substring(r.indexOf("{")+1,r.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([a]))}))}return this.libraryPending}_getWorker(e){return this._initLibrary().then((()=>{if(this.workerPool.length<this.workerLimit){const e=new Worker(this.workerSourceURL);e._callbacks={},e._taskCosts={},e._taskLoad=0,e.postMessage({type:"init",libraryConfig:this.libraryConfig}),e.onmessage=t=>{const r=t.data;switch(r.type){case"warning":this.warnings.push(r.data),console.warn(r.data);break;case"decode":e._callbacks[r.id].resolve(r);break;case"error":e._callbacks[r.id].reject(r);break;default:console.error('THREE.Rhino3dmLoader: Unexpected message, "'+r.type+'"')}},this.workerPool.push(e)}else this.workerPool.sort((function(e,t){return e._taskLoad>t._taskLoad?-1:1}));const t=this.workerPool[this.workerPool.length-1];return t._taskLoad+=e,t}))}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function Rhino3dmWorker(){let e,t,r,a;function s(e,t){const s=e.geometry(),i=e.attributes();let c,l,p,u,h,d=s.objectType;switch(d){case r.ObjectType.Curve:const e=n(s,100);p={},l={},u={},p.itemSize=3,p.type="Float32Array",p.array=[];for(let t=0;t<e.length;t++)p.array.push(e[t][0]),p.array.push(e[t][1]),p.array.push(e[t][2]);l.position=p,u.attributes=l,c={data:u};break;case r.ObjectType.Point:const g=s.location;p={};const y={};l={},u={},p.itemSize=3,p.type="Float32Array",p.array=[g[0],g[1],g[2]];const m=i.drawColor(t);y.itemSize=3,y.type="Float32Array",y.array=[m.r/255,m.g/255,m.b/255],l.position=p,l.color=y,u.attributes=l,c={data:u};break;case r.ObjectType.PointSet:case r.ObjectType.Mesh:c=s.toThreejsJSON();break;case r.ObjectType.Brep:const b=s.faces();h=new r.Mesh;for(let e=0;e<b.count;e++){const t=b.get(e),a=t.getMesh(r.MeshType.Any);a&&(h.append(a),a.delete()),t.delete()}h.faces().count>0&&(h.compact(),c=h.toThreejsJSON(),b.delete()),h.delete();break;case r.ObjectType.Extrusion:h=s.getMesh(r.MeshType.Any),h&&(c=h.toThreejsJSON(),h.delete());break;case r.ObjectType.TextDot:c=o(s);break;case r.ObjectType.Light:c=o(s),"LightStyle_WorldLinear"===c.lightStyle.name&&self.postMessage({type:"warning",id:a,data:{message:`THREE.3DMLoader: No conversion exists for ${d.constructor.name} ${c.lightStyle.name}`,type:"no conversion",guid:i.id}});break;case r.ObjectType.InstanceReference:c=o(s),c.xform=o(s.xform),c.xform.array=s.xform.toFloatArray(!0);break;case r.ObjectType.SubD:s.subdivide(3),h=r.Mesh.createFromSubDControlNet(s),h&&(c=h.toThreejsJSON(),h.delete());break;default:self.postMessage({type:"warning",id:a,data:{message:`THREE.3DMLoader: Conversion not implemented for ${d.constructor.name}`,type:"not implemented",guid:i.id}})}if(c)return l=o(i),l.geometry=o(s),i.groupCount>0&&(l.groupIds=i.getGroupList()),i.userStringCount>0&&(l.userStrings=i.getUserStrings()),s.userStringCount>0&&(l.geometry.userStrings=s.getUserStrings()),l.drawColor=i.drawColor(t),d=d.constructor.name,d=d.substring(11,d.length),{geometry:c,attributes:l,objectType:d};self.postMessage({type:"warning",id:a,data:{message:`THREE.3DMLoader: ${d.constructor.name} has no associated mesh geometry.`,type:"missing mesh",guid:i.id}})}function o(e){const t={};for(const r in e){const a=e[r];"function"!=typeof a&&("object"==typeof a&&null!==a&&a.hasOwnProperty("constructor")?t[r]={name:a.constructor.name,value:a.value}:t[r]=a)}return t}function n(e,t){let a=t,s=[];const o=[];if(e instanceof r.LineCurve)return[e.pointAtStart,e.pointAtEnd];if(e instanceof r.PolylineCurve){a=e.pointCount;for(let t=0;t<a;t++)s.push(e.point(t));return s}if(e instanceof r.PolyCurve){const t=e.segmentCount;for(let r=0;r<t;r++){const t=e.segmentCurve(r),o=n(t,a);s=s.concat(o),t.delete()}return s}if(e instanceof r.ArcCurve&&(a=Math.floor(e.angleDegrees/5),a=a<2?2:a),e instanceof r.NurbsCurve&&1===e.degree){const t=e.tryGetPolyline();for(let e=0;e<t.count;e++)s.push(t.get(e));return t.delete(),s}const i=e.domain,c=a-1;for(let t=0;t<a;t++){const r=i[0]+t/c*(i[1]-i[0]);if(r===i[0]||r===i[1]){o.push(r);continue}const a=e.tangentAt(r),s=e.tangentAt(o.slice(-1)[0]),n=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],l=s[0]*s[0]+s[1]*s[1]+s[2]*s[2],p=Math.sqrt(n*l);let u;if(0===p)u=Math.PI/2;else{const e=(a.x*s.x+a.y*s.y+a.z*s.z)/p;u=Math.acos(Math.max(-1,Math.min(1,e)))}u<.1||o.push(r)}return s=o.map((t=>e.pointAt(t))),s}onmessage=function(n){const i=n.data;switch(i.type){case"init":t=i.libraryConfig;const n=t.wasmBinary;let c;e=new Promise((function(e){c={wasmBinary:n,onRuntimeInitialized:e},rhino3dm(c)})).then((()=>{r=c}));break;case"decode":a=i.id;const l=i.buffer;e.then((()=>{try{const e=function(e,t){const r=new Uint8Array(t),n=e.File3dm.fromByteArray(r),i=[],c=[],l=[],p=[],u=[],h=[],d=[],g=n.objects(),y=g.count;for(let e=0;e<y;e++){const t=g.get(e),r=s(t,n);t.delete(),r&&i.push(r)}for(let e=0;e<n.instanceDefinitions().count();e++){const t=n.instanceDefinitions().get(e),r=o(t);r.objectIds=t.getObjectIds(),i.push({geometry:null,attributes:r,objectType:"InstanceDefinition"})}const m=[e.TextureType.Diffuse,e.TextureType.Bump,e.TextureType.Transparency,e.TextureType.Opacity,e.TextureType.Emap],b=[e.TextureType.PBR_BaseColor,e.TextureType.PBR_Subsurface,e.TextureType.PBR_SubsurfaceScattering,e.TextureType.PBR_SubsurfaceScatteringRadius,e.TextureType.PBR_Metallic,e.TextureType.PBR_Specular,e.TextureType.PBR_SpecularTint,e.TextureType.PBR_Roughness,e.TextureType.PBR_Anisotropic,e.TextureType.PBR_Anisotropic_Rotation,e.TextureType.PBR_Sheen,e.TextureType.PBR_SheenTint,e.TextureType.PBR_Clearcoat,e.TextureType.PBR_ClearcoatBump,e.TextureType.PBR_ClearcoatRoughness,e.TextureType.PBR_OpacityIor,e.TextureType.PBR_OpacityRoughness,e.TextureType.PBR_Emission,e.TextureType.PBR_AmbientOcclusion,e.TextureType.PBR_Displacement];for(let e=0;e<n.materials().count();e++){const t=n.materials().get(e),r=t.physicallyBased();let s=o(t);const i=[];for(let e=0;e<m.length;e++){const r=t.getTexture(m[e]);if(r){let t=m[e].constructor.name;t=t.substring(12,t.length);const s={type:t},o=n.getEmbeddedFileAsBase64(r.fileName);s.wrapU=r.wrapU,s.wrapV=r.wrapV,s.wrapW=r.wrapW;const c=r.uvwTransform.toFloatArray(!0);s.repeat=[c[0],c[5]],o?s.image="data:image/png;base64,"+o:(self.postMessage({type:"warning",id:a,data:{message:`THREE.3DMLoader: Image for ${t} texture not embedded in file.`,type:"missing resource"}}),s.image=null),i.push(s),r.delete()}}if(s.textures=i,r.supported){for(let e=0;e<b.length;e++){const r=t.getTexture(b[e]);if(r){const t=n.getEmbeddedFileAsBase64(r.fileName);let a=b[e].constructor.name;a=a.substring(12,a.length);const s={type:a,image:"data:image/png;base64,"+t};i.push(s),r.delete()}}const e=o(t.physicallyBased());s=Object.assign(e,s)}c.push(s),t.delete(),r.delete()}for(let e=0;e<n.layers().count();e++){const t=n.layers().get(e),r=o(t);l.push(r),t.delete()}for(let e=0;e<n.views().count();e++){const t=n.views().get(e),r=o(t);p.push(r),t.delete()}for(let e=0;e<n.namedViews().count();e++){const t=n.namedViews().get(e),r=o(t);u.push(r),t.delete()}for(let e=0;e<n.groups().count();e++){const t=n.groups().get(e),r=o(t);h.push(r),t.delete()}const f=o(n.settings()),w=n.strings().count();for(let e=0;e<w;e++)d.push(n.strings().get(e));return n.delete(),{objects:i,materials:c,layers:l,views:p,namedViews:u,groups:h,strings:d,settings:f}}(r,l);self.postMessage({type:"decode",id:i.id,data:e})}catch(e){self.postMessage({type:"error",id:i.id,error:e})}}))}}}export{Rhino3dmLoader};