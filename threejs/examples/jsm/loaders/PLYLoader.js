import{BufferGeometry,FileLoader,Float32BufferAttribute,Loader,Color}from"three";const _color=new Color;class PLYLoader extends Loader{constructor(e){super(e),this.propertyNameMapping={},this.customPropertyMapping={}}load(e,t,r,n){const s=this,o=new FileLoader(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(r){try{t(s.parse(r))}catch(t){n?n(t):console.error(t),s.manager.itemError(e)}}),r,n)}setPropertyNameMapping(e){this.propertyNameMapping=e}setCustomPropertyNameMapping(e){this.customPropertyMapping=e}parse(e){function t(e){let t="",r=0;const n=/^ply([\s\S]*)end_header(\r\n|\r|\n)/.exec(e);null!==n&&(t=n[1],r=new Blob([n[0]]).size);const s={comments:[],elements:[],headerLength:r,objInfo:""},o=t.split(/\r\n|\r|\n/);let a;function i(e,t){const r={type:e[0]};return"list"===r.type?(r.name=e[3],r.countType=e[1],r.itemType=e[2]):r.name=e[1],r.name in t&&(r.name=t[r.name]),r}for(let e=0;e<o.length;e++){let t=o[e];if(t=t.trim(),""===t)continue;const r=t.split(/\s+/),n=r.shift();switch(t=r.join(" "),n){case"format":s.format=r[0],s.version=r[1];break;case"comment":s.comments.push(t);break;case"element":void 0!==a&&s.elements.push(a),a={},a.name=r[0],a.count=parseInt(r[1]),a.properties=[];break;case"property":a.properties.push(i(r,f.propertyNameMapping));break;case"obj_info":s.objInfo=t;break;default:console.log("unhandled",n,r)}}return void 0!==a&&s.elements.push(a),s}function r(e,t){switch(t){case"char":case"uchar":case"short":case"ushort":case"int":case"uint":case"int8":case"uint8":case"int16":case"uint16":case"int32":case"uint32":return parseInt(e);case"float":case"double":case"float32":case"float64":return parseFloat(e)}}function n(e,t){const n={};for(let s=0;s<e.length;s++){if(t.empty())return null;if("list"===e[s].type){const o=[],a=r(t.next(),e[s].countType);for(let n=0;n<a;n++){if(t.empty())return null;o.push(r(t.next(),e[s].itemType))}n[e[s].name]=o}else n[e[s].name]=r(t.next(),e[s].type)}return n}function s(){const e={indices:[],vertices:[],normals:[],uvs:[],faceVertexUvs:[],colors:[]};for(const t of Object.keys(f.customPropertyMapping))e[t]=[];return e}function o(e){const t=e.map((e=>e.name));function r(e){for(let r=0,n=e.length;r<n;r++){const n=e[r];if(t.includes(n))return n}return null}return{attrX:r(["x","px","posx"])||"x",attrY:r(["y","py","posy"])||"y",attrZ:r(["z","pz","posz"])||"z",attrNX:r(["nx","normalx"]),attrNY:r(["ny","normaly"]),attrNZ:r(["nz","normalz"]),attrS:r(["s","u","texture_u","tx"]),attrT:r(["t","v","texture_v","ty"]),attrR:r(["red","diffuse_red","r","diffuse_r"]),attrG:r(["green","diffuse_green","g","diffuse_g"]),attrB:r(["blue","diffuse_blue","b","diffuse_b"])}}function a(e,t){const r=s();let a,u;a=null!==(u=/end_header\s+(\S[\s\S]*\S|\S)\s*$/.exec(e))?u[1].split(/\s+/):[];const l=new ArrayStream(a);e:for(let e=0;e<t.elements.length;e++){const s=t.elements[e],a=o(s.properties);for(let e=0;e<s.count;e++){const e=n(s.properties,l);if(!e)break e;c(r,s.name,e,a)}}return i(r)}function i(e){let t=new BufferGeometry;e.indices.length>0&&t.setIndex(e.indices),t.setAttribute("position",new Float32BufferAttribute(e.vertices,3)),e.normals.length>0&&t.setAttribute("normal",new Float32BufferAttribute(e.normals,3)),e.uvs.length>0&&t.setAttribute("uv",new Float32BufferAttribute(e.uvs,2)),e.colors.length>0&&t.setAttribute("color",new Float32BufferAttribute(e.colors,3)),e.faceVertexUvs.length>0&&(t=t.toNonIndexed(),t.setAttribute("uv",new Float32BufferAttribute(e.faceVertexUvs,2)));for(const r of Object.keys(f.customPropertyMapping))e[r].length>0&&t.setAttribute(r,new Float32BufferAttribute(e[r],f.customPropertyMapping[r].length));return t.computeBoundingSphere(),t}function c(e,t,r,n){if("vertex"===t){e.vertices.push(r[n.attrX],r[n.attrY],r[n.attrZ]),null!==n.attrNX&&null!==n.attrNY&&null!==n.attrNZ&&e.normals.push(r[n.attrNX],r[n.attrNY],r[n.attrNZ]),null!==n.attrS&&null!==n.attrT&&e.uvs.push(r[n.attrS],r[n.attrT]),null!==n.attrR&&null!==n.attrG&&null!==n.attrB&&(_color.setRGB(r[n.attrR]/255,r[n.attrG]/255,r[n.attrB]/255).convertSRGBToLinear(),e.colors.push(_color.r,_color.g,_color.b));for(const t of Object.keys(f.customPropertyMapping))for(const n of f.customPropertyMapping[t])e[t].push(r[n])}else if("face"===t){const t=r.vertex_indices||r.vertex_index,n=r.texcoord;3===t.length?(e.indices.push(t[0],t[1],t[2]),n&&6===n.length&&(e.faceVertexUvs.push(n[0],n[1]),e.faceVertexUvs.push(n[2],n[3]),e.faceVertexUvs.push(n[4],n[5]))):4===t.length&&(e.indices.push(t[0],t[1],t[3]),e.indices.push(t[1],t[2],t[3]))}}function u(e,t){const r={};let n=0;for(let s=0;s<t.length;s++){const o=t[s],a=o.valueReader;if("list"===o.type){const t=[],s=o.countReader.read(e+n);n+=o.countReader.size;for(let r=0;r<s;r++)t.push(a.read(e+n)),n+=a.size;r[o.name]=t}else r[o.name]=a.read(e+n),n+=a.size}return[r,n]}function l(e,t,r){function n(e,t,r){switch(t){case"int8":case"char":return{read:t=>e.getInt8(t),size:1};case"uint8":case"uchar":return{read:t=>e.getUint8(t),size:1};case"int16":case"short":return{read:t=>e.getInt16(t,r),size:2};case"uint16":case"ushort":return{read:t=>e.getUint16(t,r),size:2};case"int32":case"int":return{read:t=>e.getInt32(t,r),size:4};case"uint32":case"uint":return{read:t=>e.getUint32(t,r),size:4};case"float32":case"float":return{read:t=>e.getFloat32(t,r),size:4};case"float64":case"double":return{read:t=>e.getFloat64(t,r),size:8}}}for(let s=0,o=e.length;s<o;s++){const o=e[s];"list"===o.type?(o.countReader=n(t,o.countType,r),o.valueReader=n(t,o.itemType,r)):o.valueReader=n(t,o.type,r)}}let p;const f=this;if(e instanceof ArrayBuffer){const r=new Uint8Array(e),n=function(e){let t=0,r=!0,n="";const s=[];do{const o=String.fromCharCode(e[t++]);"\n"!==o&&"\r"!==o?n+=o:("end_header"===n&&(r=!1),""!==n&&(s.push(n),n=""))}while(r&&t<e.length);return s.join("\r")+"\r"}(r),f=t(n);p="ascii"===f.format?a((new TextDecoder).decode(r),f):function(e,t){const r=s(),n="binary_little_endian"===t.format,a=new DataView(e,t.headerLength);let p,f=0;for(let e=0;e<t.elements.length;e++){const s=t.elements[e],i=s.properties,h=o(i);l(i,a,n);for(let e=0;e<s.count;e++){p=u(f,i),f+=p[1];const e=p[0];c(r,s.name,e,h)}}return i(r)}(e,f)}else p=a(e,t(e));return p}}class ArrayStream{constructor(e){this.arr=e,this.i=0}empty(){return this.i>=this.arr.length}next(){return this.arr[this.i++]}}export{PLYLoader};