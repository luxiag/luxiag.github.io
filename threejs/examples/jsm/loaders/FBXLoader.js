import{AmbientLight,AnimationClip,Bone,BufferGeometry,ClampToEdgeWrapping,Color,DirectionalLight,EquirectangularReflectionMapping,Euler,FileLoader,Float32BufferAttribute,Group,Line,LineBasicMaterial,Loader,LoaderUtils,MathUtils,Matrix3,Matrix4,Mesh,MeshLambertMaterial,MeshPhongMaterial,NumberKeyframeTrack,Object3D,OrthographicCamera,PerspectiveCamera,PointLight,PropertyBinding,Quaternion,QuaternionKeyframeTrack,RepeatWrapping,Skeleton,SkinnedMesh,SpotLight,Texture,TextureLoader,Uint16BufferAttribute,Vector3,Vector4,VectorKeyframeTrack,SRGBColorSpace}from"three";import*as fflate from"../libs/fflate.module.js";import{NURBSCurve}from"../curves/NURBSCurve.js";let fbxTree,connections,sceneGraph;class FBXLoader extends Loader{constructor(e){super(e)}load(e,t,r,n){const o=this,a=""===o.path?LoaderUtils.extractUrlBase(e):o.path,s=new FileLoader(this.manager);s.setPath(o.path),s.setResponseType("arraybuffer"),s.setRequestHeader(o.requestHeader),s.setWithCredentials(o.withCredentials),s.load(e,(function(r){try{t(o.parse(r,a))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)}parse(e,t){if(isFbxFormatBinary(e))fbxTree=(new BinaryParser).parse(e);else{const t=convertArrayBufferToString(e);if(!isFbxFormatASCII(t))throw new Error("THREE.FBXLoader: Unknown format.");if(getFbxVersion(t)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+getFbxVersion(t));fbxTree=(new TextParser).parse(t)}const r=new TextureLoader(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new FBXTreeParser(r,this.manager).parse(fbxTree)}}class FBXTreeParser{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){connections=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),r=this.parseMaterials(t),n=this.parseDeformers(),o=(new GeometryParser).parse(n);return this.parseScene(n,o,r),sceneGraph}parseConnections(){const e=new Map;return"Connections"in fbxTree&&fbxTree.Connections.connections.forEach((function(t){const r=t[0],n=t[1],o=t[2];e.has(r)||e.set(r,{parents:[],children:[]});const a={ID:n,relationship:o};e.get(r).parents.push(a),e.has(n)||e.set(n,{parents:[],children:[]});const s={ID:r,relationship:o};e.get(n).children.push(s)})),e}parseImages(){const e={},t={};if("Video"in fbxTree.Objects){const r=fbxTree.Objects.Video;for(const n in r){const o=r[n];if(e[parseInt(n)]=o.RelativeFilename||o.Filename,"Content"in o){const e=o.Content instanceof ArrayBuffer&&o.Content.byteLength>0,a="string"==typeof o.Content&&""!==o.Content;if(e||a){const e=this.parseImage(r[n]);t[o.RelativeFilename||o.Filename]=e}}}}for(const r in e){const n=e[r];void 0!==t[n]?e[r]=t[n]:e[r]=e[r].split("\\").pop()}return e}parseImage(e){const t=e.Content,r=e.RelativeFilename||e.Filename,n=r.slice(r.lastIndexOf(".")+1).toLowerCase();let o;switch(n){case"bmp":o="image/bmp";break;case"jpg":case"jpeg":o="image/jpeg";break;case"png":o="image/png";break;case"tif":o="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",r),o="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+n+'" is not supported.')}if("string"==typeof t)return"data:"+o+";base64,"+t;{const e=new Uint8Array(t);return window.URL.createObjectURL(new Blob([e],{type:o}))}}parseTextures(e){const t=new Map;if("Texture"in fbxTree.Objects){const r=fbxTree.Objects.Texture;for(const n in r){const o=this.parseTexture(r[n],e);t.set(parseInt(n),o)}}return t}parseTexture(e,t){const r=this.loadTexture(e,t);r.ID=e.id,r.name=e.attrName;const n=e.WrapModeU,o=e.WrapModeV,a=void 0!==n?n.value:0,s=void 0!==o?o.value:0;if(r.wrapS=0===a?RepeatWrapping:ClampToEdgeWrapping,r.wrapT=0===s?RepeatWrapping:ClampToEdgeWrapping,"Scaling"in e){const t=e.Scaling.value;r.repeat.x=t[0],r.repeat.y=t[1]}if("Translation"in e){const t=e.Translation.value;r.offset.x=t[0],r.offset.y=t[1]}return r}loadTexture(e,t){let r;const n=this.textureLoader.path,o=connections.get(e.id).children;let a;void 0!==o&&o.length>0&&void 0!==t[o[0].ID]&&(r=t[o[0].ID],0!==r.indexOf("blob:")&&0!==r.indexOf("data:")||this.textureLoader.setPath(void 0));const s=e.FileName.slice(-3).toLowerCase();if("tga"===s){const t=this.manager.getHandler(".tga");null===t?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),a=new Texture):(t.setPath(this.textureLoader.path),a=t.load(r))}else"psd"===s?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),a=new Texture):a=this.textureLoader.load(r);return this.textureLoader.setPath(n),a}parseMaterials(e){const t=new Map;if("Material"in fbxTree.Objects){const r=fbxTree.Objects.Material;for(const n in r){const o=this.parseMaterial(r[n],e);null!==o&&t.set(parseInt(n),o)}}return t}parseMaterial(e,t){const r=e.id,n=e.attrName;let o=e.ShadingModel;if("object"==typeof o&&(o=o.value),!connections.has(r))return null;const a=this.parseParameters(e,t,r);let s;switch(o.toLowerCase()){case"phong":s=new MeshPhongMaterial;break;case"lambert":s=new MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',o),s=new MeshPhongMaterial}return s.setValues(a),s.name=n,s}parseParameters(e,t,r){const n={};e.BumpFactor&&(n.bumpScale=e.BumpFactor.value),e.Diffuse?n.color=(new Color).fromArray(e.Diffuse.value).convertSRGBToLinear():!e.DiffuseColor||"Color"!==e.DiffuseColor.type&&"ColorRGB"!==e.DiffuseColor.type||(n.color=(new Color).fromArray(e.DiffuseColor.value).convertSRGBToLinear()),e.DisplacementFactor&&(n.displacementScale=e.DisplacementFactor.value),e.Emissive?n.emissive=(new Color).fromArray(e.Emissive.value).convertSRGBToLinear():!e.EmissiveColor||"Color"!==e.EmissiveColor.type&&"ColorRGB"!==e.EmissiveColor.type||(n.emissive=(new Color).fromArray(e.EmissiveColor.value).convertSRGBToLinear()),e.EmissiveFactor&&(n.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(n.opacity=parseFloat(e.Opacity.value)),n.opacity<1&&(n.transparent=!0),e.ReflectionFactor&&(n.reflectivity=e.ReflectionFactor.value),e.Shininess&&(n.shininess=e.Shininess.value),e.Specular?n.specular=(new Color).fromArray(e.Specular.value).convertSRGBToLinear():e.SpecularColor&&"Color"===e.SpecularColor.type&&(n.specular=(new Color).fromArray(e.SpecularColor.value).convertSRGBToLinear());const o=this;return connections.get(r).children.forEach((function(e){const r=e.relationship;switch(r){case"Bump":n.bumpMap=o.getTexture(t,e.ID);break;case"Maya|TEX_ao_map":n.aoMap=o.getTexture(t,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":n.map=o.getTexture(t,e.ID),void 0!==n.map&&(n.map.colorSpace=SRGBColorSpace);break;case"DisplacementColor":n.displacementMap=o.getTexture(t,e.ID);break;case"EmissiveColor":n.emissiveMap=o.getTexture(t,e.ID),void 0!==n.emissiveMap&&(n.emissiveMap.colorSpace=SRGBColorSpace);break;case"NormalMap":case"Maya|TEX_normal_map":n.normalMap=o.getTexture(t,e.ID);break;case"ReflectionColor":n.envMap=o.getTexture(t,e.ID),void 0!==n.envMap&&(n.envMap.mapping=EquirectangularReflectionMapping,n.envMap.colorSpace=SRGBColorSpace);break;case"SpecularColor":n.specularMap=o.getTexture(t,e.ID),void 0!==n.specularMap&&(n.specularMap.colorSpace=SRGBColorSpace);break;case"TransparentColor":case"TransparencyFactor":n.alphaMap=o.getTexture(t,e.ID),n.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",r)}})),n}getTexture(e,t){return"LayeredTexture"in fbxTree.Objects&&t in fbxTree.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=connections.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in fbxTree.Objects){const r=fbxTree.Objects.Deformer;for(const n in r){const o=r[n],a=connections.get(parseInt(n));if("Skin"===o.attrType){const t=this.parseSkeleton(a,r);t.ID=n,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),t.geometryID=a.parents[0].ID,e[n]=t}else if("BlendShape"===o.attrType){const e={id:n};e.rawTargets=this.parseMorphTargets(a,r),e.id=n,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[n]=e}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const r=[];return e.children.forEach((function(e){const n=t[e.ID];if("Cluster"!==n.attrType)return;const o={ID:e.ID,indices:[],weights:[],transformLink:(new Matrix4).fromArray(n.TransformLink.a)};"Indexes"in n&&(o.indices=n.Indexes.a,o.weights=n.Weights.a),r.push(o)})),{rawBones:r,bones:[]}}parseMorphTargets(e,t){const r=[];for(let n=0;n<e.children.length;n++){const o=e.children[n],a=t[o.ID],s={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if("BlendShapeChannel"!==a.attrType)return;s.geoID=connections.get(parseInt(o.ID)).children.filter((function(e){return void 0===e.relationship}))[0].ID,r.push(s)}return r}parseScene(e,t,r){sceneGraph=new Group;const n=this.parseModels(e.skeletons,t,r),o=fbxTree.Objects.Model,a=this;n.forEach((function(e){const t=o[e.ID];a.setLookAtProperties(e,t),connections.get(e.ID).parents.forEach((function(t){const r=n.get(t.ID);void 0!==r&&r.add(e)})),null===e.parent&&sceneGraph.add(e)})),this.bindSkeleton(e.skeletons,t,n),this.createAmbientLight(),sceneGraph.traverse((function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrix=e.parent.matrix,e.userData.transformData.parentMatrixWorld=e.parent.matrixWorld);const t=generateTransform(e.userData.transformData);e.applyMatrix4(t),e.updateWorldMatrix()}}));const s=(new AnimationParser).parse();1===sceneGraph.children.length&&sceneGraph.children[0].isGroup&&(sceneGraph.children[0].animations=s,sceneGraph=sceneGraph.children[0]),sceneGraph.animations=s}parseModels(e,t,r){const n=new Map,o=fbxTree.Objects.Model;for(const a in o){const s=parseInt(a),i=o[a],c=connections.get(s);let l=this.buildSkeleton(c,e,s,i.attrName);if(!l){switch(i.attrType){case"Camera":l=this.createCamera(c);break;case"Light":l=this.createLight(c);break;case"Mesh":l=this.createMesh(c,t,r);break;case"NurbsCurve":l=this.createCurve(c,t);break;case"LimbNode":case"Root":l=new Bone;break;default:l=new Group}l.name=i.attrName?PropertyBinding.sanitizeNodeName(i.attrName):"",l.ID=s}this.getTransformData(l,i),n.set(s,l)}return n}buildSkeleton(e,t,r,n){let o=null;return e.parents.forEach((function(e){for(const a in t){const s=t[a];s.rawBones.forEach((function(t,a){if(t.ID===e.ID){const e=o;o=new Bone,o.matrixWorld.copy(t.transformLink),o.name=n?PropertyBinding.sanitizeNodeName(n):"",o.ID=r,s.bones[a]=o,null!==e&&o.add(e)}}))}})),o}createCamera(e){let t,r;if(e.children.forEach((function(e){const t=fbxTree.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)})),void 0===r)t=new Object3D;else{let e=0;void 0!==r.CameraProjectionType&&1===r.CameraProjectionType.value&&(e=1);let n=1;void 0!==r.NearPlane&&(n=r.NearPlane.value/1e3);let o=1e3;void 0!==r.FarPlane&&(o=r.FarPlane.value/1e3);let a=window.innerWidth,s=window.innerHeight;void 0!==r.AspectWidth&&void 0!==r.AspectHeight&&(a=r.AspectWidth.value,s=r.AspectHeight.value);const i=a/s;let c=45;void 0!==r.FieldOfView&&(c=r.FieldOfView.value);const l=r.FocalLength?r.FocalLength.value:null;switch(e){case 0:t=new PerspectiveCamera(c,i,n,o),null!==l&&t.setFocalLength(l);break;case 1:t=new OrthographicCamera(-a/2,a/2,s/2,-s/2,n,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+e+"."),t=new Object3D}}return t}createLight(e){let t,r;if(e.children.forEach((function(e){const t=fbxTree.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)})),void 0===r)t=new Object3D;else{let e;e=void 0===r.LightType?0:r.LightType.value;let n=16777215;void 0!==r.Color&&(n=(new Color).fromArray(r.Color.value).convertSRGBToLinear());let o=void 0===r.Intensity?1:r.Intensity.value/100;void 0!==r.CastLightOnObject&&0===r.CastLightOnObject.value&&(o=0);let a=0;void 0!==r.FarAttenuationEnd&&(a=void 0!==r.EnableFarAttenuation&&0===r.EnableFarAttenuation.value?0:r.FarAttenuationEnd.value);const s=1;switch(e){case 0:t=new PointLight(n,o,a,s);break;case 1:t=new DirectionalLight(n,o);break;case 2:let e=Math.PI/3;void 0!==r.InnerAngle&&(e=MathUtils.degToRad(r.InnerAngle.value));let i=0;void 0!==r.OuterAngle&&(i=MathUtils.degToRad(r.OuterAngle.value),i=Math.max(i,1)),t=new SpotLight(n,o,a,e,i,s);break;default:console.warn("THREE.FBXLoader: Unknown light type "+r.LightType.value+", defaulting to a PointLight."),t=new PointLight(n,o)}void 0!==r.CastShadows&&1===r.CastShadows.value&&(t.castShadow=!0)}return t}createMesh(e,t,r){let n,o=null,a=null;const s=[];return e.children.forEach((function(e){t.has(e.ID)&&(o=t.get(e.ID)),r.has(e.ID)&&s.push(r.get(e.ID))})),s.length>1?a=s:s.length>0?a=s[0]:(a=new MeshPhongMaterial({color:13421772}),s.push(a)),"color"in o.attributes&&s.forEach((function(e){e.vertexColors=!0})),o.FBX_Deformer?(n=new SkinnedMesh(o,a),n.normalizeSkinWeights()):n=new Mesh(o,a),n}createCurve(e,t){const r=e.children.reduce((function(e,r){return t.has(r.ID)&&(e=t.get(r.ID)),e}),null),n=new LineBasicMaterial({color:3342591,linewidth:1});return new Line(r,n)}getTransformData(e,t){const r={};"InheritType"in t&&(r.inheritType=parseInt(t.InheritType.value)),r.eulerOrder="RotationOrder"in t?getEulerOrder(t.RotationOrder.value):"ZYX","Lcl_Translation"in t&&(r.translation=t.Lcl_Translation.value),"PreRotation"in t&&(r.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(r.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(r.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(r.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(r.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(r.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(r.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(r.rotationPivot=t.RotationPivot.value),e.userData.transformData=r}setLookAtProperties(e,t){"LookAtProperty"in t&&connections.get(e.ID).children.forEach((function(t){if("LookAtProperty"===t.relationship){const r=fbxTree.Objects.Model[t.ID];if("Lcl_Translation"in r){const t=r.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(t),sceneGraph.add(e.target)):e.lookAt((new Vector3).fromArray(t))}}}))}bindSkeleton(e,t,r){const n=this.parsePoseNodes();for(const o in e){const a=e[o];connections.get(parseInt(a.ID)).parents.forEach((function(e){if(t.has(e.ID)){const t=e.ID;connections.get(t).parents.forEach((function(e){r.has(e.ID)&&r.get(e.ID).bind(new Skeleton(a.bones),n[e.ID])}))}}))}}parsePoseNodes(){const e={};if("Pose"in fbxTree.Objects){const t=fbxTree.Objects.Pose;for(const r in t)if("BindPose"===t[r].attrType&&t[r].NbPoseNodes>0){const n=t[r].PoseNode;Array.isArray(n)?n.forEach((function(t){e[t.Node]=(new Matrix4).fromArray(t.Matrix.a)})):e[n.Node]=(new Matrix4).fromArray(n.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in fbxTree&&"AmbientColor"in fbxTree.GlobalSettings){const e=fbxTree.GlobalSettings.AmbientColor.value,t=e[0],r=e[1],n=e[2];if(0!==t||0!==r||0!==n){const e=new Color(t,r,n).convertSRGBToLinear();sceneGraph.add(new AmbientLight(e,1))}}}}class GeometryParser{constructor(){this.negativeMaterialIndices=!1}parse(e){const t=new Map;if("Geometry"in fbxTree.Objects){const r=fbxTree.Objects.Geometry;for(const n in r){const o=connections.get(parseInt(n)),a=this.parseGeometry(o,r[n],e);t.set(parseInt(n),a)}}return!0===this.negativeMaterialIndices&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),t}parseGeometry(e,t,r){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,r);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,r){const n=r.skeletons,o=[],a=e.parents.map((function(e){return fbxTree.Objects.Model[e.ID]}));if(0===a.length)return;const s=e.children.reduce((function(e,t){return void 0!==n[t.ID]&&(e=n[t.ID]),e}),null);e.children.forEach((function(e){void 0!==r.morphTargets[e.ID]&&o.push(r.morphTargets[e.ID])}));const i=a[0],c={};"RotationOrder"in i&&(c.eulerOrder=getEulerOrder(i.RotationOrder.value)),"InheritType"in i&&(c.inheritType=parseInt(i.InheritType.value)),"GeometricTranslation"in i&&(c.translation=i.GeometricTranslation.value),"GeometricRotation"in i&&(c.rotation=i.GeometricRotation.value),"GeometricScaling"in i&&(c.scale=i.GeometricScaling.value);const l=generateTransform(c);return this.genGeometry(t,s,o,l)}genGeometry(e,t,r,n){const o=new BufferGeometry;e.attrName&&(o.name=e.attrName);const a=this.parseGeoNode(e,t),s=this.genBuffers(a),i=new Float32BufferAttribute(s.vertex,3);if(i.applyMatrix4(n),o.setAttribute("position",i),s.colors.length>0&&o.setAttribute("color",new Float32BufferAttribute(s.colors,3)),t&&(o.setAttribute("skinIndex",new Uint16BufferAttribute(s.weightsIndices,4)),o.setAttribute("skinWeight",new Float32BufferAttribute(s.vertexWeights,4)),o.FBX_Deformer=t),s.normal.length>0){const e=(new Matrix3).getNormalMatrix(n),t=new Float32BufferAttribute(s.normal,3);t.applyNormalMatrix(e),o.setAttribute("normal",t)}if(s.uvs.forEach((function(e,t){let r="uv"+(t+1).toString();0===t&&(r="uv"),o.setAttribute(r,new Float32BufferAttribute(s.uvs[t],2))})),a.material&&"AllSame"!==a.material.mappingType){let e=s.materialIndex[0],t=0;if(s.materialIndex.forEach((function(r,n){r!==e&&(o.addGroup(t,n-t,e),e=r,t=n)})),o.groups.length>0){const t=o.groups[o.groups.length-1],r=t.start+t.count;r!==s.materialIndex.length&&o.addGroup(r,s.materialIndex.length-r,e)}0===o.groups.length&&o.addGroup(0,s.materialIndex.length,s.materialIndex[0])}return this.addMorphTargets(o,e,r,n),o}parseGeoNode(e,t){const r={};if(r.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],r.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(r.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(r.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(r.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){r.uv=[];let t=0;for(;e.LayerElementUV[t];)e.LayerElementUV[t].UV&&r.uv.push(this.parseUVs(e.LayerElementUV[t])),t++}return r.weightTable={},null!==t&&(r.skeleton=t,t.rawBones.forEach((function(e,t){e.indices.forEach((function(n,o){void 0===r.weightTable[n]&&(r.weightTable[n]=[]),r.weightTable[n].push({id:t,weight:e.weights[o]})}))}))),r}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let r=0,n=0,o=!1,a=[],s=[],i=[],c=[],l=[],p=[];const u=this;return e.vertexIndices.forEach((function(h,d){let f,m=!1;h<0&&(h^=-1,m=!0);let g=[],v=[];if(a.push(3*h,3*h+1,3*h+2),e.color){const t=getData(d,r,h,e.color);i.push(t[0],t[1],t[2])}if(e.skeleton){if(void 0!==e.weightTable[h]&&e.weightTable[h].forEach((function(e){v.push(e.weight),g.push(e.id)})),v.length>4){o||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),o=!0);const e=[0,0,0,0],t=[0,0,0,0];v.forEach((function(r,n){let o=r,a=g[n];t.forEach((function(t,r,n){if(o>t){n[r]=o,o=t;const s=e[r];e[r]=a,a=s}}))})),g=e,v=t}for(;v.length<4;)v.push(0),g.push(0);for(let e=0;e<4;++e)l.push(v[e]),p.push(g[e])}if(e.normal){const t=getData(d,r,h,e.normal);s.push(t[0],t[1],t[2])}e.material&&"AllSame"!==e.material.mappingType&&(f=getData(d,r,h,e.material)[0],f<0&&(u.negativeMaterialIndices=!0,f=0)),e.uv&&e.uv.forEach((function(e,t){const n=getData(d,r,h,e);void 0===c[t]&&(c[t]=[]),c[t].push(n[0]),c[t].push(n[1])})),n++,m&&(n>4&&console.warn("THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export."),u.genFace(t,e,a,f,s,i,c,l,p,n),r++,n=0,a=[],s=[],i=[],c=[],l=[],p=[])})),t}genFace(e,t,r,n,o,a,s,i,c,l){for(let p=2;p<l;p++)e.vertex.push(t.vertexPositions[r[0]]),e.vertex.push(t.vertexPositions[r[1]]),e.vertex.push(t.vertexPositions[r[2]]),e.vertex.push(t.vertexPositions[r[3*(p-1)]]),e.vertex.push(t.vertexPositions[r[3*(p-1)+1]]),e.vertex.push(t.vertexPositions[r[3*(p-1)+2]]),e.vertex.push(t.vertexPositions[r[3*p]]),e.vertex.push(t.vertexPositions[r[3*p+1]]),e.vertex.push(t.vertexPositions[r[3*p+2]]),t.skeleton&&(e.vertexWeights.push(i[0]),e.vertexWeights.push(i[1]),e.vertexWeights.push(i[2]),e.vertexWeights.push(i[3]),e.vertexWeights.push(i[4*(p-1)]),e.vertexWeights.push(i[4*(p-1)+1]),e.vertexWeights.push(i[4*(p-1)+2]),e.vertexWeights.push(i[4*(p-1)+3]),e.vertexWeights.push(i[4*p]),e.vertexWeights.push(i[4*p+1]),e.vertexWeights.push(i[4*p+2]),e.vertexWeights.push(i[4*p+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[4*(p-1)]),e.weightsIndices.push(c[4*(p-1)+1]),e.weightsIndices.push(c[4*(p-1)+2]),e.weightsIndices.push(c[4*(p-1)+3]),e.weightsIndices.push(c[4*p]),e.weightsIndices.push(c[4*p+1]),e.weightsIndices.push(c[4*p+2]),e.weightsIndices.push(c[4*p+3])),t.color&&(e.colors.push(a[0]),e.colors.push(a[1]),e.colors.push(a[2]),e.colors.push(a[3*(p-1)]),e.colors.push(a[3*(p-1)+1]),e.colors.push(a[3*(p-1)+2]),e.colors.push(a[3*p]),e.colors.push(a[3*p+1]),e.colors.push(a[3*p+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(n),e.materialIndex.push(n),e.materialIndex.push(n)),t.normal&&(e.normal.push(o[0]),e.normal.push(o[1]),e.normal.push(o[2]),e.normal.push(o[3*(p-1)]),e.normal.push(o[3*(p-1)+1]),e.normal.push(o[3*(p-1)+2]),e.normal.push(o[3*p]),e.normal.push(o[3*p+1]),e.normal.push(o[3*p+2])),t.uv&&t.uv.forEach((function(t,r){void 0===e.uvs[r]&&(e.uvs[r]=[]),e.uvs[r].push(s[r][0]),e.uvs[r].push(s[r][1]),e.uvs[r].push(s[r][2*(p-1)]),e.uvs[r].push(s[r][2*(p-1)+1]),e.uvs[r].push(s[r][2*p]),e.uvs[r].push(s[r][2*p+1])}))}addMorphTargets(e,t,r,n){if(0===r.length)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const o=this;r.forEach((function(r){r.rawTargets.forEach((function(r){const a=fbxTree.Objects.Geometry[r.geoID];void 0!==a&&o.genMorphGeometry(e,t,a,n,r.name)}))}))}genMorphGeometry(e,t,r,n,o){const a=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],s=void 0!==r.Vertices?r.Vertices.a:[],i=void 0!==r.Indexes?r.Indexes.a:[],c=3*e.attributes.position.count,l=new Float32Array(c);for(let e=0;e<i.length;e++){const t=3*i[e];l[t]=s[3*e],l[t+1]=s[3*e+1],l[t+2]=s[3*e+2]}const p={vertexIndices:a,vertexPositions:l},u=this.genBuffers(p),h=new Float32BufferAttribute(u.vertex,3);h.name=o||r.attrName,h.applyMatrix4(n),e.morphAttributes.position.push(h)}parseNormals(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.Normals.a;let o=[];return"IndexToDirect"===r&&("NormalIndex"in e?o=e.NormalIndex.a:"NormalsIndex"in e&&(o=e.NormalsIndex.a)),{dataSize:3,buffer:n,indices:o,mappingType:t,referenceType:r}}parseUVs(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.UV.a;let o=[];return"IndexToDirect"===r&&(o=e.UVIndex.a),{dataSize:2,buffer:n,indices:o,mappingType:t,referenceType:r}}parseVertexColors(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.Colors.a;let o=[];"IndexToDirect"===r&&(o=e.ColorIndex.a);for(let e=0,t=new Color;e<n.length;e+=4)t.fromArray(n,e).convertSRGBToLinear().toArray(n,e);return{dataSize:4,buffer:n,indices:o,mappingType:t,referenceType:r}}parseMaterialIndices(e){const t=e.MappingInformationType,r=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:r};const n=e.Materials.a,o=[];for(let e=0;e<n.length;++e)o.push(e);return{dataSize:1,buffer:n,indices:o,mappingType:t,referenceType:r}}parseNurbsGeometry(e){const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new BufferGeometry;const r=t-1,n=e.KnotVector.a,o=[],a=e.Points.a;for(let e=0,t=a.length;e<t;e+=4)o.push((new Vector4).fromArray(a,e));let s,i;if("Closed"===e.Form)o.push(o[0]);else if("Periodic"===e.Form){s=r,i=n.length-1-s;for(let e=0;e<r;++e)o.push(o[e])}const c=new NURBSCurve(r,n,o,s,i).getPoints(12*o.length);return(new BufferGeometry).setFromPoints(c)}}class AnimationParser{parse(){const e=[],t=this.parseClips();if(void 0!==t)for(const r in t){const n=t[r],o=this.addClip(n);e.push(o)}return e}parseClips(){if(void 0===fbxTree.Objects.AnimationCurve)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=fbxTree.Objects.AnimationCurveNode,t=new Map;for(const r in e){const n=e[r];if(null!==n.attrName.match(/S|R|T|DeformPercent/)){const e={id:n.id,attr:n.attrName,curves:{}};t.set(e.id,e)}}return t}parseAnimationCurves(e){const t=fbxTree.Objects.AnimationCurve;for(const r in t){const n={id:t[r].id,times:t[r].KeyTime.a.map(convertFBXTimeToSeconds),values:t[r].KeyValueFloat.a},o=connections.get(n.id);if(void 0!==o){const t=o.parents[0].ID,r=o.parents[0].relationship;r.match(/X/)?e.get(t).curves.x=n:r.match(/Y/)?e.get(t).curves.y=n:r.match(/Z/)?e.get(t).curves.z=n:r.match(/DeformPercent/)&&e.has(t)&&(e.get(t).curves.morph=n)}}}parseAnimationLayers(e){const t=fbxTree.Objects.AnimationLayer,r=new Map;for(const n in t){const t=[],o=connections.get(parseInt(n));void 0!==o&&(o.children.forEach((function(r,n){if(e.has(r.ID)){const o=e.get(r.ID);if(void 0!==o.curves.x||void 0!==o.curves.y||void 0!==o.curves.z){if(void 0===t[n]){const e=connections.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID;if(void 0!==e){const o=fbxTree.Objects.Model[e.toString()];if(void 0===o)return void console.warn("THREE.FBXLoader: Encountered a unused curve.",r);const a={modelName:o.attrName?PropertyBinding.sanitizeNodeName(o.attrName):"",ID:o.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};sceneGraph.traverse((function(e){e.ID===o.id&&(a.transform=e.matrix,e.userData.transformData&&(a.eulerOrder=e.userData.transformData.eulerOrder))})),a.transform||(a.transform=new Matrix4),"PreRotation"in o&&(a.preRotation=o.PreRotation.value),"PostRotation"in o&&(a.postRotation=o.PostRotation.value),t[n]=a}}t[n]&&(t[n][o.attr]=o)}else if(void 0!==o.curves.morph){if(void 0===t[n]){const e=connections.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID,o=connections.get(e).parents[0].ID,a=connections.get(o).parents[0].ID,s=connections.get(a).parents[0].ID,i=fbxTree.Objects.Model[s],c={modelName:i.attrName?PropertyBinding.sanitizeNodeName(i.attrName):"",morphName:fbxTree.Objects.Deformer[e].attrName};t[n]=c}t[n][o.attr]=o}}})),r.set(parseInt(n),t))}return r}parseAnimStacks(e){const t=fbxTree.Objects.AnimationStack,r={};for(const n in t){const o=connections.get(parseInt(n)).children;o.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const a=e.get(o[0].ID);r[n]={name:t[n].attrName,layer:a}}return r}addClip(e){let t=[];const r=this;return e.layer.forEach((function(e){t=t.concat(r.generateTracks(e))})),new AnimationClip(e.name,-1,t)}generateTracks(e){const t=[];let r=new Vector3,n=new Quaternion,o=new Vector3;if(e.transform&&e.transform.decompose(r,n,o),r=r.toArray(),n=(new Euler).setFromQuaternion(n,e.eulerOrder).toArray(),o=o.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){const n=this.generateVectorTrack(e.modelName,e.T.curves,r,"position");void 0!==n&&t.push(n)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){const r=this.generateRotationTrack(e.modelName,e.R.curves,n,e.preRotation,e.postRotation,e.eulerOrder);void 0!==r&&t.push(r)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){const r=this.generateVectorTrack(e.modelName,e.S.curves,o,"scale");void 0!==r&&t.push(r)}if(void 0!==e.DeformPercent){const r=this.generateMorphTrack(e);void 0!==r&&t.push(r)}return t}generateVectorTrack(e,t,r,n){const o=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(o,t,r);return new VectorKeyframeTrack(e+"."+n,o,a)}generateRotationTrack(e,t,r,n,o,a){void 0!==t.x&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(MathUtils.degToRad)),void 0!==t.y&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(MathUtils.degToRad)),void 0!==t.z&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(MathUtils.degToRad));const s=this.getTimesForAllAxes(t),i=this.getKeyframeTrackValues(s,t,r);void 0!==n&&((n=n.map(MathUtils.degToRad)).push(a),n=(new Euler).fromArray(n),n=(new Quaternion).setFromEuler(n)),void 0!==o&&((o=o.map(MathUtils.degToRad)).push(a),o=(new Euler).fromArray(o),o=(new Quaternion).setFromEuler(o).invert());const c=new Quaternion,l=new Euler,p=[];for(let e=0;e<i.length;e+=3)l.set(i[e],i[e+1],i[e+2],a),c.setFromEuler(l),void 0!==n&&c.premultiply(n),void 0!==o&&c.multiply(o),c.toArray(p,e/3*4);return new QuaternionKeyframeTrack(e+".quaternion",s,p)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,r=t.values.map((function(e){return e/100})),n=sceneGraph.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new NumberKeyframeTrack(e.modelName+".morphTargetInfluences["+n+"]",t.times,r)}getTimesForAllAxes(e){let t=[];if(void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t=t.sort((function(e,t){return e-t})),t.length>1){let e=1,r=t[0];for(let n=1;n<t.length;n++){const o=t[n];o!==r&&(t[e]=o,r=o,e++)}t=t.slice(0,e)}return t}getKeyframeTrackValues(e,t,r){const n=r,o=[];let a=-1,s=-1,i=-1;return e.forEach((function(e){if(t.x&&(a=t.x.times.indexOf(e)),t.y&&(s=t.y.times.indexOf(e)),t.z&&(i=t.z.times.indexOf(e)),-1!==a){const e=t.x.values[a];o.push(e),n[0]=e}else o.push(n[0]);if(-1!==s){const e=t.y.values[s];o.push(e),n[1]=e}else o.push(n[1]);if(-1!==i){const e=t.z.values[i];o.push(e),n[2]=e}else o.push(n[2])})),o}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const r=e.values[t-1],n=e.values[t]-r,o=Math.abs(n);if(o>=180){const a=o/180,s=n/a;let i=r+s;const c=e.times[t-1],l=(e.times[t]-c)/a;let p=c+l;const u=[],h=[];for(;p<e.times[t];)u.push(p),p+=l,h.push(i),i+=s;e.times=inject(e.times,t,u),e.values=inject(e.values,t,h)}}}}class TextParser{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new FBXTree,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,r=e.split(/[\r\n]+/);return r.forEach((function(e,n){const o=e.match(/^[\s\t]*;/),a=e.match(/^[\s\t]*$/);if(o||a)return;const s=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),i=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),c=e.match("^\\t{"+(t.currentIndent-1)+"}}");s?t.parseNodeBegin(e,s):i?t.parseNodeProperty(e,i,r[++n]):c?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)})),this.allNodes}parseNodeBegin(e,t){const r=t[1].trim().replace(/^"/,"").replace(/"$/,""),n=t[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),o={name:r},a=this.parseNodeAttr(n),s=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(r,o):r in s?("PoseNode"===r?s.PoseNode.push(o):void 0!==s[r].id&&(s[r]={},s[r][s[r].id]=s[r]),""!==a.id&&(s[r][a.id]=o)):"number"==typeof a.id?(s[r]={},s[r][a.id]=o):"Properties70"!==r&&(s[r]="PoseNode"===r?[o]:o),"number"==typeof a.id&&(o.id=a.id),""!==a.name&&(o.attrName=a.name),""!==a.type&&(o.attrType=a.type),this.pushStack(o)}parseNodeAttr(e){let t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let r="",n="";return e.length>1&&(r=e[1].replace(/^(\w+)::/,""),n=e[2]),{id:t,name:r,type:n}}parseNodeProperty(e,t,r){let n=t[1].replace(/^"/,"").replace(/"$/,"").trim(),o=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===n&&","===o&&(o=r.replace(/"/g,"").replace(/,$/,"").trim());const a=this.getCurrentNode();if("Properties70"!==a.name){if("C"===n){const e=o.split(",").slice(1),t=parseInt(e[0]),r=parseInt(e[1]);let s=o.split(",").slice(3);s=s.map((function(e){return e.trim().replace(/^"/,"")})),n="connections",o=[t,r],append(o,s),void 0===a[n]&&(a[n]=[])}"Node"===n&&(a.id=o),n in a&&Array.isArray(a[n])?a[n].push(o):"a"!==n?a[n]=o:a.a=o,this.setCurrentProp(a,n),"a"===n&&","!==o.slice(-1)&&(a.a=parseNumberArray(o))}else this.parseNodeSpecialProperty(e,n,o)}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=parseNumberArray(t.a))}parseNodeSpecialProperty(e,t,r){const n=r.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),o=n[0],a=n[1],s=n[2],i=n[3];let c=n[4];switch(a){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=parseNumberArray(c)}this.getPrevNode()[o]={type:a,type2:s,flag:i,value:c},this.setCurrentProp(this.getPrevNode(),o)}}class BinaryParser{parse(e){const t=new BinaryReader(e);t.skip(23);const r=t.getUint32();if(r<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+r);const n=new FBXTree;for(;!this.endOfContent(t);){const e=this.parseNode(t,r);null!==e&&n.add(e.name,e)}return n}endOfContent(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const r={},n=t>=7500?e.getUint64():e.getUint32(),o=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const a=e.getUint8(),s=e.getString(a);if(0===n)return null;const i=[];for(let t=0;t<o;t++)i.push(this.parseProperty(e));const c=i.length>0?i[0]:"",l=i.length>1?i[1]:"",p=i.length>2?i[2]:"";for(r.singleProperty=1===o&&e.getOffset()===n;n>e.getOffset();){const n=this.parseNode(e,t);null!==n&&this.parseSubNode(s,r,n)}return r.propertyList=i,"number"==typeof c&&(r.id=c),""!==l&&(r.attrName=l),""!==p&&(r.attrType=p),""!==s&&(r.name=s),r}parseSubNode(e,t,r){if(!0===r.singleProperty){const e=r.propertyList[0];Array.isArray(e)?(t[r.name]=r,r.a=e):t[r.name]=e}else if("Connections"===e&&"C"===r.name){const e=[];r.propertyList.forEach((function(t,r){0!==r&&e.push(t)})),void 0===t.connections&&(t.connections=[]),t.connections.push(e)}else if("Properties70"===r.name)Object.keys(r).forEach((function(e){t[e]=r[e]}));else if("Properties70"===e&&"P"===r.name){let e=r.propertyList[0],n=r.propertyList[1];const o=r.propertyList[2],a=r.propertyList[3];let s;0===e.indexOf("Lcl ")&&(e=e.replace("Lcl ","Lcl_")),0===n.indexOf("Lcl ")&&(n=n.replace("Lcl ","Lcl_")),s="Color"===n||"ColorRGB"===n||"Vector"===n||"Vector3D"===n||0===n.indexOf("Lcl_")?[r.propertyList[4],r.propertyList[5],r.propertyList[6]]:r.propertyList[4],t[e]={type:n,type2:o,flag:a,value:s}}else void 0===t[r.name]?"number"==typeof r.id?(t[r.name]={},t[r.name][r.id]=r):t[r.name]=r:"PoseNode"===r.name?(Array.isArray(t[r.name])||(t[r.name]=[t[r.name]]),t[r.name].push(r)):void 0===t[r.name][r.id]&&(t[r.name][r.id]=r)}parseProperty(e){const t=e.getString(1);let r;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return r=e.getUint32(),e.getArrayBuffer(r);case"S":return r=e.getUint32(),e.getString(r);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const n=e.getUint32(),o=e.getUint32(),a=e.getUint32();if(0===o)switch(t){case"b":case"c":return e.getBooleanArray(n);case"d":return e.getFloat64Array(n);case"f":return e.getFloat32Array(n);case"i":return e.getInt32Array(n);case"l":return e.getInt64Array(n)}const s=fflate.unzlibSync(new Uint8Array(e.getArrayBuffer(a))),i=new BinaryReader(s.buffer);switch(t){case"b":case"c":return i.getBooleanArray(n);case"d":return i.getFloat64Array(n);case"f":return i.getFloat32Array(n);case"i":return i.getInt32Array(n);case"l":return i.getInt64Array(n)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class BinaryReader{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t,this._textDecoder=new TextDecoder}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return 1==(1&this.getUint8())}getBooleanArray(e){const t=[];for(let r=0;r<e;r++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e}getInt64Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){const t=this.offset;let r=new Uint8Array(this.dv.buffer,t,e);this.skip(e);const n=r.indexOf(0);return n>=0&&(r=new Uint8Array(this.dv.buffer,t,n)),this._textDecoder.decode(r)}}class FBXTree{add(e,t){this[e]=t}}function isFbxFormatBinary(e){const t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===convertArrayBufferToString(e,0,t.length)}function isFbxFormatASCII(e){const t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let r=0;function n(t){const n=e[t-1];return e=e.slice(r+t),r++,n}for(let e=0;e<t.length;++e)if(n(1)===t[e])return!1;return!0}function getFbxVersion(e){const t=e.match(/FBXVersion: (\d+)/);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function convertFBXTimeToSeconds(e){return e/46186158e3}const dataArray=[];function getData(e,t,r,n){let o;switch(n.mappingType){case"ByPolygonVertex":o=e;break;case"ByPolygon":o=t;break;case"ByVertice":o=r;break;case"AllSame":o=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}"IndexToDirect"===n.referenceType&&(o=n.indices[o]);const a=o*n.dataSize,s=a+n.dataSize;return slice(dataArray,n.buffer,a,s)}const tempEuler=new Euler,tempVec=new Vector3;function generateTransform(e){const t=new Matrix4,r=new Matrix4,n=new Matrix4,o=new Matrix4,a=new Matrix4,s=new Matrix4,i=new Matrix4,c=new Matrix4,l=new Matrix4,p=new Matrix4,u=new Matrix4,h=new Matrix4,d=e.inheritType?e.inheritType:0;if(e.translation&&t.setPosition(tempVec.fromArray(e.translation)),e.preRotation){const t=e.preRotation.map(MathUtils.degToRad);t.push(e.eulerOrder||Euler.DEFAULT_ORDER),r.makeRotationFromEuler(tempEuler.fromArray(t))}if(e.rotation){const t=e.rotation.map(MathUtils.degToRad);t.push(e.eulerOrder||Euler.DEFAULT_ORDER),n.makeRotationFromEuler(tempEuler.fromArray(t))}if(e.postRotation){const t=e.postRotation.map(MathUtils.degToRad);t.push(e.eulerOrder||Euler.DEFAULT_ORDER),o.makeRotationFromEuler(tempEuler.fromArray(t)),o.invert()}e.scale&&a.scale(tempVec.fromArray(e.scale)),e.scalingOffset&&i.setPosition(tempVec.fromArray(e.scalingOffset)),e.scalingPivot&&s.setPosition(tempVec.fromArray(e.scalingPivot)),e.rotationOffset&&c.setPosition(tempVec.fromArray(e.rotationOffset)),e.rotationPivot&&l.setPosition(tempVec.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(u.copy(e.parentMatrix),p.copy(e.parentMatrixWorld));const f=r.clone().multiply(n).multiply(o),m=new Matrix4;m.extractRotation(p);const g=new Matrix4;g.copyPosition(p);const v=g.clone().invert().multiply(p),y=m.clone().invert().multiply(v),T=a,x=new Matrix4;if(0===d)x.copy(m).multiply(f).multiply(y).multiply(T);else if(1===d)x.copy(m).multiply(y).multiply(f).multiply(T);else{const e=(new Matrix4).scale((new Vector3).setFromMatrixScale(u)).clone().invert(),t=y.clone().multiply(e);x.copy(m).multiply(f).multiply(t).multiply(T)}const b=l.clone().invert(),w=s.clone().invert();let I=t.clone().multiply(c).multiply(l).multiply(r).multiply(n).multiply(o).multiply(b).multiply(i).multiply(s).multiply(a).multiply(w);const A=(new Matrix4).copyPosition(I),E=p.clone().multiply(A);return h.copyPosition(E),I=h.clone().multiply(x),I.premultiply(p.invert()),I}function getEulerOrder(e){const t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function parseNumberArray(e){return e.split(",").map((function(e){return parseFloat(e)}))}function convertArrayBufferToString(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=e.byteLength),(new TextDecoder).decode(new Uint8Array(e,t,r))}function append(e,t){for(let r=0,n=e.length,o=t.length;r<o;r++,n++)e[n]=t[r]}function slice(e,t,r,n){for(let o=r,a=0;o<n;o++,a++)e[a]=t[o];return e}function inject(e,t,r){return e.slice(0,t).concat(r).concat(e.slice(t))}export{FBXLoader};