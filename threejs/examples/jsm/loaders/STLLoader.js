import{BufferAttribute,BufferGeometry,FileLoader,Float32BufferAttribute,Loader,Vector3}from"three";class STLLoader extends Loader{constructor(t){super(t)}load(t,e,r,o){const n=this,a=new FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(r){try{e(n.parse(r))}catch(e){o?o(e):console.error(e),n.manager.itemError(t)}}),r,o)}parse(t){function e(t,e,r){for(let o=0,n=t.length;o<n;o++)if(t[o]!==e.getUint8(r+o))return!1;return!0}const r=function(t){if("string"==typeof t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=255&t.charCodeAt(r);return e.buffer||e}return t}(t);return function(t){const r=new DataView(t);if(84+50*r.getUint32(80,!0)===r.byteLength)return!0;const o=[115,111,108,105,100];for(let t=0;t<5;t++)if(e(o,r,t))return!1;return!0}(r)?function(t){const e=new DataView(t),r=e.getUint32(80,!0);let o,n,a,s,i,l,f,u,c=!1;for(let t=0;t<70;t++)1129270351==e.getUint32(t,!1)&&82==e.getUint8(t+4)&&61==e.getUint8(t+5)&&(c=!0,s=new Float32Array(3*r*3),i=e.getUint8(t+6)/255,l=e.getUint8(t+7)/255,f=e.getUint8(t+8)/255,u=e.getUint8(t+9)/255);const g=new BufferGeometry,d=new Float32Array(3*r*3),h=new Float32Array(3*r*3);for(let t=0;t<r;t++){const r=84+50*t,u=e.getFloat32(r,!0),g=e.getFloat32(r+4,!0),p=e.getFloat32(r+8,!0);if(c){const t=e.getUint16(r+48,!0);0==(32768&t)?(o=(31&t)/31,n=(t>>5&31)/31,a=(t>>10&31)/31):(o=i,n=l,a=f)}for(let i=1;i<=3;i++){const l=r+12*i,f=3*t*3+3*(i-1);d[f]=e.getFloat32(l,!0),d[f+1]=e.getFloat32(l+4,!0),d[f+2]=e.getFloat32(l+8,!0),h[f]=u,h[f+1]=g,h[f+2]=p,c&&(s[f]=o,s[f+1]=n,s[f+2]=a)}}return g.setAttribute("position",new BufferAttribute(d,3)),g.setAttribute("normal",new BufferAttribute(h,3)),c&&(g.setAttribute("color",new BufferAttribute(s,3)),g.hasColors=!0,g.alpha=u),g}(r):function(t){const e=new BufferGeometry,r=/solid([\s\S]*?)endsolid/g,o=/facet([\s\S]*?)endfacet/g;let n=0;const a=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,s=new RegExp("vertex"+a+a+a,"g"),i=new RegExp("normal"+a+a+a,"g"),l=[],f=[],u=new Vector3;let c,g=0,d=0,h=0;for(;null!==(c=r.exec(t));){d=h;const t=c[0];for(;null!==(c=o.exec(t));){let t=0,e=0;const r=c[0];for(;null!==(c=i.exec(r));)u.x=parseFloat(c[1]),u.y=parseFloat(c[2]),u.z=parseFloat(c[3]),e++;for(;null!==(c=s.exec(r));)l.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3])),f.push(u.x,u.y,u.z),t++,h++;1!==e&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+n),3!==t&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+n),n++}const r=d,a=h-d;e.addGroup(r,a,g),g++}return e.setAttribute("position",new Float32BufferAttribute(l,3)),e.setAttribute("normal",new Float32BufferAttribute(f,3)),e}("string"!=typeof(o=t)?(new TextDecoder).decode(o):o);var o}}export{STLLoader};