import{CompressedTexture,CompressedArrayTexture,Data3DTexture,DataTexture,FileLoader,FloatType,HalfFloatType,NoColorSpace,LinearFilter,LinearMipmapLinearFilter,Loader,RedFormat,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGBA_ASTC_4x4_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT5_Format,RGBAFormat,RGFormat,SRGBColorSpace,UnsignedByteType}from"three";import{WorkerPool}from"../utils/WorkerPool.js";import{read,KHR_DF_FLAG_ALPHA_PREMULTIPLIED,KHR_DF_TRANSFER_SRGB,KHR_SUPERCOMPRESSION_NONE,KHR_SUPERCOMPRESSION_ZSTD,VK_FORMAT_UNDEFINED,VK_FORMAT_R16_SFLOAT,VK_FORMAT_R16G16_SFLOAT,VK_FORMAT_R16G16B16A16_SFLOAT,VK_FORMAT_R32_SFLOAT,VK_FORMAT_R32G32_SFLOAT,VK_FORMAT_R32G32B32A32_SFLOAT,VK_FORMAT_R8_SRGB,VK_FORMAT_R8_UNORM,VK_FORMAT_R8G8_SRGB,VK_FORMAT_R8G8_UNORM,VK_FORMAT_R8G8B8A8_SRGB,VK_FORMAT_R8G8B8A8_UNORM}from"../libs/ktx-parse.module.js";import{ZSTDDecoder}from"../libs/zstddec.module.js";const _taskCache=new WeakMap;let _zstd,_activeLoaders=0;class KTX2Loader extends Loader{constructor(e){super(e),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new WorkerPool,this.workerSourceURL="",this.workerConfig=null,"undefined"!=typeof MSC_TRANSCODER&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(e){return this.transcoderPath=e,this}setWorkerLimit(e){return this.workerPool.setWorkerLimit(e),this}detectSupport(e){return!0===e.isWebGPURenderer?this.workerConfig={astcSupported:e.hasFeature("texture-compression-astc"),etc1Supported:!1,etc2Supported:e.hasFeature("texture-compression-etc2"),dxtSupported:e.hasFeature("texture-compression-bc"),bptcSupported:!1,pvrtcSupported:!1}:(this.workerConfig={astcSupported:e.extensions.has("WEBGL_compressed_texture_astc"),etc1Supported:e.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:e.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:e.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:e.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:e.extensions.has("WEBGL_compressed_texture_pvrtc")||e.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},e.capabilities.isWebGL2&&(this.workerConfig.etc1Supported=!1)),this}init(){if(!this.transcoderPending){const e=new FileLoader(this.manager);e.setPath(this.transcoderPath),e.setWithCredentials(this.withCredentials);const r=e.loadAsync("basis_transcoder.js"),t=new FileLoader(this.manager);t.setPath(this.transcoderPath),t.setResponseType("arraybuffer"),t.setWithCredentials(this.withCredentials);const o=t.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([r,o]).then((([e,r])=>{const t=KTX2Loader.BasisWorker.toString(),o=["/* constants */","let _EngineFormat = "+JSON.stringify(KTX2Loader.EngineFormat),"let _TranscoderFormat = "+JSON.stringify(KTX2Loader.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(KTX2Loader.BasisFormat),"/* basis_transcoder.js */",e,"/* worker */",t.substring(t.indexOf("{")+1,t.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([o])),this.transcoderBinary=r,this.workerPool.setWorkerCreator((()=>{const e=new Worker(this.workerSourceURL),r=this.transcoderBinary.slice(0);return e.postMessage({type:"init",config:this.workerConfig,transcoderBinary:r},[r]),e}))})),_activeLoaders>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),_activeLoaders++}return this.transcoderPending}load(e,r,t,o){if(null===this.workerConfig)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const a=new FileLoader(this.manager);a.setResponseType("arraybuffer"),a.setWithCredentials(this.withCredentials),a.load(e,(e=>{if(_taskCache.has(e))return _taskCache.get(e).promise.then(r).catch(o);this._createTexture(e).then((e=>r?r(e):null)).catch(o)}),t,o)}_createTextureFrom(e,r){const{mipmaps:t,width:o,height:a,format:s,type:n,error:i,dfdTransferFn:_,dfdFlags:T}=e;if("error"===n)return Promise.reject(i);const R=r.layerCount>1?new CompressedArrayTexture(t,o,a,r.layerCount,s,UnsignedByteType):new CompressedTexture(t,o,a,s,UnsignedByteType);return R.minFilter=1===t.length?LinearFilter:LinearMipmapLinearFilter,R.magFilter=LinearFilter,R.generateMipmaps=!1,R.needsUpdate=!0,R.colorSpace=_===KHR_DF_TRANSFER_SRGB?SRGBColorSpace:NoColorSpace,R.premultiplyAlpha=!!(T&KHR_DF_FLAG_ALPHA_PREMULTIPLIED),R}async _createTexture(e,r={}){const t=read(new Uint8Array(e));if(t.vkFormat!==VK_FORMAT_UNDEFINED)return createDataTexture(t);const o=r,a=this.init().then((()=>this.workerPool.postMessage({type:"transcode",buffer:e,taskConfig:o},[e]))).then((e=>this._createTextureFrom(e.data,t)));return _taskCache.set(e,{promise:a}),a}dispose(){return this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),_activeLoaders--,this}}KTX2Loader.BasisFormat={ETC1S:0,UASTC_4x4:1},KTX2Loader.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16},KTX2Loader.EngineFormat={RGBAFormat,RGBA_ASTC_4x4_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT5_Format,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format},KTX2Loader.BasisWorker=function(){let e,r,t;const o=_EngineFormat,a=_TranscoderFormat,s=_BasisFormat;self.addEventListener("message",(function(n){const d=n.data;switch(d.type){case"init":e=d.config,F=d.transcoderBinary,r=new Promise((e=>{t={wasmBinary:F,onRuntimeInitialized:e},BASIS(t)})).then((()=>{t.initializeBasis(),void 0===t.KTX2File&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")}));break;case"transcode":r.then((()=>{try{const{width:r,height:n,hasAlpha:F,mipmaps:c,format:p,dfdTransferFn:A,dfdFlags:m}=function(r){const n=new t.KTX2File(new Uint8Array(r));function d(){n.close(),n.delete()}if(!n.isValid())throw d(),new Error("THREE.KTX2Loader:\tInvalid or unsupported .ktx2 file");const F=n.isUASTC()?s.UASTC_4x4:s.ETC1S,c=n.getWidth(),p=n.getHeight(),A=n.getLayers()||1,m=n.getLevels(),l=n.getHasAlpha(),S=n.getDFDTransferFunc(),B=n.getDFDFlags(),{transcoderFormat:C,engineFormat:h}=function(r,t,n,R){let d,F;const c=r===s.ETC1S?i:_;for(let o=0;o<c.length;o++){const a=c[o];if(e[a.if]&&a.basisFormat.includes(r)&&!(R&&a.transcoderFormat.length<2)&&(!a.needsPowerOfTwo||T(t)&&T(n)))return d=a.transcoderFormat[R?1:0],F=a.engineFormat[R?1:0],{transcoderFormat:d,engineFormat:F}}return console.warn("THREE.KTX2Loader: No suitable compressed texture format found. Decoding to RGBA32."),d=a.RGBA32,F=o.RGBAFormat,{transcoderFormat:d,engineFormat:F}}(F,c,p,l);if(!c||!p||!m)throw d(),new Error("THREE.KTX2Loader:\tInvalid texture");if(!n.startTranscoding())throw d(),new Error("THREE.KTX2Loader: .startTranscoding failed");const u=[];for(let e=0;e<m;e++){const r=[];let t,o;for(let a=0;a<A;a++){const s=n.getImageLevelInfo(e,a,0);t=s.origWidth<4?s.origWidth:s.width,o=s.origHeight<4?s.origHeight:s.height;const i=new Uint8Array(n.getImageTranscodedSizeInBytes(e,a,0,C));if(!n.transcodeImage(i,e,a,0,C,0,-1,-1))throw d(),new Error("THREE.KTX2Loader: .transcodeImage failed.");r.push(i)}u.push({data:R(r),width:t,height:o})}return d(),{width:c,height:p,hasAlpha:l,mipmaps:u,format:h,dfdTransferFn:S,dfdFlags:B}}(d.buffer),l=[];for(let e=0;e<c.length;++e)l.push(c[e].data.buffer);self.postMessage({type:"transcode",id:d.id,width:r,height:n,hasAlpha:F,mipmaps:c,format:p,dfdTransferFn:A,dfdFlags:m},l)}catch(e){console.error(e),self.postMessage({type:"error",id:d.id,error:e.message})}}))}var F}));const n=[{if:"astcSupported",basisFormat:[s.UASTC_4x4],transcoderFormat:[a.ASTC_4x4,a.ASTC_4x4],engineFormat:[o.RGBA_ASTC_4x4_Format,o.RGBA_ASTC_4x4_Format],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[a.BC7_M5,a.BC7_M5],engineFormat:[o.RGBA_BPTC_Format,o.RGBA_BPTC_Format],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[a.BC1,a.BC3],engineFormat:[o.RGB_S3TC_DXT1_Format,o.RGBA_S3TC_DXT5_Format],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[a.ETC1,a.ETC2],engineFormat:[o.RGB_ETC2_Format,o.RGBA_ETC2_EAC_Format],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[a.ETC1],engineFormat:[o.RGB_ETC1_Format],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[s.ETC1S,s.UASTC_4x4],transcoderFormat:[a.PVRTC1_4_RGB,a.PVRTC1_4_RGBA],engineFormat:[o.RGB_PVRTC_4BPPV1_Format,o.RGBA_PVRTC_4BPPV1_Format],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0}],i=n.sort((function(e,r){return e.priorityETC1S-r.priorityETC1S})),_=n.sort((function(e,r){return e.priorityUASTC-r.priorityUASTC}));function T(e){return e<=2||0==(e&e-1)&&0!==e}function R(e){let r=0;for(const t of e)r+=t.byteLength;const t=new Uint8Array(r);let o=0;for(const r of e)t.set(r,o),o+=r.byteLength;return t}};const FORMAT_MAP={[VK_FORMAT_R32G32B32A32_SFLOAT]:RGBAFormat,[VK_FORMAT_R16G16B16A16_SFLOAT]:RGBAFormat,[VK_FORMAT_R8G8B8A8_UNORM]:RGBAFormat,[VK_FORMAT_R8G8B8A8_SRGB]:RGBAFormat,[VK_FORMAT_R32G32_SFLOAT]:RGFormat,[VK_FORMAT_R16G16_SFLOAT]:RGFormat,[VK_FORMAT_R8G8_UNORM]:RGFormat,[VK_FORMAT_R8G8_SRGB]:RGFormat,[VK_FORMAT_R32_SFLOAT]:RedFormat,[VK_FORMAT_R16_SFLOAT]:RedFormat,[VK_FORMAT_R8_SRGB]:RedFormat,[VK_FORMAT_R8_UNORM]:RedFormat},TYPE_MAP={[VK_FORMAT_R32G32B32A32_SFLOAT]:FloatType,[VK_FORMAT_R16G16B16A16_SFLOAT]:HalfFloatType,[VK_FORMAT_R8G8B8A8_UNORM]:UnsignedByteType,[VK_FORMAT_R8G8B8A8_SRGB]:UnsignedByteType,[VK_FORMAT_R32G32_SFLOAT]:FloatType,[VK_FORMAT_R16G16_SFLOAT]:HalfFloatType,[VK_FORMAT_R8G8_UNORM]:UnsignedByteType,[VK_FORMAT_R8G8_SRGB]:UnsignedByteType,[VK_FORMAT_R32_SFLOAT]:FloatType,[VK_FORMAT_R16_SFLOAT]:HalfFloatType,[VK_FORMAT_R8_SRGB]:UnsignedByteType,[VK_FORMAT_R8_UNORM]:UnsignedByteType},COLOR_SPACE_MAP={[VK_FORMAT_R8G8B8A8_SRGB]:SRGBColorSpace,[VK_FORMAT_R8G8_SRGB]:SRGBColorSpace,[VK_FORMAT_R8_SRGB]:SRGBColorSpace};async function createDataTexture(e){const{vkFormat:r,pixelWidth:t,pixelHeight:o,pixelDepth:a}=e;if(void 0===FORMAT_MAP[r])throw new Error("THREE.KTX2Loader: Unsupported vkFormat.");const s=e.levels[0];let n,i;if(e.supercompressionScheme===KHR_SUPERCOMPRESSION_NONE)n=s.levelData;else{if(e.supercompressionScheme!==KHR_SUPERCOMPRESSION_ZSTD)throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");_zstd||(_zstd=new Promise((async e=>{const r=new ZSTDDecoder;await r.init(),e(r)}))),n=(await _zstd).decode(s.levelData,s.uncompressedByteLength)}i=TYPE_MAP[r]===FloatType?new Float32Array(n.buffer,n.byteOffset,n.byteLength/Float32Array.BYTES_PER_ELEMENT):TYPE_MAP[r]===HalfFloatType?new Uint16Array(n.buffer,n.byteOffset,n.byteLength/Uint16Array.BYTES_PER_ELEMENT):n;const _=0===a?new DataTexture(i,t,o):new Data3DTexture(i,t,o,a);return _.type=TYPE_MAP[r],_.format=FORMAT_MAP[r],_.colorSpace=COLOR_SPACE_MAP[r]||NoColorSpace,_.needsUpdate=!0,Promise.resolve(_)}export{KTX2Loader};