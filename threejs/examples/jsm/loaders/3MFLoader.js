import{BufferAttribute,BufferGeometry,ClampToEdgeWrapping,Color,FileLoader,Float32BufferAttribute,Group,LinearFilter,LinearMipmapLinearFilter,Loader,Matrix4,Mesh,MeshPhongMaterial,MeshStandardMaterial,MirroredRepeatWrapping,NearestFilter,RepeatWrapping,TextureLoader,SRGBColorSpace}from"three";import*as fflate from"../libs/fflate.module.js";class ThreeMFLoader extends Loader{constructor(e){super(e),this.availableExtensions=[]}load(e,t,r,o){const n=this,s=new FileLoader(n.manager);s.setPath(n.path),s.setResponseType("arraybuffer"),s.setRequestHeader(n.requestHeader),s.setWithCredentials(n.withCredentials),s.load(e,(function(r){try{t(n.parse(r))}catch(t){o?o(t):console.error(t),n.manager.itemError(e)}}),r,o)}parse(e){const t=this,r=new TextureLoader(this.manager);function o(e){const t=[],r=(new DOMParser).parseFromString(e,"application/xml").querySelectorAll("Relationship");for(let e=0;e<r.length;e++){const o=r[e],n={target:o.getAttribute("Target"),id:o.getAttribute("Id"),type:o.getAttribute("Type")};t.push(n)}return t}function n(e){const t={id:e.getAttribute("id"),basematerials:[]},r=e.querySelectorAll("base");for(let e=0;e<r.length;e++){const o=a(r[e]);o.index=e,t.basematerials.push(o)}return t}function s(e){const t={id:e.getAttribute("id"),texid:e.getAttribute("texid"),displaypropertiesid:e.getAttribute("displaypropertiesid")},r=e.querySelectorAll("tex2coord"),o=[];for(let e=0;e<r.length;e++){const t=r[e],n=t.getAttribute("u"),s=t.getAttribute("v");o.push(parseFloat(n),parseFloat(s))}return t.uvs=new Float32Array(o),t}function i(e){const t={id:e.getAttribute("id"),displaypropertiesid:e.getAttribute("displaypropertiesid")},r=e.querySelectorAll("color"),o=[],n=new Color;for(let e=0;e<r.length;e++){const t=r[e].getAttribute("color");n.setStyle(t.substring(0,7)),n.convertSRGBToLinear(),o.push(n.r,n.g,n.b)}return t.colors=new Float32Array(o),t}function l(e){const t={id:e.getAttribute("id")},r=e.querySelectorAll("pbmetallic"),o=[];for(let e=0;e<r.length;e++){const t=r[e];o.push({name:t.getAttribute("name"),metallicness:parseFloat(t.getAttribute("metallicness")),roughness:parseFloat(t.getAttribute("roughness"))})}return t.data=o,t}function a(e){const t={};return t.name=e.getAttribute("name"),t.displaycolor=e.getAttribute("displaycolor"),t.displaypropertiesid=e.getAttribute("displaypropertiesid"),t}function u(e){const t={};t.objectId=e.getAttribute("objectid");const r=e.getAttribute("transform");return r&&(t.transform=c(r)),t}function c(e){const t=[];e.split(" ").forEach((function(e){t.push(parseFloat(e))}));const r=new Matrix4;return r.set(t[0],t[3],t[6],t[9],t[1],t[4],t[7],t[10],t[2],t[5],t[8],t[11],0,0,0,1),r}function p(e){const t={type:e.getAttribute("type")},r=e.getAttribute("id");r&&(t.id=r);const o=e.getAttribute("pid");o&&(t.pid=o);const n=e.getAttribute("pindex");n&&(t.pindex=n);const s=e.getAttribute("thumbnail");s&&(t.thumbnail=s);const i=e.getAttribute("partnumber");i&&(t.partnumber=i);const l=e.getAttribute("name");l&&(t.name=l);const a=e.querySelector("mesh");a&&(t.mesh=function(e){const t={},r=[],o=e.querySelectorAll("vertices vertex");for(let e=0;e<o.length;e++){const t=o[e],n=t.getAttribute("x"),s=t.getAttribute("y"),i=t.getAttribute("z");r.push(parseFloat(n),parseFloat(s),parseFloat(i))}t.vertices=new Float32Array(r);const n=[],s=[],i=e.querySelectorAll("triangles triangle");for(let e=0;e<i.length;e++){const t=i[e],r=t.getAttribute("v1"),o=t.getAttribute("v2"),l=t.getAttribute("v3"),a=t.getAttribute("p1"),u=t.getAttribute("p2"),c=t.getAttribute("p3"),p=t.getAttribute("pid"),d={};d.v1=parseInt(r,10),d.v2=parseInt(o,10),d.v3=parseInt(l,10),s.push(d.v1,d.v2,d.v3),a&&(d.p1=parseInt(a,10)),u&&(d.p2=parseInt(u,10)),c&&(d.p3=parseInt(c,10)),p&&(d.pid=p),0<Object.keys(d).length&&n.push(d)}return t.triangleProperties=n,t.triangles=new Uint32Array(s),t}(a));const c=e.querySelector("components");return c&&(t.components=function(e){const t=[],r=e.querySelectorAll("component");for(let e=0;e<r.length;e++){const o=u(r[e]);t.push(o)}return t}(c)),t}function d(e){const t={unit:e.getAttribute("unit")||"millimeter"},r=e.querySelectorAll("metadata");r&&(t.metadata=function(e){const t={};for(let r=0;r<e.length;r++){const o=e[r],n=o.getAttribute("name");0<=["Title","Designer","Description","Copyright","LicenseTerms","Rating","CreationDate","ModificationDate"].indexOf(n)&&(t[n]=o.textContent)}return t}(r));const o=e.querySelector("resources");o&&(t.resources=function(e){const t={basematerials:{}},r=e.querySelectorAll("basematerials");for(let e=0;e<r.length;e++){const o=n(r[e]);t.basematerials[o.id]=o}t.texture2d={};const o=e.querySelectorAll("texture2d");for(let e=0;e<o.length;e++){const r={id:(a=o[e]).getAttribute("id"),path:a.getAttribute("path"),contenttype:a.getAttribute("contenttype"),tilestyleu:a.getAttribute("tilestyleu"),tilestylev:a.getAttribute("tilestylev"),filter:a.getAttribute("filter")};t.texture2d[r.id]=r}var a;t.colorgroup={};const u=e.querySelectorAll("colorgroup");for(let e=0;e<u.length;e++){const r=i(u[e]);t.colorgroup[r.id]=r}t.pbmetallicdisplayproperties={};const c=e.querySelectorAll("pbmetallicdisplayproperties");for(let e=0;e<c.length;e++){const r=l(c[e]);t.pbmetallicdisplayproperties[r.id]=r}t.texture2dgroup={};const d=e.querySelectorAll("texture2dgroup");for(let e=0;e<d.length;e++){const r=s(d[e]);t.texture2dgroup[r.id]=r}t.object={};const h=e.querySelectorAll("object");for(let e=0;e<h.length;e++){const r=p(h[e]);t.object[r.id]=r}return t}(o));const a=e.querySelector("build");return a&&(t.build=function(e){const t=[],r=e.querySelectorAll("item");for(let e=0;e<r.length;e++){const o=r[e],n={objectId:o.getAttribute("objectid")},s=o.getAttribute("transform");s&&(n.transform=c(s)),t.push(n)}return t}(a)),t}function h(e,t,o,n){const s=e.texid,i=o.resources.texture2d[s];if(i){const e=n[i.path],t=i.contenttype,o=new Blob([e],{type:t}),s=URL.createObjectURL(o),l=r.load(s,(function(){URL.revokeObjectURL(s)}));switch(l.colorSpace=SRGBColorSpace,i.tilestyleu){case"wrap":default:l.wrapS=RepeatWrapping;break;case"mirror":l.wrapS=MirroredRepeatWrapping;break;case"none":case"clamp":l.wrapS=ClampToEdgeWrapping}switch(i.tilestylev){case"wrap":default:l.wrapT=RepeatWrapping;break;case"mirror":l.wrapT=MirroredRepeatWrapping;break;case"none":case"clamp":l.wrapT=ClampToEdgeWrapping}switch(i.filter){case"auto":default:l.magFilter=LinearFilter,l.minFilter=LinearMipmapLinearFilter;break;case"linear":l.magFilter=LinearFilter,l.minFilter=LinearFilter;break;case"nearest":l.magFilter=NearestFilter,l.minFilter=NearestFilter}return l}return null}function g(e,t,r,o,n,s,i){const l=i.pindex,a={};for(let e=0,r=t.length;e<r;e++){const r=t[e],o=void 0!==r.p1?r.p1:l;void 0===a[o]&&(a[o]=[]),a[o].push(r)}const u=Object.keys(a),c=[];for(let t=0,l=u.length;t<l;t++){const l=u[t],p=a[l],d=v(e.basematerials[l],o,n,s,i,x),h=new BufferGeometry,g=[],f=r.vertices;for(let e=0,t=p.length;e<t;e++){const t=p[e];g.push(f[3*t.v1+0]),g.push(f[3*t.v1+1]),g.push(f[3*t.v1+2]),g.push(f[3*t.v2+0]),g.push(f[3*t.v2+1]),g.push(f[3*t.v2+2]),g.push(f[3*t.v3+0]),g.push(f[3*t.v3+1]),g.push(f[3*t.v3+2])}h.setAttribute("position",new Float32BufferAttribute(g,3));const b=new Mesh(h,d);c.push(b)}return c}function f(e,t,r,o,n,s,i){const l=new BufferGeometry,a=[],u=[],c=r.vertices,p=e.uvs;for(let e=0,r=t.length;e<r;e++){const r=t[e];a.push(c[3*r.v1+0]),a.push(c[3*r.v1+1]),a.push(c[3*r.v1+2]),a.push(c[3*r.v2+0]),a.push(c[3*r.v2+1]),a.push(c[3*r.v2+2]),a.push(c[3*r.v3+0]),a.push(c[3*r.v3+1]),a.push(c[3*r.v3+2]),u.push(p[2*r.p1+0]),u.push(p[2*r.p1+1]),u.push(p[2*r.p2+0]),u.push(p[2*r.p2+1]),u.push(p[2*r.p3+0]),u.push(p[2*r.p3+1])}l.setAttribute("position",new Float32BufferAttribute(a,3)),l.setAttribute("uv",new Float32BufferAttribute(u,2));const d=v(e,o,n,s,i,h),g=new MeshPhongMaterial({map:d,flatShading:!0});return new Mesh(l,g)}function b(e,t,r,o){const n=new BufferGeometry,s=[],i=[],l=r.vertices,a=e.colors;for(let e=0,r=t.length;e<r;e++){const r=t[e],n=r.v1,u=r.v2,c=r.v3;s.push(l[3*n+0]),s.push(l[3*n+1]),s.push(l[3*n+2]),s.push(l[3*u+0]),s.push(l[3*u+1]),s.push(l[3*u+2]),s.push(l[3*c+0]),s.push(l[3*c+1]),s.push(l[3*c+2]);const p=void 0!==r.p1?r.p1:o.pindex,d=void 0!==r.p2?r.p2:p,h=void 0!==r.p3?r.p3:p;i.push(a[3*p+0]),i.push(a[3*p+1]),i.push(a[3*p+2]),i.push(a[3*d+0]),i.push(a[3*d+1]),i.push(a[3*d+2]),i.push(a[3*h+0]),i.push(a[3*h+1]),i.push(a[3*h+2])}n.setAttribute("position",new Float32BufferAttribute(s,3)),n.setAttribute("color",new Float32BufferAttribute(i,3));const u=new MeshPhongMaterial({vertexColors:!0,flatShading:!0});return new Mesh(n,u)}function m(e){const t=new BufferGeometry;t.setIndex(new BufferAttribute(e.triangles,1)),t.setAttribute("position",new BufferAttribute(e.vertices,3));const r=new MeshPhongMaterial({color:16777215,flatShading:!0});return new Mesh(t,r)}function A(e,t){return void 0!==t.resources.texture2dgroup[e]?"texture":void 0!==t.resources.basematerials[e]?"material":void 0!==t.resources.colorgroup[e]?"vertexColors":"default"===e?"default":void 0}function y(e,t,r,o,n){const s=new Group,i=function(e,t){const r={},o=e.triangleProperties,n=t.pid;for(let e=0,t=o.length;e<t;e++){const t=o[e];let s=void 0!==t.pid?t.pid:n;void 0===s&&(s="default"),void 0===r[s]&&(r[s]=[]),r[s].push(t)}return r}(e,n),l=function(e,t,r,o,n,s){const i=Object.keys(e),l=[];for(let a=0,u=i.length;a<u;a++){const u=i[a],c=e[u];switch(A(u,o)){case"material":const e=g(o.resources.basematerials[u],c,t,r,o,n,s);for(let t=0,r=e.length;t<r;t++)l.push(e[t]);break;case"texture":const i=o.resources.texture2dgroup[u];l.push(f(i,c,t,r,o,n,s));break;case"vertexColors":const a=o.resources.colorgroup[u];l.push(b(a,c,t,s));break;case"default":l.push(m(t));break;default:console.error("THREE.3MFLoader: Unsupported resource type.")}}if(s.name)for(let e=0;e<l.length;e++)l[e].name=s.name;return l}(i,e,t,r,o,n);for(let e=0,t=l.length;e<t;e++)s.add(l[e]);return s}function v(e,t,r,o,n,s){return void 0!==e.build||(e.build=s(e,t,r,o,n)),e.build}function x(e,t,r){let o;const n=e.displaypropertiesid,s=r.resources.pbmetallicdisplayproperties;if(null!==n&&void 0!==s[n]){const t=s[n].data[e.index];o=new MeshStandardMaterial({flatShading:!0,roughness:t.roughness,metalness:t.metallicness})}else o=new MeshPhongMaterial({flatShading:!0});o.name=e.name;const i=e.displaycolor,l=i.substring(0,7);return o.color.setStyle(l),o.color.convertSRGBToLinear(),9===i.length&&(o.opacity=parseInt(i.charAt(7)+i.charAt(8),16)/255),o}function w(e,t,r,o){const n=new Group;for(let s=0;s<e.length;s++){const i=e[s];let l=t[i.objectId];void 0===l&&(F(i.objectId,t,r,o),l=t[i.objectId]);const a=l.clone(),u=i.transform;u&&a.applyMatrix4(u),n.add(a)}return n}function F(e,r,o,n){const s=o.resources.object[e];if(s.mesh){const e=s.mesh;!function(e,r,o){if(!e)return;const n=[],s=Object.keys(e);for(let e=0;e<s.length;e++){const r=s[e];for(let e=0;e<t.availableExtensions.length;e++){const o=t.availableExtensions[e];o.ns===r&&n.push(o)}}for(let t=0;t<n.length;t++){const s=n[t];s.apply(o,e[s.ns],r)}}(o.extensions,e,o.xml),r[s.id]=v(e,r,o,n,s,y)}else{const e=s.components;r[s.id]=v(e,r,o,n,s,w)}s.name&&(r[s.id].name=s.name)}const S=function(e){let t,r,n=null,s=null;const i=[],l=[];let a;const u={},c={},p=new TextDecoder;try{n=fflate.unzipSync(new Uint8Array(e))}catch(e){if(e instanceof ReferenceError)return console.error("THREE.3MFLoader: fflate missing and file is compressed."),null}for(s in n)s.match(/\_rels\/.rels$/)?t=s:s.match(/3D\/_rels\/.*\.model\.rels$/)?r=s:s.match(/^3D\/.*\.model$/)?i.push(s):s.match(/^3D\/Textures?\/.*/)&&l.push(s);const h=n[t],g=o(p.decode(h));if(r){const e=n[r];a=o(p.decode(e))}for(let e=0;e<i.length;e++){const t=i[e],r=n[t],o=p.decode(r),s=(new DOMParser).parseFromString(o,"application/xml");"model"!==s.documentElement.nodeName.toLowerCase()&&console.error("THREE.3MFLoader: Error loading 3MF - no 3MF document found: ",t);const l=s.querySelector("model"),a={};for(let e=0;e<l.attributes.length;e++){const t=l.attributes[e];t.name.match(/^xmlns:(.+)$/)&&(a[t.value]=RegExp.$1)}const c=d(l);c.xml=l,0<Object.keys(a).length&&(c.extensions=a),u[t]=c}for(let e=0;e<l.length;e++){const t=l[e];c[t]=n[t].buffer}return{rels:g,modelRels:a,model:u,printTicket:{},texture:c}}(e),M=function(e){const t=e.model,r=e.modelRels,o={},n=Object.keys(t),s={};if(r)for(let t=0,o=r.length;t<o;t++){const o=r[t],n=o.target.substring(1);e.texture[n]&&(s[o.target]=e.texture[n])}for(let e=0;e<n.length;e++){const r=t[n[e]],i=Object.keys(r.resources.object);for(let e=0;e<i.length;e++)F(i[e],o,r,s)}return o}(S);return function(e,t){const r=new Group,o=function(e){for(let t=0;t<e.length;t++){const r=e[t];if("model"===r.target.split(".").pop().toLowerCase())return r}}(t.rels),n=t.model[o.target.substring(1)].build;for(let t=0;t<n.length;t++){const o=n[t],s=e[o.objectId].clone(),i=o.transform;i&&s.applyMatrix4(i),r.add(s)}return r}(M,S)}addExtension(e){this.availableExtensions.push(e)}}export{ThreeMFLoader};