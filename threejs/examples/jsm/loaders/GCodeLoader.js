import{BufferGeometry,FileLoader,Float32BufferAttribute,Group,LineBasicMaterial,LineSegments,Loader}from"three";class GCodeLoader extends Loader{constructor(e){super(e),this.splitLayer=!1}load(e,t,r,o){const n=this,i=new FileLoader(n.manager);i.setPath(n.path),i.setRequestHeader(n.requestHeader),i.setWithCredentials(n.withCredentials),i.load(e,(function(r){try{t(n.parse(r))}catch(t){o?o(t):console.error(t),n.manager.itemError(e)}}),r,o)}parse(e){let t={x:0,y:0,z:0,e:0,f:0,extruding:!1,relative:!1};const r=[];let o;const n=new LineBasicMaterial({color:16711680});n.name="path";const i=new LineBasicMaterial({color:65280});function s(e){o={vertex:[],pathVertex:[],z:e.z},r.push(o)}function a(e,r){return t.relative?r:r-e}function l(e,r){return t.relative?e+r:r}i.name="extruded";const c=e.replace(/;.+/g,"").split("\n");for(let e=0;e<c.length;e++){const r=c[e].split(" "),n=r[0].toUpperCase(),i={};if(r.splice(1).forEach((function(e){if(void 0!==e[0]){const t=e[0].toLowerCase(),r=parseFloat(e.substring(1));i[t]=r}})),"G0"===n||"G1"===n){const e={x:void 0!==i.x?l(t.x,i.x):t.x,y:void 0!==i.y?l(t.y,i.y):t.y,z:void 0!==i.z?l(t.z,i.z):t.z,e:void 0!==i.e?l(t.e,i.e):t.e,f:void 0!==i.f?l(t.f,i.f):t.f};a(t.e,e.e)>0&&(t.extruding=a(t.e,e.e)>0,null!=o&&e.z==o.z||s(e)),u=t,d=e,void 0===o&&s(u),t.extruding?(o.vertex.push(u.x,u.y,u.z),o.vertex.push(d.x,d.y,d.z)):(o.pathVertex.push(u.x,u.y,u.z),o.pathVertex.push(d.x,d.y,d.z)),t=e}else if("G2"===n||"G3"===n);else if("G90"===n)t.relative=!1;else if("G91"===n)t.relative=!0;else if("G92"===n){const e=t;e.x=void 0!==i.x?i.x:e.x,e.y=void 0!==i.y?i.y:e.y,e.z=void 0!==i.z?i.z:e.z,e.e=void 0!==i.e?i.e:e.e}}var u,d;function f(e,t,r){const o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute(e,3));const s=new LineSegments(o,t?i:n);s.name="layer"+r,h.add(s)}const h=new Group;if(h.name="gcode",this.splitLayer)for(let e=0;e<r.length;e++){const t=r[e];f(t.vertex,!0,e),f(t.pathVertex,!1,e)}else{const e=[],t=[];for(let o=0;o<r.length;o++){const n=r[o],i=n.vertex,s=n.pathVertex;for(let t=0;t<i.length;t++)e.push(i[t]);for(let e=0;e<s.length;e++)t.push(s[e])}f(e,!0,r.length),f(t,!1,r.length)}return h.rotation.set(-Math.PI/2,0,0),h}}export{GCodeLoader};