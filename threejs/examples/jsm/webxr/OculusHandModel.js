import{Object3D,Sphere,Box3}from"three";import{XRHandMeshModel}from"./XRHandMeshModel.js";const TOUCH_RADIUS=.01,POINTING_JOINT="index-finger-tip";class OculusHandModel extends Object3D{constructor(t,e=null){super(),this.controller=t,this.motionController=null,this.envMap=null,this.loader=e,this.mesh=null,t.addEventListener("connected",(e=>{const o=e.data;o.hand&&!this.motionController&&(this.xrInputSource=o,this.motionController=new XRHandMeshModel(this,t,this.path,o.handedness,this.loader))})),t.addEventListener("disconnected",(()=>{this.clear(),this.motionController=null}))}updateMatrixWorld(t){super.updateMatrixWorld(t),this.motionController&&this.motionController.updateMesh()}getPointerPosition(){const t=this.controller.joints[POINTING_JOINT];return t?t.position:null}intersectBoxObject(t){const e=this.getPointerPosition();if(e){const o=new Sphere(e,.01),n=(new Box3).setFromObject(t);return o.intersectsBox(n)}return!1}checkButton(t){this.intersectBoxObject(t)?t.onPress():t.onClear(),t.isPressed()&&t.whilePressed()}}export{OculusHandModel};