import{Object3D}from"three";import{XRHandPrimitiveModel}from"./XRHandPrimitiveModel.js";import{XRHandMeshModel}from"./XRHandMeshModel.js";class XRHandModel extends Object3D{constructor(e){super(),this.controller=e,this.motionController=null,this.envMap=null,this.mesh=null}updateMatrixWorld(e){super.updateMatrixWorld(e),this.motionController&&this.motionController.updateMesh()}}class XRHandModelFactory{constructor(){this.path=null}setPath(e){return this.path=e,this}createHandModel(e,t){const o=new XRHandModel(e);return e.addEventListener("connected",(n=>{const r=n.data;r.hand&&!o.motionController&&(o.xrInputSource=r,void 0===t||"spheres"===t?o.motionController=new XRHandPrimitiveModel(o,e,this.path,r.handedness,{primitive:"sphere"}):"boxes"===t?o.motionController=new XRHandPrimitiveModel(o,e,this.path,r.handedness,{primitive:"box"}):"mesh"===t&&(o.motionController=new XRHandMeshModel(o,e,this.path,r.handedness))),e.visible=!0})),e.addEventListener("disconnected",(()=>{e.visible=!1})),o}}export{XRHandModelFactory};