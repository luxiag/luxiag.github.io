import{DataTexture,FloatType,MathUtils,RedFormat,LuminanceFormat,ShaderMaterial,UniformsUtils}from"three";import{Pass,FullScreenQuad}from"./Pass.js";import{DigitalGlitch}from"../shaders/DigitalGlitch.js";class GlitchPass extends Pass{constructor(t=64){super();const a=DigitalGlitch;this.uniforms=UniformsUtils.clone(a.uniforms),this.heightMap=this.generateHeightmap(t),this.uniforms.tDisp.value=this.heightMap,this.material=new ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.fsQuad=new FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()}render(t,a,s){!1===t.capabilities.isWebGL2&&(this.uniforms.tDisp.value.format=LuminanceFormat),this.uniforms.tDiffuse.value=s.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=MathUtils.randFloat(-1,1),this.uniforms.seed_y.value=MathUtils.randFloat(-1,1),this.uniforms.distortion_x.value=MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=MathUtils.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=MathUtils.randFloat(0,1),this.uniforms.seed_x.value=MathUtils.randFloat(-.3,.3),this.uniforms.seed_y.value=MathUtils.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(a),this.clear&&t.clear(),this.fsQuad.render(t))}generateTrigger(){this.randX=MathUtils.randInt(120,240)}generateHeightmap(t){const a=new Float32Array(t*t),s=t*t;for(let t=0;t<s;t++){const s=MathUtils.randFloat(0,1);a[t]=s}const i=new DataTexture(a,t,t,RedFormat,FloatType);return i.needsUpdate=!0,i}dispose(){this.material.dispose(),this.heightMap.dispose(),this.fsQuad.dispose()}}export{GlitchPass};