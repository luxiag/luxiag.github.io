import{AddEquation,Color,CustomBlending,DataTexture,DepthTexture,DstAlphaFactor,DstColorFactor,FloatType,MathUtils,MeshNormalMaterial,NearestFilter,NoBlending,RedFormat,LuminanceFormat,DepthStencilFormat,UnsignedInt248Type,RepeatWrapping,ShaderMaterial,UniformsUtils,Vector3,WebGLRenderTarget,ZeroFactor}from"three";import{Pass,FullScreenQuad}from"./Pass.js";import{SimplexNoise}from"../math/SimplexNoise.js";import{SSAOShader}from"../shaders/SSAOShader.js";import{SSAOBlurShader}from"../shaders/SSAOShader.js";import{SSAODepthShader}from"../shaders/SSAOShader.js";import{CopyShader}from"../shaders/CopyShader.js";class SSAOPass extends Pass{constructor(e,r,t,a){super(),this.width=void 0!==t?t:512,this.height=void 0!==a?a:512,this.clear=!0,this.camera=r,this.scene=e,this.kernelRadius=8,this.kernelSize=32,this.kernel=[],this.noiseTexture=null,this.output=0,this.minDistance=.005,this.maxDistance=.1,this._visibilityCache=new Map,this.generateSampleKernel(),this.generateRandomKernelRotations();const i=new DepthTexture;i.format=DepthStencilFormat,i.type=UnsignedInt248Type,this.beautyRenderTarget=new WebGLRenderTarget(this.width,this.height),this.normalRenderTarget=new WebGLRenderTarget(this.width,this.height,{minFilter:NearestFilter,magFilter:NearestFilter,depthTexture:i}),this.ssaoRenderTarget=new WebGLRenderTarget(this.width,this.height),this.blurRenderTarget=this.ssaoRenderTarget.clone(),this.ssaoMaterial=new ShaderMaterial({defines:Object.assign({},SSAOShader.defines),uniforms:UniformsUtils.clone(SSAOShader.uniforms),vertexShader:SSAOShader.vertexShader,fragmentShader:SSAOShader.fragmentShader,blending:NoBlending}),this.ssaoMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssaoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssaoMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.ssaoMaterial.uniforms.tNoise.value=this.noiseTexture,this.ssaoMaterial.uniforms.kernel.value=this.kernel,this.ssaoMaterial.uniforms.cameraNear.value=this.camera.near,this.ssaoMaterial.uniforms.cameraFar.value=this.camera.far,this.ssaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new MeshNormalMaterial,this.normalMaterial.blending=NoBlending,this.blurMaterial=new ShaderMaterial({defines:Object.assign({},SSAOBlurShader.defines),uniforms:UniformsUtils.clone(SSAOBlurShader.uniforms),vertexShader:SSAOBlurShader.vertexShader,fragmentShader:SSAOBlurShader.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new ShaderMaterial({defines:Object.assign({},SSAODepthShader.defines),uniforms:UniformsUtils.clone(SSAODepthShader.uniforms),vertexShader:SSAODepthShader.vertexShader,fragmentShader:SSAODepthShader.fragmentShader,blending:NoBlending}),this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new ShaderMaterial({uniforms:UniformsUtils.clone(CopyShader.uniforms),vertexShader:CopyShader.vertexShader,fragmentShader:CopyShader.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:DstColorFactor,blendDst:ZeroFactor,blendEquation:AddEquation,blendSrcAlpha:DstAlphaFactor,blendDstAlpha:ZeroFactor,blendEquationAlpha:AddEquation}),this.fsQuad=new FullScreenQuad(null),this.originalClearColor=new Color}dispose(){this.beautyRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.ssaoRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.normalMaterial.dispose(),this.blurMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(e,r){switch(!1===e.capabilities.isWebGL2&&(this.noiseTexture.format=LuminanceFormat),e.setRenderTarget(this.beautyRenderTarget),e.clear(),e.render(this.scene,this.camera),this.overrideVisibility(),this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.restoreVisibility(),this.ssaoMaterial.uniforms.kernelRadius.value=this.kernelRadius,this.ssaoMaterial.uniforms.minDistance.value=this.minDistance,this.ssaoMaterial.uniforms.maxDistance.value=this.maxDistance,this.renderPass(e,this.ssaoMaterial,this.ssaoRenderTarget),this.renderPass(e,this.blurMaterial,this.blurRenderTarget),this.output){case SSAOPass.OUTPUT.SSAO:this.copyMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.copyMaterial.blending=NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case SSAOPass.OUTPUT.Blur:this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case SSAOPass.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case SSAOPass.OUTPUT.Depth:this.renderPass(e,this.depthRenderMaterial,this.renderToScreen?null:r);break;case SSAOPass.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case SSAOPass.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r),this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=CustomBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;default:console.warn("THREE.SSAOPass: Unknown output type.")}}renderPass(e,r,t,a,i){e.getClearColor(this.originalClearColor);const s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,null!=a&&(e.setClearColor(a),e.setClearAlpha(i||0),e.clear()),this.fsQuad.material=r,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}renderOverride(e,r,t,a,i){e.getClearColor(this.originalClearColor);const s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,a=r.clearColor||a,i=r.clearAlpha||i,null!=a&&(e.setClearColor(a),e.setClearAlpha(i||0),e.clear()),this.scene.overrideMaterial=r,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}setSize(e,r){this.width=e,this.height=r,this.beautyRenderTarget.setSize(e,r),this.ssaoRenderTarget.setSize(e,r),this.normalRenderTarget.setSize(e,r),this.blurRenderTarget.setSize(e,r),this.ssaoMaterial.uniforms.resolution.value.set(e,r),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(e,r)}generateSampleKernel(){const e=this.kernelSize,r=this.kernel;for(let t=0;t<e;t++){const a=new Vector3;a.x=2*Math.random()-1,a.y=2*Math.random()-1,a.z=Math.random(),a.normalize();let i=t/e;i=MathUtils.lerp(.1,1,i*i),a.multiplyScalar(i),r.push(a)}}generateRandomKernelRotations(){const e=new SimplexNoise,r=new Float32Array(16);for(let t=0;t<16;t++){const a=2*Math.random()-1,i=2*Math.random()-1,s=0;r[t]=e.noise3d(a,i,s)}this.noiseTexture=new DataTexture(r,4,4,RedFormat,FloatType),this.noiseTexture.wrapS=RepeatWrapping,this.noiseTexture.wrapT=RepeatWrapping,this.noiseTexture.needsUpdate=!0}overrideVisibility(){const e=this.scene,r=this._visibilityCache;e.traverse((function(e){r.set(e,e.visible),(e.isPoints||e.isLine)&&(e.visible=!1)}))}restoreVisibility(){const e=this.scene,r=this._visibilityCache;e.traverse((function(e){const t=r.get(e);e.visible=t})),r.clear()}}SSAOPass.OUTPUT={Default:0,SSAO:1,Blur:2,Beauty:3,Depth:4,Normal:5};export{SSAOPass};