import{MeshBasicMaterial,NearestFilter,ShaderMaterial,UniformsUtils,WebGLRenderTarget}from"three";import{Pass,FullScreenQuad}from"./Pass.js";import{AfterimageShader}from"../shaders/AfterimageShader.js";class AfterimagePass extends Pass{constructor(e=.96){super(),this.shader=AfterimageShader,this.uniforms=UniformsUtils.clone(this.shader.uniforms),this.uniforms.damp.value=e,this.textureComp=new WebGLRenderTarget(window.innerWidth,window.innerHeight,{magFilter:NearestFilter}),this.textureOld=new WebGLRenderTarget(window.innerWidth,window.innerHeight,{magFilter:NearestFilter}),this.compFsMaterial=new ShaderMaterial({uniforms:this.uniforms,vertexShader:this.shader.vertexShader,fragmentShader:this.shader.fragmentShader}),this.compFsQuad=new FullScreenQuad(this.compFsMaterial),this.copyFsMaterial=new MeshBasicMaterial,this.copyFsQuad=new FullScreenQuad(this.copyFsMaterial)}render(e,t,s){this.uniforms.tOld.value=this.textureOld.texture,this.uniforms.tNew.value=s.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));const r=this.textureOld;this.textureOld=this.textureComp,this.textureComp=r}setSize(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}dispose(){this.textureComp.dispose(),this.textureOld.dispose(),this.compFsMaterial.dispose(),this.copyFsMaterial.dispose(),this.compFsQuad.dispose(),this.copyFsQuad.dispose()}}export{AfterimagePass};