import{Vector3}from"three";function hilbert2D(e=new Vector3(0,0,0),t=10,r=1,n=0,o=1,l=2,i=3){const c=t/2,h=[new Vector3(e.x-c,e.y,e.z-c),new Vector3(e.x-c,e.y,e.z+c),new Vector3(e.x+c,e.y,e.z+c),new Vector3(e.x+c,e.y,e.z-c)],s=[h[n],h[o],h[l],h[i]];return 0<=--r?[...hilbert2D(s[0],c,r,n,i,l,o),...hilbert2D(s[1],c,r,n,o,l,i),...hilbert2D(s[2],c,r,n,o,l,i),...hilbert2D(s[3],c,r,l,o,n,i)]:s}function hilbert3D(e=new Vector3(0,0,0),t=10,r=1,n=0,o=1,l=2,i=3,c=4,h=5,s=6,b=7){const D=t/2,x=[new Vector3(e.x-D,e.y+D,e.z-D),new Vector3(e.x-D,e.y+D,e.z+D),new Vector3(e.x-D,e.y-D,e.z+D),new Vector3(e.x-D,e.y-D,e.z-D),new Vector3(e.x+D,e.y-D,e.z-D),new Vector3(e.x+D,e.y-D,e.z+D),new Vector3(e.x+D,e.y+D,e.z+D),new Vector3(e.x+D,e.y+D,e.z-D)],z=[x[n],x[o],x[l],x[i],x[c],x[h],x[s],x[b]];return--r>=0?[...hilbert3D(z[0],D,r,n,i,c,b,s,h,l,o),...hilbert3D(z[1],D,r,n,b,s,o,l,h,c,i),...hilbert3D(z[2],D,r,n,b,s,o,l,h,c,i),...hilbert3D(z[3],D,r,l,i,n,o,s,b,c,h),...hilbert3D(z[4],D,r,l,i,n,o,s,b,c,h),...hilbert3D(z[5],D,r,c,i,l,h,s,o,n,b),...hilbert3D(z[6],D,r,c,i,l,h,s,o,n,b),...hilbert3D(z[7],D,r,s,h,l,o,n,i,c,b)]:z}function gosper(e=1){return function(e){let t=0,r=0,n=0;const o=[0,0,0],l=e.fractal;for(let i=0,c=l.length;i<c;i++){const c=l[i];"+"===c?n+=e.angle:"-"===c?n-=e.angle:"F"===c&&(t+=e.size*Math.cos(n),r+=-e.size*Math.sin(n),o.push(t,r,0))}return o}({fractal:function(e){let t,r=e.axiom;for(let n=0,o=e.steps;0<=o?n<o:n>o;0<=o?n++:n--){t="";for(let n=0,o=r.length;n<o;n++){const o=r[n];t+=o in e.rules?e.rules[o]:o}r=t}return t}({axiom:"A",steps:4,rules:{A:"A+BF++BF-FA--FAFA-BF+",B:"-FA+BFBF++BF+FA--FA-B"}}),size:e,angle:Math.PI/3})}export{hilbert2D,hilbert3D,gosper};