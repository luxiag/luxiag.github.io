import{AnimationClip,AnimationMixer,Matrix4,Quaternion,QuaternionKeyframeTrack,SkeletonHelper,Vector3,VectorKeyframeTrack}from"three";function retarget(e,t,r={}){const o=new Vector3,n=new Quaternion,i=new Vector3,a=new Matrix4,s=new Matrix4,l=new Matrix4;r.preserveMatrix=void 0===r.preserveMatrix||r.preserveMatrix,r.preservePosition=void 0===r.preservePosition||r.preservePosition,r.preserveHipPosition=void 0!==r.preserveHipPosition&&r.preserveHipPosition,r.useTargetMatrix=void 0!==r.useTargetMatrix&&r.useTargetMatrix,r.hip=void 0!==r.hip?r.hip:"hip",r.names=r.names||{};const p=t.isObject3D?t.skeleton.bones:getBones(t),m=e.isObject3D?e.skeleton.bones:getBones(e);let u,c,d,x,f;if(e.isObject3D?e.skeleton.pose():(r.useTargetMatrix=!0,r.preserveMatrix=!1),r.preservePosition){f=[];for(let e=0;e<m.length;e++)f.push(m[e].position.clone())}if(r.preserveMatrix){e.updateMatrixWorld(),e.matrixWorld.identity();for(let t=0;t<e.children.length;++t)e.children[t].updateMatrixWorld(!0)}if(r.offsets){u=[];for(let e=0;e<m.length;++e)c=m[e],d=r.names[c.name]||c.name,r.offsets[d]&&(c.matrix.multiply(r.offsets[d]),c.matrix.decompose(c.position,c.quaternion,c.scale),c.updateMatrixWorld()),u.push(c.matrixWorld.clone())}for(let t=0;t<m.length;++t){if(c=m[t],d=r.names[c.name]||c.name,x=getBoneByName(d,p),l.copy(c.matrixWorld),x){if(x.updateMatrixWorld(),r.useTargetMatrix?s.copy(x.matrixWorld):(s.copy(e.matrixWorld).invert(),s.multiply(x.matrixWorld)),i.setFromMatrixScale(s),s.scale(i.set(1/i.x,1/i.y,1/i.z)),l.makeRotationFromQuaternion(n.setFromRotationMatrix(s)),e.isObject3D){const t=m.indexOf(c),r=u?u[t]:a.copy(e.skeleton.boneInverses[t]).invert();l.multiply(r)}l.copyPosition(s)}c.parent&&c.parent.isBone?(c.matrix.copy(c.parent.matrixWorld).invert(),c.matrix.multiply(l)):c.matrix.copy(l),r.preserveHipPosition&&d===r.hip&&c.matrix.setPosition(o.set(0,c.position.y,0)),c.matrix.decompose(c.position,c.quaternion,c.scale),c.updateMatrixWorld()}if(r.preservePosition)for(let e=0;e<m.length;++e)c=m[e],d=r.names[c.name]||c.name,d!==r.hip&&c.position.copy(f[e]);r.preserveMatrix&&e.updateMatrixWorld(!0)}function retargetClip(e,t,r,o={}){o.useFirstFramePosition=void 0!==o.useFirstFramePosition&&o.useFirstFramePosition,o.fps=void 0!==o.fps?o.fps:30,o.names=o.names||[],t.isObject3D||(t=getHelperFromSkeleton(t));const n=Math.round(r.duration*(o.fps/1e3)*1e3),i=1/o.fps,a=[],s=new AnimationMixer(t),l=getBones(e.skeleton),p=[];let m,u,c,d,x;s.clipAction(r).play(),s.update(0),t.updateMatrixWorld();for(let r=0;r<n;++r){const a=r*i;retarget(e,t,o);for(let e=0;e<l.length;++e)x=o.names[l[e].name]||l[e].name,c=getBoneByName(x,t.skeleton),c&&(u=l[e],d=p[e]=p[e]||{bone:u},o.hip===x&&(d.pos||(d.pos={times:new Float32Array(n),values:new Float32Array(3*n)}),o.useFirstFramePosition&&(0===r&&(m=u.position.clone()),u.position.sub(m)),d.pos.times[r]=a,u.position.toArray(d.pos.values,3*r)),d.quat||(d.quat={times:new Float32Array(n),values:new Float32Array(4*n)}),d.quat.times[r]=a,u.quaternion.toArray(d.quat.values,4*r));s.update(i),t.updateMatrixWorld()}for(let e=0;e<p.length;++e)d=p[e],d&&(d.pos&&a.push(new VectorKeyframeTrack(".bones["+d.bone.name+"].position",d.pos.times,d.pos.values)),a.push(new QuaternionKeyframeTrack(".bones["+d.bone.name+"].quaternion",d.quat.times,d.quat.values)));return s.uncacheAction(r),new AnimationClip(r.name,-1,a)}function clone(e){const t=new Map,r=new Map,o=e.clone();return parallelTraverse(e,o,(function(e,o){t.set(o,e),r.set(e,o)})),o.traverse((function(e){if(!e.isSkinnedMesh)return;const o=e,n=t.get(e),i=n.skeleton.bones;o.skeleton=n.skeleton.clone(),o.bindMatrix.copy(n.bindMatrix),o.skeleton.bones=i.map((function(e){return r.get(e)})),o.bind(o.skeleton,o.bindMatrix)})),o}function getBoneByName(e,t){for(let r=0,o=getBones(t);r<o.length;r++)if(e===o[r].name)return o[r]}function getBones(e){return Array.isArray(e)?e:e.bones}function getHelperFromSkeleton(e){const t=new SkeletonHelper(e.bones[0]);return t.skeleton=e,t}function parallelTraverse(e,t,r){r(e,t);for(let o=0;o<e.children.length;o++)parallelTraverse(e.children[o],t.children[o],r)}export{retarget,retargetClip,clone};