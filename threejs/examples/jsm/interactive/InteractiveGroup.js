import{Group,Matrix4,Raycaster,Vector2}from"three";const _pointer=new Vector2,_event={type:"",data:_pointer};class InteractiveGroup extends Group{constructor(e,t){super();const n=this,r=new Raycaster,o=new Matrix4,s=e.domElement;function i(o){o.stopPropagation();const s=e.domElement.getBoundingClientRect();_pointer.x=(o.clientX-s.left)/s.width*2-1,_pointer.y=-(o.clientY-s.top)/s.height*2+1,r.setFromCamera(_pointer,t);const i=r.intersectObjects(n.children,!1);if(i.length>0){const e=i[0],t=e.object,n=e.uv;_event.type=o.type,_event.data.set(n.x,1-n.y),t.dispatchEvent(_event)}}s.addEventListener("pointerdown",i),s.addEventListener("pointerup",i),s.addEventListener("pointermove",i),s.addEventListener("mousedown",i),s.addEventListener("mouseup",i),s.addEventListener("mousemove",i),s.addEventListener("click",i);const d={move:"mousemove",select:"click",selectstart:"mousedown",selectend:"mouseup"};function c(e){const t=e.target;o.identity().extractRotation(t.matrixWorld),r.ray.origin.setFromMatrixPosition(t.matrixWorld),r.ray.direction.set(0,0,-1).applyMatrix4(o);const s=r.intersectObjects(n.children,!1);if(s.length>0){const t=s[0],n=t.object,r=t.uv;_event.type=d[e.type],_event.data.set(r.x,1-r.y),n.dispatchEvent(_event)}}const a=e.xr.getController(0);a.addEventListener("move",c),a.addEventListener("select",c),a.addEventListener("selectstart",c),a.addEventListener("selectend",c);const v=e.xr.getController(1);v.addEventListener("move",c),v.addEventListener("select",c),v.addEventListener("selectstart",c),v.addEventListener("selectend",c)}}export{InteractiveGroup};