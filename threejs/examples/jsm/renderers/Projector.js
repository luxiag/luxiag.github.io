import{Box3,Color,DoubleSide,Frustum,Matrix3,Matrix4,Vector2,Vector3,Vector4}from"three";class RenderableObject{constructor(){this.id=0,this.object=null,this.z=0,this.renderOrder=0}}class RenderableFace{constructor(){this.id=0,this.v1=new RenderableVertex,this.v2=new RenderableVertex,this.v3=new RenderableVertex,this.normalModel=new Vector3,this.vertexNormalsModel=[new Vector3,new Vector3,new Vector3],this.vertexNormalsLength=0,this.color=new Color,this.material=null,this.uvs=[new Vector2,new Vector2,new Vector2],this.z=0,this.renderOrder=0}}class RenderableVertex{constructor(){this.position=new Vector3,this.positionWorld=new Vector3,this.positionScreen=new Vector4,this.visible=!0}copy(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)}}class RenderableLine{constructor(){this.id=0,this.v1=new RenderableVertex,this.v2=new RenderableVertex,this.vertexColors=[new Color,new Color],this.material=null,this.z=0,this.renderOrder=0}}class RenderableSprite{constructor(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new Vector2,this.material=null,this.renderOrder=0}}class Projector{constructor(){let e,t,r,i,o,n,s,l,c,a,p,u=0,h=0,d=0,m=0,f=0;const x={objects:[],lights:[],elements:[]},y=new Vector3,b=new Vector4,g=new Box3(new Vector3(-1,-1,-1),new Vector3(1,1,1)),w=new Box3,v=new Array(3),M=new Matrix4,S=new Matrix4,V=new Matrix4,z=new Frustum,j=[],O=[],R=[],C=[],W=[],L=new function(){const e=[],t=[],n=[];let c=null;const a=new Matrix3;function u(e){const t=e.position,r=e.positionWorld,i=e.positionScreen;r.copy(t).applyMatrix4(p),i.copy(r).applyMatrix4(S);const o=1/i.w;i.x*=o,i.y*=o,i.z*=o,e.visible=i.x>=-1&&i.x<=1&&i.y>=-1&&i.y<=1&&i.z>=-1&&i.z<=1}function d(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible||(v[0]=e.positionScreen,v[1]=t.positionScreen,v[2]=r.positionScreen,g.intersectsBox(w.setFromPoints(v)))}function f(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(r){c=r,a.getNormalMatrix(c.matrixWorld),e.length=0,t.length=0,n.length=0},projectVertex:u,checkTriangleVisibility:d,checkBackfaceCulling:f,pushVertex:function(e,t,o){r=function(){if(i===h){const e=new RenderableVertex;return O.push(e),h++,i++,e}return O[i++]}(),r.position.set(e,t,o),u(r)},pushNormal:function(t,r,i){e.push(t,r,i)},pushColor:function(e,r,i){t.push(e,r,i)},pushUv:function(e,t){n.push(e,t)},pushLine:function(e,r){const i=O[e],o=O[r];i.positionScreen.copy(i.position).applyMatrix4(V),o.positionScreen.copy(o.position).applyMatrix4(V),!0===function(e,t){let r=0,i=1;const o=e.z+e.w,n=t.z+t.w,s=-e.z+e.w,l=-t.z+t.w;return o>=0&&n>=0&&s>=0&&l>=0||!(o<0&&n<0||s<0&&l<0)&&(o<0?r=Math.max(r,o/(o-n)):n<0&&(i=Math.min(i,o/(o-n))),s<0?r=Math.max(r,s/(s-l)):l<0&&(i=Math.min(i,s/(s-l))),!(i<r||(e.lerp(t,r),t.lerp(e,1-i),0)))}(i.positionScreen,o.positionScreen)&&(i.positionScreen.multiplyScalar(1/i.positionScreen.w),o.positionScreen.multiplyScalar(1/o.positionScreen.w),s=function(){if(l===m){const e=new RenderableLine;return C.push(e),m++,l++,e}return C[l++]}(),s.id=c.id,s.v1.copy(i),s.v2.copy(o),s.z=Math.max(i.positionScreen.z,o.positionScreen.z),s.renderOrder=c.renderOrder,s.material=c.material,c.material.vertexColors&&(s.vertexColors[0].fromArray(t,3*e),s.vertexColors[1].fromArray(t,3*r)),x.elements.push(s))},pushTriangle:function(r,i,s,l){const p=O[r],u=O[i],h=O[s];if(!1!==d(p,u,h)&&(l.side===DoubleSide||!0===f(p,u,h))){o=N(),o.id=c.id,o.v1.copy(p),o.v2.copy(u),o.v3.copy(h),o.z=(p.positionScreen.z+u.positionScreen.z+h.positionScreen.z)/3,o.renderOrder=c.renderOrder,y.subVectors(h.position,u.position),b.subVectors(p.position,u.position),y.cross(b),o.normalModel.copy(y),o.normalModel.applyMatrix3(a).normalize();for(let t=0;t<3;t++){const r=o.vertexNormalsModel[t];r.fromArray(e,3*arguments[t]),r.applyMatrix3(a).normalize(),o.uvs[t].fromArray(n,2*arguments[t])}o.vertexNormalsLength=3,o.material=l,l.vertexColors&&o.color.fromArray(t,3*r),x.elements.push(o)}}}};function A(e){if(!1===e.visible)return;if(e.isLight)x.lights.push(e);else if(e.isMesh||e.isLine||e.isPoints){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===z.intersectsObject(e))return;F(e)}else if(e.isSprite){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===z.intersectsSprite(e))return;F(e)}const t=e.children;for(let e=0,r=t.length;e<r;e++)A(t[e])}function F(r){e=function(){if(t===u){const e=new RenderableObject;return j.push(e),u++,t++,e}return j[t++]}(),e.id=r.id,e.object=r,y.setFromMatrixPosition(r.matrixWorld),y.applyMatrix4(S),e.z=y.z,e.renderOrder=r.renderOrder,x.objects.push(e)}function T(e,t,r){const i=1/e.w;e.z*=i,e.z>=-1&&e.z<=1&&(c=function(){if(a===f){const e=new RenderableSprite;return W.push(e),f++,a++,e}return W[a++]}(),c.id=t.id,c.x=e.x*i,c.y=e.y*i,c.z=e.z,c.renderOrder=t.renderOrder,c.object=t,c.rotation=t.rotation,c.scale.x=t.scale.x*Math.abs(c.x-(e.x+r.projectionMatrix.elements[0])/(e.w+r.projectionMatrix.elements[12])),c.scale.y=t.scale.y*Math.abs(c.y-(e.y+r.projectionMatrix.elements[5])/(e.w+r.projectionMatrix.elements[13])),c.material=t.material,x.elements.push(c))}function N(){if(n===d){const e=new RenderableFace;return R.push(e),d++,n++,e}return R[n++]}function P(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}this.projectScene=function(e,r,o,s){n=0,l=0,a=0,x.elements.length=0,!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===r.parent&&!0===r.matrixWorldAutoUpdate&&r.updateMatrixWorld(),M.copy(r.matrixWorldInverse),S.multiplyMatrices(r.projectionMatrix,M),z.setFromProjectionMatrix(S),t=0,x.objects.length=0,x.lights.length=0,A(e),!0===o&&x.objects.sort(P);const c=x.objects;for(let e=0,t=c.length;e<t;e++){const t=c[e].object,o=t.geometry;if(L.setObject(t),p=t.matrixWorld,i=0,t.isMesh){let e=t.material;const r=Array.isArray(e),i=o.attributes,n=o.groups;if(void 0===i.position)continue;const s=i.position.array;for(let e=0,r=s.length;e<r;e+=3){let r=s[e],i=s[e+1],n=s[e+2];const l=o.morphAttributes.position;if(void 0!==l){const c=o.morphTargetsRelative,a=t.morphTargetInfluences;for(let t=0,o=l.length;t<o;t++){const o=a[t];if(0===o)continue;const p=l[t];c?(r+=p.getX(e/3)*o,i+=p.getY(e/3)*o,n+=p.getZ(e/3)*o):(r+=(p.getX(e/3)-s[e])*o,i+=(p.getY(e/3)-s[e+1])*o,n+=(p.getZ(e/3)-s[e+2])*o)}}L.pushVertex(r,i,n)}if(void 0!==i.normal){const e=i.normal.array;for(let t=0,r=e.length;t<r;t+=3)L.pushNormal(e[t],e[t+1],e[t+2])}if(void 0!==i.color){const e=i.color.array;for(let t=0,r=e.length;t<r;t+=3)L.pushColor(e[t],e[t+1],e[t+2])}if(void 0!==i.uv){const e=i.uv.array;for(let t=0,r=e.length;t<r;t+=2)L.pushUv(e[t],e[t+1])}if(null!==o.index){const i=o.index.array;if(n.length>0)for(let o=0;o<n.length;o++){const s=n[o];if(e=!0===r?t.material[s.materialIndex]:t.material,void 0!==e)for(let t=s.start,r=s.start+s.count;t<r;t+=3)L.pushTriangle(i[t],i[t+1],i[t+2],e)}else for(let t=0,r=i.length;t<r;t+=3)L.pushTriangle(i[t],i[t+1],i[t+2],e)}else if(n.length>0)for(let i=0;i<n.length;i++){const o=n[i];if(e=!0===r?t.material[o.materialIndex]:t.material,void 0!==e)for(let t=o.start,r=o.start+o.count;t<r;t+=3)L.pushTriangle(t,t+1,t+2,e)}else for(let t=0,r=s.length/3;t<r;t+=3)L.pushTriangle(t,t+1,t+2,e)}else if(t.isLine){V.multiplyMatrices(S,p);const e=o.attributes;if(void 0!==e.position){const r=e.position.array;for(let e=0,t=r.length;e<t;e+=3)L.pushVertex(r[e],r[e+1],r[e+2]);if(void 0!==e.color){const t=e.color.array;for(let e=0,r=t.length;e<r;e+=3)L.pushColor(t[e],t[e+1],t[e+2])}if(null!==o.index){const e=o.index.array;for(let t=0,r=e.length;t<r;t+=2)L.pushLine(e[t],e[t+1])}else{const e=t.isLineSegments?2:1;for(let t=0,i=r.length/3-1;t<i;t+=e)L.pushLine(t,t+1)}}}else if(t.isPoints){V.multiplyMatrices(S,p);const e=o.attributes;if(void 0!==e.position){const i=e.position.array;for(let e=0,o=i.length;e<o;e+=3)b.set(i[e],i[e+1],i[e+2],1),b.applyMatrix4(V),T(b,t,r)}}else t.isSprite&&(t.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld),b.set(p.elements[12],p.elements[13],p.elements[14],1),b.applyMatrix4(S),T(b,t,r))}return!0===s&&x.elements.sort(P),x}}}export{RenderableObject,RenderableFace,RenderableVertex,RenderableLine,RenderableSprite,Projector};