import{GPULoadOp,GPUStoreOp}from"./constants.js";import{Color,Mesh,BoxGeometry,BackSide}from"three";import{context,positionWorldDirection,MeshBasicNodeMaterial}from"three/nodes";let _clearAlpha;const _clearColor=new Color;class WebGPUBackground{constructor(e,o){this.renderer=e,this.properties=o,this.boxMesh=null,this.boxMeshNode=null,this.forceClear=!1}clear(){this.forceClear=!0}update(e,o,r,t){const a=this.renderer,l=!0===o.isScene?o.backgroundNode||this.properties.get(o).backgroundNode||o.background:null;let p=this.forceClear;if(null===l)_clearColor.copy(a._clearColor),_clearAlpha=a._clearAlpha;else if(!0===l.isColor)_clearColor.copy(l),_clearAlpha=1,p=!0;else if(!0===l.isNode){const r=this.properties.get(o),t=l;_clearColor.copy(a._clearColor),_clearAlpha=a._clearAlpha;let p=this.boxMesh;if(null===p){this.boxMeshNode=context(t,{getUVNode:()=>positionWorldDirection});const e=new MeshBasicNodeMaterial;e.colorNode=this.boxMeshNode,e.side=BackSide,e.depthTest=!1,e.depthWrite=!1,e.fog=!1,this.boxMesh=p=new Mesh(new BoxGeometry(1,1,1),e),p.onBeforeRender=function(e,o,r){this.matrixWorld.copyPosition(r.matrixWorld)}}const c=t.getCacheKey();r.backgroundMeshCacheKey!==c&&(this.boxMeshNode.node=t,p.material.needsUpdate=!0,r.backgroundMeshCacheKey=c),e.unshift(p,p.geometry,p.material,0,0,null)}else console.error("THREE.WebGPURenderer: Unsupported background configuration.",l);const c=r.colorAttachments[0],s=r.depthStencilAttachment;!0===a.autoClear||!0===p?(!0===a.autoClearColor?(_clearColor.multiplyScalar(_clearAlpha),c.clearValue={r:_clearColor.r,g:_clearColor.g,b:_clearColor.b,a:_clearAlpha},c.loadOp=GPULoadOp.Clear,c.storeOp=GPUStoreOp.Store):(c.loadOp=GPULoadOp.Load,c.storeOp=GPUStoreOp.Store),t.depth&&(!0===a.autoClearDepth?(s.depthClearValue=a._clearDepth,s.depthLoadOp=GPULoadOp.Clear,s.depthStoreOp=GPUStoreOp.Store):(s.depthLoadOp=GPULoadOp.Load,s.depthStoreOp=GPUStoreOp.Store)),t.stencil&&(!0===a.autoClearStencil?(s.stencilClearValue=a._clearStencil,s.stencilLoadOp=GPULoadOp.Clear,s.stencilStoreOp=GPUStoreOp.Store):(s.stencilLoadOp=GPULoadOp.Load,s.stencilStoreOp=GPUStoreOp.Store))):(c.loadOp=GPULoadOp.Load,c.storeOp=GPUStoreOp.Store,t.depth&&(s.depthLoadOp=GPULoadOp.Load,s.depthStoreOp=GPUStoreOp.Store),t.stencil&&(s.stencilLoadOp=GPULoadOp.Load,s.stencilStoreOp=GPUStoreOp.Store)),this.forceClear=!1}}export default WebGPUBackground;