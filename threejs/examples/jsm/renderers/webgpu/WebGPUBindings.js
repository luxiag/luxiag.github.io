class WebGPUBindings{constructor(e,t,i,s,r,u,n,a){this.device=e,this.info=t,this.properties=i,this.textures=s,this.renderPipelines=r,this.computePipelines=u,this.attributes=n,this.nodes=a,this.uniformsData=new WeakMap,this.updateMap=new WeakMap}get(e){let t=this.uniformsData.get(e);if(void 0===t){const i=this.nodes.get(e).getBindings(),s=this.renderPipelines.get(e).pipeline.getBindGroupLayout(0);t={layout:s,group:this._createBindGroup(i,s),bindings:i},this.uniformsData.set(e,t)}return t}getForCompute(e){let t=this.uniformsData.get(e);if(void 0===t){const i=this.nodes.getForCompute(e).getBindings(),s=this.computePipelines.get(e).getBindGroupLayout(0);t={layout:s,group:this._createBindGroup(i,s),bindings:i},this.uniformsData.set(e,t)}return t}remove(e){this.uniformsData.delete(e)}update(e){const t=this.textures,i=this.get(e),s=i.bindings,r=this.updateMap,u=this.info.render.frame;let n=!1;for(const e of s){const i=e.isShared,s=r.get(e)===u;if(!i||!s){if(e.isUniformBuffer){const t=e.getBuffer();if(!0===e.update()){const i=e.bufferGPU;this.device.queue.writeBuffer(i,0,t,0)}}else if(e.isStorageBuffer){const t=e.attribute;this.attributes.update(t,!1,e.usage)}else if(e.isSampler){const i=e.getTexture();t.updateSampler(i);const s=t.getSampler(i);e.samplerGPU!==s&&(e.samplerGPU=s,n=!0)}else if(e.isSampledTexture){const i=e.getTexture(),s=t.updateTexture(i),r=t.getTextureGPU(i);(void 0!==r&&e.textureGPU!==r||!0===s)&&(e.textureGPU=r,n=!0)}r.set(e,u)}}!0===n&&(i.group=this._createBindGroup(s,i.layout))}dispose(){this.uniformsData=new WeakMap,this.updateMap=new WeakMap}_createBindGroup(e,t){let i=0;const s=[];for(const t of e){if(t.isUniformBuffer){if(null===t.bufferGPU){const e=t.getByteLength();t.bufferGPU=this.device.createBuffer({label:"bindingBuffer",size:e,usage:t.usage})}s.push({binding:i,resource:{buffer:t.bufferGPU}})}else if(t.isStorageBuffer){if(null===t.bufferGPU){const e=t.attribute;this.attributes.update(e,!1,t.usage),t.bufferGPU=this.attributes.get(e).buffer}s.push({binding:i,resource:{buffer:t.bufferGPU}})}else if(t.isSampler)null===t.samplerGPU&&(t.samplerGPU=this.textures.getDefaultSampler()),s.push({binding:i,resource:t.samplerGPU});else if(t.isSampledTexture){null===t.textureGPU&&(t.isSampledCubeTexture?t.textureGPU=this.textures.getDefaultCubeTexture():t.texture.isVideoTexture?t.textureGPU=this.textures.getVideoDefaultTexture():t.texture.isDepthTexture?t.textureGPU=this.textures.getDepthDefaultTexture():t.textureGPU=this.textures.getDefaultTexture());const e=t.textureGPU instanceof GPUTexture?t.textureGPU.createView({dimension:t.dimension}):t.textureGPU;s.push({binding:i,resource:e})}i++}return this.device.createBindGroup({layout:t,entries:s})}}export default WebGPUBindings;