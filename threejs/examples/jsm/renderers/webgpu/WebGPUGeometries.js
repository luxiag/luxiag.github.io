import{Uint32BufferAttribute,Uint16BufferAttribute}from"three";function arrayNeedsUint32(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function getWireframeVersion(e){return null!==e.index?e.index.version:e.attributes.position.version}function getWireframeIndex(e){const t=[],r=e.index,i=e.attributes.position;if(null!==r){const e=r.array;for(let r=0,i=e.length;r<i;r+=3){const i=e[r+0],s=e[r+1],n=e[r+2];t.push(i,s,s,n,n,i)}}else for(let e=0,r=i.array.length/3-1;e<r;e+=3){const r=e+0,i=e+1,s=e+2;t.push(r,i,i,s,s,r)}const s=new(arrayNeedsUint32(t)?Uint32BufferAttribute:Uint16BufferAttribute)(t,1);return s.version=getWireframeVersion(e),s}class WebGPUGeometries{constructor(e,t,r){this.attributes=e,this.properties=t,this.info=r,this.wireframes=new WeakMap,this.geometryFrame=new WeakMap}has(e){const t=e.geometry;return this.properties.has(t)&&!0===this.properties.get(t).initialized}update(e){!1===this.has(e)&&this.initGeometry(e),this.updateFrameAttributes(e)}initGeometry(e){const t=e.geometry;this.properties.get(t).initialized=!0;const r=()=>{this.info.memory.geometries--;const e=t.index,i=t.attributes;null!==e&&this.attributes.remove(e);for(const e in i)this.attributes.remove(i[e]);const s=this.wireframes.get(t);void 0!==s&&this.attributes.remove(s),t.removeEventListener("dispose",r)};this.info.memory.geometries++,t.addEventListener("dispose",r)}updateFrameAttributes(e){const t=this.info.render.frame,r=e.geometry;this.geometryFrame.get(r)!==t&&(this.updateAttributes(e),this.geometryFrame.set(r,t))}updateAttributes(e){const t=e.geometry.attributes;for(const e in t)this.attributes.update(t[e]);const r=this.getIndex(e);null!==r&&this.attributes.update(r,!0)}getIndex(e){const{geometry:t,material:r}=e;let i=t.index;if(!0===r.wireframe){const e=this.wireframes;let r=e.get(t);void 0===r?(r=getWireframeIndex(t),e.set(t,r)):r.version!==getWireframeVersion(t)&&(this.attributes.remove(r),r=getWireframeIndex(t),e.set(t,r)),i=r}return i}}export default WebGPUGeometries;