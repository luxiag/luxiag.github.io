import WebGPUNodeBuilder from"./WebGPUNodeBuilder.js";import{NoToneMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping}from"three";import{NodeFrame,cubeTexture,texture,rangeFog,densityFog,reference,toneMapping,positionWorld,modelWorldMatrix,transformDirection,equirectUV,viewportBottomLeft}from"three/nodes";class WebGPUNodes{constructor(e,o){this.renderer=e,this.properties=o,this.nodeFrame=new NodeFrame}get(e){const o=this.properties.get(e);let t=o.nodeBuilder;return void 0===t&&(t=new WebGPUNodeBuilder(e.object,this.renderer),t.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.toneMappingNode=this.getToneMappingNode(),t.build(),o.nodeBuilder=t),t}getForCompute(e){const o=this.properties.get(e);let t=o.nodeBuilder;return void 0===t&&(t=new WebGPUNodeBuilder(e,this.renderer),t.build(),o.nodeBuilder=t),t}remove(e){delete this.properties.get(e).nodeBuilder}getEnvironmentNode(e){return e.environmentNode||this.properties.get(e).environmentNode||null}getFogNode(e){return e.fogNode||this.properties.get(e).fogNode||null}getToneMappingNode(){return this.renderer.toneMappingNode||this.properties.get(this.renderer).toneMappingNode||null}getCacheKey(e,o){const t=this.getEnvironmentNode(e),r=this.getFogNode(e),n=this.getToneMappingNode(),i=[];return o&&i.push("lightsNode:"+o.getCacheKey()),t&&i.push("environmentNode:"+t.getCacheKey()),r&&i.push("fogNode:"+r.getCacheKey()),n&&i.push("toneMappingNode:"+n.getCacheKey()),"{"+i.join(",")+"}"}updateToneMapping(){const e=this.renderer,o=this.properties.get(e),t=e.toneMapping;t!==NoToneMapping?o.toneMapping!==t&&(o.toneMappingNode=toneMapping(t,reference("toneMappingExposure","float",e)),o.toneMapping=t):(delete o.toneMappingNode,delete o.toneMapping)}updateBackground(e){const o=this.properties.get(e),t=e.background;if(t){if(o.background!==t){let e=null;if(!0===t.isCubeTexture)e=cubeTexture(t,transformDirection(positionWorld,modelWorldMatrix));else if(!0===t.isTexture){let o=null;o=t.mapping===EquirectangularReflectionMapping||t.mapping===EquirectangularRefractionMapping?equirectUV():viewportBottomLeft,e=texture(t,o)}else!0!==t.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",t);o.backgroundNode=e,o.background=t}}else o.backgroundNode&&(delete o.backgroundNode,delete o.background)}updateFog(e){const o=this.properties.get(e),t=e.fog;if(t){if(o.fog!==t){let e=null;t.isFogExp2?e=densityFog(reference("color","color",t),reference("density","float",t)):t.isFog?e=rangeFog(reference("color","color",t),reference("near","float",t),reference("far","float",t)):console.error("WebGPUNodes: Unsupported fog configuration.",t),o.fogNode=e,o.fog=t}}else delete o.fogNode,delete o.fog}updateEnvironment(e){const o=this.properties.get(e),t=e.environment;if(t){if(o.environment!==t){let e=null;!0===t.isCubeTexture?e=cubeTexture(t):!0===t.isTexture?e=texture(t):console.error("WebGPUNodes: Unsupported environment configuration.",t),o.environmentNode=e,o.environment=t}}else o.environmentNode&&(delete o.environmentNode,delete o.environment)}getUpdateNodes(e){const o=this.get(e),t=this.nodeFrame;return t.scene=e.scene,t.object=e.object,t.camera=e.camera,t.renderer=e.renderer,t.material=e.material,o.updateNodes}updateBefore(e){const o=this.nodeFrame;for(const t of this.getUpdateNodes(e))o.updateBeforeNode(t)}update(e){const o=this.nodeFrame;for(const t of this.getUpdateNodes(e))o.updateNode(t)}dispose(){this.nodeFrame=new NodeFrame}}export default WebGPUNodes;