import WebGPURenderPipeline from"./WebGPURenderPipeline.js";import WebGPUProgrammableStage from"./WebGPUProgrammableStage.js";class WebGPURenderPipelines{constructor(e,t,i){this.device=e,this.nodes=t,this.utils=i,this.bindings=null,this.pipelines=[],this.cache=new WeakMap,this.stages={vertex:new Map,fragment:new Map}}get(e){const t=this.device,i=this._getCache(e);let n=i.currentPipeline;if(this._needsUpdate(e)){this._releasePipeline(e);const s=this.nodes.get(e);let l=this.stages.vertex.get(s.vertexShader);void 0===l&&(l=new WebGPUProgrammableStage(t,s.vertexShader,"vertex"),this.stages.vertex.set(s.vertexShader,l));let r=this.stages.fragment.get(s.fragmentShader);void 0===r&&(r=new WebGPUProgrammableStage(t,s.fragmentShader,"fragment"),this.stages.fragment.set(s.fragmentShader,r)),n=this._acquirePipeline(l,r,e),i.currentPipeline=n,n.usedTimes++,l.usedTimes++,r.usedTimes++}return n}remove(e){this._releasePipeline(e)}dispose(){this.pipelines=[],this.cache=new WeakMap,this.shaderModules={vertex:new Map,fragment:new Map}}_acquirePipeline(e,t,i){let n;const s=this.pipelines,l=this._computeCacheKey(e,t,i);for(let e=0,t=s.length;e<t;e++){const t=s[e];if(t.cacheKey===l){n=t;break}}return void 0===n&&(n=new WebGPURenderPipeline(this.device,this.utils),n.init(l,e,t,i,this.nodes.get(i)),s.push(n)),n}_computeCacheKey(e,t,i){const{object:n,material:s}=i,l=this.utils;return[e.id,t.id,s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,l.getSampleCount(),l.getCurrentColorSpace(),l.getCurrentColorFormat(),l.getCurrentDepthStencilFormat(),l.getPrimitiveTopology(n,s)].join()}_getCache(e){let t=this.cache.get(e);return void 0===t&&(t={},this.cache.set(e,t)),t}_releasePipeline(e){const t=this._getCache(e),i=t.currentPipeline;if(delete t.currentPipeline,this.bindings.remove(e),i&&0==--i.usedTimes){const e=this.pipelines,t=e.indexOf(i);e[t]=e[e.length-1],e.pop(),this._releaseStage(i.stageVertex),this._releaseStage(i.stageFragment)}}_releaseStage(e){if(0==--e.usedTimes){const t=e.code,i=e.type;this.stages[i].delete(t)}}_needsUpdate(e){const t=this._getCache(e),i=e.material;let n=!1;void 0===t.currentPipeline&&(n=!0),t.material===i&&t.materialVersion===i.version&&t.transparent===i.transparent&&t.blending===i.blending&&t.premultipliedAlpha===i.premultipliedAlpha&&t.blendSrc===i.blendSrc&&t.blendDst===i.blendDst&&t.blendEquation===i.blendEquation&&t.blendSrcAlpha===i.blendSrcAlpha&&t.blendDstAlpha===i.blendDstAlpha&&t.blendEquationAlpha===i.blendEquationAlpha&&t.colorWrite===i.colorWrite&&t.depthWrite===i.depthWrite&&t.depthTest===i.depthTest&&t.depthFunc===i.depthFunc&&t.stencilWrite===i.stencilWrite&&t.stencilFunc===i.stencilFunc&&t.stencilFail===i.stencilFail&&t.stencilZFail===i.stencilZFail&&t.stencilZPass===i.stencilZPass&&t.stencilFuncMask===i.stencilFuncMask&&t.stencilWriteMask===i.stencilWriteMask&&t.side===i.side||(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,n=!0);const s=this.utils,l=s.getSampleCount(),r=s.getCurrentColorSpace(),a=s.getCurrentColorFormat(),c=s.getCurrentDepthStencilFormat();return t.sampleCount===l&&t.colorSpace===r&&t.colorFormat===a&&t.depthStencilFormat===c||(t.sampleCount=l,t.colorSpace=r,t.colorFormat=a,t.depthStencilFormat=c,n=!0),n}}export default WebGPURenderPipelines;