import{ClampToEdgeWrapping,DoubleSide,LinearFilter,Mesh,MeshBasicMaterial,PlaneGeometry,Texture}from"three";class VolumeSlice{constructor(e,t,s){const i=this;this.volume=e,t=t||0,Object.defineProperty(this,"index",{get:function(){return t},set:function(e){return t=e,i.geometryNeedsUpdate=!0,t}}),this.axis=s||"z",this.canvas=document.createElement("canvas"),this.canvasBuffer=document.createElement("canvas"),this.updateGeometry();const a=new Texture(this.canvas);a.minFilter=LinearFilter,a.wrapS=a.wrapT=ClampToEdgeWrapping;const h=new MeshBasicMaterial({map:a,side:DoubleSide,transparent:!0});this.mesh=new Mesh(this.geometry,h),this.mesh.matrixAutoUpdate=!1,this.geometryNeedsUpdate=!0,this.repaint()}repaint(){this.geometryNeedsUpdate&&this.updateGeometry();const e=this.iLength,t=this.jLength,s=this.sliceAccess,i=this.volume,a=this.canvasBuffer,h=this.ctxBuffer,r=h.getImageData(0,0,e,t),n=r.data,o=i.data,c=i.upperThreshold,l=i.lowerThreshold,m=i.windowLow,d=i.windowHigh;let p=0;if("label"===i.dataType)for(let i=0;i<t;i++)for(let t=0;t<e;t++){let e=o[s(t,i)];e=e>=this.colorMap.length?e%this.colorMap.length+1:e;const a=this.colorMap[e];n[4*p]=a>>24&255,n[4*p+1]=a>>16&255,n[4*p+2]=a>>8&255,n[4*p+3]=255&a,p++}else for(let i=0;i<t;i++)for(let t=0;t<e;t++){let e=o[s(t,i)],a=255;a=c>=e&&l<=e?a:0,e=Math.floor(255*(e-m)/(d-m)),e=e>255?255:e<0?0:0|e,n[4*p]=e,n[4*p+1]=e,n[4*p+2]=e,n[4*p+3]=a,p++}h.putImageData(r,0,0),this.ctx.drawImage(a,0,0,e,t,0,0,this.canvas.width,this.canvas.height),this.mesh.material.map.needsUpdate=!0}updateGeometry(){const e=this.volume.extractPerpendicularPlane(this.axis,this.index);this.sliceAccess=e.sliceAccess,this.jLength=e.jLength,this.iLength=e.iLength,this.matrix=e.matrix,this.canvas.width=e.planeWidth,this.canvas.height=e.planeHeight,this.canvasBuffer.width=this.iLength,this.canvasBuffer.height=this.jLength,this.ctx=this.canvas.getContext("2d"),this.ctxBuffer=this.canvasBuffer.getContext("2d"),this.geometry&&this.geometry.dispose(),this.geometry=new PlaneGeometry(e.planeWidth,e.planeHeight),this.mesh&&(this.mesh.geometry=this.geometry,this.mesh.matrix.identity(),this.mesh.applyMatrix4(this.matrix)),this.geometryNeedsUpdate=!1}}export{VolumeSlice};