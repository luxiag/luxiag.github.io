"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4527],{63148:(a,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s(71534);const e={href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},p=(0,t.uE)('<p>目前ThreeJS中存在18种材质</p><p>材质描述了对象objects的外观。它们的定义方式与渲染器无关， 因此，如果您决定使用不同的渲染器，不必重写材质。</p><h2 id="物体的创建" tabindex="-1"><a class="header-anchor" href="#物体的创建" aria-hidden="true">#</a> 物体的创建</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 先创建物体的图元（Geometry）</span>\n<span class="token keyword">const</span> cubeGeometry <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>\n<span class="token comment">// 创建物体的材质</span>\n<span class="token keyword">const</span> cubeMaterial <span class="token operator">=</span>   <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshPhongMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xFF0000</span><span class="token punctuation">,</span>    <span class="token comment">// 红色 (也可以使用CSS的颜色字符串)</span>\n  <span class="token literal-property property">flatShading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 创建物理</span>\n<span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>cubeGeometry<span class="token punctuation">,</span>cubeMaterial<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="材质颜色" tabindex="-1"><a class="header-anchor" href="#材质颜色" aria-hidden="true">#</a> 材质颜色</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1</span>\n<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshPhongMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xFF0000</span><span class="token punctuation">,</span>    <span class="token comment">// 红色 (也可以使用CSS的颜色字符串)</span>\n  <span class="token literal-property property">flatShading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 2 j</span>\n<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshPhongMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmaterial<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">setHSL</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 红色</span>\n<span class="token comment">// 定义材质是否使用平面着色进行渲染</span>\nmaterial<span class="token punctuation">.</span>flatShading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="颜色的设置" tabindex="-1"><a class="header-anchor" href="#颜色的设置" aria-hidden="true">#</a> 颜色的设置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0x00FFFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 同 CSS的 #RRGGBB 风格</span>\nmaterial<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cssString<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 任何 CSS 颜色字符串, 比如 &#39;purple&#39;, &#39;#F32&#39;,</span>\n                                 <span class="token comment">// &#39;rgb(255, 127, 64)&#39;,</span>\n                                 <span class="token comment">// &#39;hsl(180, 50%, 25%)&#39;</span>\nmaterial<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>someColor<span class="token punctuation">)</span>    <span class="token comment">// 其他一些 THREE.Color</span>\nmaterial<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">setHSL</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> s<span class="token punctuation">,</span> l<span class="token punctuation">)</span>   <span class="token comment">// 其中 h, s, 和 l 从 0 到 1</span>\nmaterial<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">setRGB</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span>   <span class="token comment">// 其中 r, g, 和 b 从 0 到 1</span>\n\n<span class="token keyword">const</span> m1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xFF0000</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 红色</span>\n<span class="token keyword">const</span> m2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 红色</span>\n<span class="token keyword">const</span> m3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#F00&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 红色</span>\n<span class="token keyword">const</span> m4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;rgb(255,0,0)&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 红色</span>\n<span class="token keyword">const</span> m5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;hsl(0,100%,50%)&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 红色</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="材质的区别" tabindex="-1"><a class="header-anchor" href="#材质的区别" aria-hidden="true">#</a> 材质的区别</h2>',9),l=(0,t.uE)('<table><thead><tr><th>材质类型</th><th>效果与区别</th><th>适用场景</th></tr></thead><tbody><tr><td>BasicMaterial</td><td>最简单的材质类型，只有漫反射颜色和高光反射高光亮度，默认情况下不会产生阴影</td><td>用于简单场景或测试，渲染性能较好</td></tr><tr><td>LambertMaterial</td><td>漫反射颜色和反光亮度，地面、墙壁等比较粗糙物体通常使用它</td><td>用于不需要高光反射，需要高效渲染的场景</td></tr><tr><td>PhongMaterial</td><td>拥有漫反射颜色、高光颜色和高光大小，并且可以设置光的颜色和强度等</td><td>用于需要出现高光反射物体的场景</td></tr><tr><td>ToonMaterial</td><td>类似卡通或手绘风格的材质，具有明显的边缘效果和扁平的明暗转换</td><td>用于制作卡通风格的场景</td></tr><tr><td>StandardMaterial</td><td>性能表现较好，且支持 PBR（基于物理的渲染），拥有漫反射色、金属度、粗糙度、法向贴图等属性</td><td>用于需要精细的纹理效果，同时不影响性能的场景</td></tr><tr><td>PhysicalMaterial</td><td>拥有漫反射色、金属度、粗糙度、法向贴图等属性，同时支持自发光和透射</td><td>用于需要模拟现实光线穿透或散射效果的场景</td></tr><tr><td>MeshNormalMaterial</td><td>将物体的法向量映射到 RGB 色值，用于调试和表示物体表面的法线方向</td><td>用于检查模型是否有问题，不适用于最终渲染的场景</td></tr></tbody></table><h3 id="材质独有属性" tabindex="-1"><a class="header-anchor" href="#材质独有属性" aria-hidden="true">#</a> 材质独有属性</h3><table><thead><tr><th>材质类型</th><th>特殊属性</th><th>默认值</th></tr></thead><tbody><tr><td>BasicMaterial</td><td>无</td><td>无</td></tr><tr><td>LambertMaterial</td><td>emissive: 光亮度颜色</td><td>0x000000</td></tr><tr><td>PhongMaterial</td><td>specular: 高光颜色, shininess: 高光大小</td><td>specular: 0x111111, shininess: 30</td></tr><tr><td>ToonMaterial</td><td>gradientMap: 用于计算材质颜色的纹理,或直接设置colorRamp: 颜色渐变对象</td><td>GradientMap: Three.js 默认提供的纹理</td></tr><tr><td>StandardMaterial</td><td>roughness: 粗糙度, metalness: 金属度, envMap: 环境贴图纹理</td><td>roughness: 0.5, metalness: 0.5, envMap: null</td></tr><tr><td>PhysicalMaterial</td><td>roughness: 粗糙度, metalness: 金属度, envMap: 环境贴图纹理， clearCoat: 透明度, clearCoatRoughness: 透明度的粗糙度</td><td>roughness: 0.5, metalness: 0.5, envMap: null, clearCoat: 0.0, clearCoatRoughness: 0.0</td></tr><tr><td>MeshNormalMaterial</td><td>无</td><td>无</td></tr></tbody></table><h2 id="材质常见共有属性" tabindex="-1"><a class="header-anchor" href="#材质常见共有属性" aria-hidden="true">#</a> 材质常见共有属性</h2><table><thead><tr><th>属性</th><th>默认值</th><th>属性值类型</th><th>作用</th></tr></thead><tbody><tr><td>color</td><td>0xffffff</td><td>Color</td><td>材质颜色</td></tr><tr><td>map</td><td>null</td><td>Texture</td><td>用于添加纹理贴图</td></tr><tr><td>alphaMap</td><td>null</td><td>Texture</td><td>材质透明贴图</td></tr><tr><td>transparent</td><td>false</td><td>Boolean</td><td>是否开启透明</td></tr><tr><td>opacity</td><td>1</td><td>Number</td><td>透明度（0~1）</td></tr><tr><td>visible</td><td>true</td><td>Boolean</td><td>是否可见</td></tr><tr><td>side</td><td>THREE.FrontSide</td><td>Enum(THREE.FrontSide, THREE.BackSide, THREE.DoubleSide)</td><td>材质显示的面</td></tr><tr><td>wireframe</td><td>false</td><td>Boolean</td><td>是否渲染为线框</td></tr><tr><td>wireframeLinewidth</td><td>1</td><td>Number</td><td>线框宽度</td></tr><tr><td>depthTest</td><td>true</td><td>Boolean</td><td>是否开启深度测试</td></tr><tr><td>depthWrite</td><td>true</td><td>Boolean</td><td>是否开启深度写入</td></tr><tr><td>blending</td><td>THREE.NormalBlending</td><td>Enum(THREE.NormalBlending, THREE.AdditiveBlending, THREE.SubtractiveBlending, THREE.MultiplyBlending, THREE.CustomBlending)</td><td>混合模式</td></tr><tr><td>blendSrc</td><td>THREE.SrcAlphaFactor</td><td>Enum</td><td>混合模式源算子</td></tr><tr><td>blendDst</td><td>THREE.OneMinusSrcAlphaFactor</td><td>Enum</td><td>混合模式目标算子</td></tr><tr><td>blendEquation</td><td>THREE.AddEquation</td><td>Enum</td><td>混合模式方程式</td></tr></tbody></table><h3 id="基础网格材质-meshbasicmaterial" tabindex="-1"><a class="header-anchor" href="#基础网格材质-meshbasicmaterial" aria-hidden="true">#</a> 基础网格材质(MeshBasicMaterial)</h3><p>一个以简单着色（平面或线框）方式来绘制几何体的材质。</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshBasicMaterial"></iframe><h3 id="深度网格材质-meshdepthmaterial" tabindex="-1"><a class="header-anchor" href="#深度网格材质-meshdepthmaterial" aria-hidden="true">#</a> 深度网格材质(MeshDepthMaterial)</h3><p>一种按深度绘制几何体的材质。深度基于相机远近平面。白色最近，黑色最远。</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshDepthMaterial"></iframe><h3 id="lambert网格材质-meshlambertmaterial" tabindex="-1"><a class="header-anchor" href="#lambert网格材质-meshlambertmaterial" aria-hidden="true">#</a> Lambert网格材质(MeshLambertMaterial)</h3><p>一种非光泽表面的材质，没有镜面高光。</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshLambertMaterial"></iframe><h3 id="法线网格材质-meshnormalmaterial" tabindex="-1"><a class="header-anchor" href="#法线网格材质-meshnormalmaterial" aria-hidden="true">#</a> 法线网格材质(MeshNormalMaterial)</h3><p>一种把法向量映射到RGB颜色的材质。</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshNormalMaterial"></iframe><h3 id="phong网格材质-meshphongmaterial" tabindex="-1"><a class="header-anchor" href="#phong网格材质-meshphongmaterial" aria-hidden="true">#</a> Phong网格材质(MeshPhongMaterial)</h3><p>一种用于具有镜面高光的光泽表面的材质。</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshPhongMaterial"></iframe><h3 id="标准网格材质-meshstandardmaterial" tabindex="-1"><a class="header-anchor" href="#标准网格材质-meshstandardmaterial" aria-hidden="true">#</a> 标准网格材质(MeshStandardMaterial)</h3><p>一种基于物理的标准材质</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshStandardMaterial"></iframe><h3 id="物理网格材质-meshphysicalmaterial" tabindex="-1"><a class="header-anchor" href="#物理网格材质-meshphysicalmaterial" aria-hidden="true">#</a> 物理网格材质(MeshPhysicalMaterial)</h3><p>MeshStandardMaterial的扩展，提供了更高级的基于物理的渲染属性：</p><iframe width="100%" height="420px" src="https://threejs.org/docs/scenes/material-browser.html#MeshPhysicalMaterial"></iframe>',26),r={},o=(0,s(61935).Z)(r,[["render",function(a,n){const s=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("p",null,[(0,t.Uk)("参考："),(0,t._)("a",e,[(0,t.Uk)("https://threejs.org/"),(0,t.Wm)(s)])]),p,(0,t.kq)(" \n| 材质类型           | 效果与区别                                                                               | 适用场景                                       | 特殊属性                                                                                                           | 默认值                                                                                |\n| ------------------ | ---------------------------------------------------------------------------------------- | ---------------------------------------------- | ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------- |\n| BasicMaterial      | 最简单的材质类型，只有漫反射颜色和高光反射高光亮度，默认情况下不会产生阴影               | 用于简单场景或测试，渲染性能较好               | 无                                                                                                                 | 无                                                                                    |\n| LambertMaterial    | 漫反射颜色和反光亮度，地面、墙壁等比较粗糙物体通常使用它                                 | 用于不需要高光反射，需要高效渲染的场景         | emissive: 光亮度颜色                                                                                               | 0x000000                                                                              |\n| PhongMaterial      | 拥有漫反射颜色、高光颜色和高光大小，并且可以设置光的颜色和强度等                         | 用于需要出现高光反射物体的场景                 | specular: 高光颜色, shininess: 高光大小                                                                            | specular: 0x111111, shininess: 30                                                     |\n| ToonMaterial       | 类似卡通或手绘风格的材质，具有明显的边缘效果和扁平的明暗转换                             | 用于制作卡通风格的场景                         | gradientMap: 用于计算材质颜色的纹理,或直接设置colorRamp: 颜色渐变对象                                              | GradientMap: Three.js 默认提供的纹理                                                  |\n| StandardMaterial   | 性能表现较好，且支持 PBR（基于物理的渲染），拥有漫反射色、金属度、粗糙度、法向贴图等属性 | 用于需要精细的纹理效果，同时不影响性能的场景   | roughness: 粗糙度, metalness: 金属度, envMap: 环境贴图纹理                                                         | roughness: 0.5, metalness: 0.5, envMap: null                                          |\n| PhysicalMaterial   | 拥有漫反射色、金属度、粗糙度、法向贴图等属性，同时支持自发光和透射                       | 用于需要模拟现实光线穿透或散射效果的场景       | roughness: 粗糙度, metalness: 金属度, envMap: 环境贴图纹理， clearCoat: 透明度, clearCoatRoughness: 透明度的粗糙度 | roughness: 0.5, metalness: 0.5, envMap: null, clearCoat: 0.0, clearCoatRoughness: 0.0 |\n| MeshNormalMaterial | 将物体的法向量映射到 RGB 色值，用于调试和表示物体表面的法线方向                          | 用于检查模型是否有问题，不适用于最终渲染的场景 | 无                                                                                                                 |\n\n"),l])}]])},61935:(a,n)=>{n.Z=(a,n)=>{const s=a.__vccOpts||a;for(const[a,t]of n)s[a]=t;return s}},75958:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t=JSON.parse('{"key":"v-3c015b2b","path":"/threejs/threejs-material.html","title":"ThreeJS中的材质","lang":"zh-CN","frontmatter":{"title":"ThreeJS中的材质","date":"2022-01-10T00:00:00.000Z","category":["ThreeJS"],"summary":"参考：https://threejs.org/ 目前ThreeJS中存在18种材质 材质描述了对象objects的外观。它们的定义方式与渲染器无关， 因此，如果您决定使用不同的渲染器，不必重写材质。 物体的创建 材质颜色 颜色的设置 材质的区别 \x3c!-- 材质类型 效果与区别 适用场景 特殊属性 默认值 ------------------ --------","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/threejs/threejs-material.html"}],["meta",{"property":"og:title","content":"ThreeJS中的材质"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-19T06:43:34.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T06:43:34.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"物体的创建","slug":"物体的创建","link":"#物体的创建","children":[]},{"level":2,"title":"材质颜色","slug":"材质颜色","link":"#材质颜色","children":[{"level":3,"title":"颜色的设置","slug":"颜色的设置","link":"#颜色的设置","children":[]}]},{"level":2,"title":"材质的区别","slug":"材质的区别","link":"#材质的区别","children":[{"level":3,"title":"材质独有属性","slug":"材质独有属性","link":"#材质独有属性","children":[]}]},{"level":2,"title":"材质常见共有属性","slug":"材质常见共有属性","link":"#材质常见共有属性","children":[{"level":3,"title":"基础网格材质(MeshBasicMaterial)","slug":"基础网格材质-meshbasicmaterial","link":"#基础网格材质-meshbasicmaterial","children":[]},{"level":3,"title":"深度网格材质(MeshDepthMaterial)","slug":"深度网格材质-meshdepthmaterial","link":"#深度网格材质-meshdepthmaterial","children":[]},{"level":3,"title":"Lambert网格材质(MeshLambertMaterial)","slug":"lambert网格材质-meshlambertmaterial","link":"#lambert网格材质-meshlambertmaterial","children":[]},{"level":3,"title":"法线网格材质(MeshNormalMaterial)","slug":"法线网格材质-meshnormalmaterial","link":"#法线网格材质-meshnormalmaterial","children":[]},{"level":3,"title":"Phong网格材质(MeshPhongMaterial)","slug":"phong网格材质-meshphongmaterial","link":"#phong网格材质-meshphongmaterial","children":[]},{"level":3,"title":"标准网格材质(MeshStandardMaterial)","slug":"标准网格材质-meshstandardmaterial","link":"#标准网格材质-meshstandardmaterial","children":[]},{"level":3,"title":"物理网格材质(MeshPhysicalMaterial)","slug":"物理网格材质-meshphysicalmaterial","link":"#物理网格材质-meshphysicalmaterial","children":[]}]}],"git":{"createdTime":1681808512000,"updatedTime":1681886614000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":5.82,"words":1745},"filePathRelative":"threejs/threejs-material.md","localizedDate":"2022年1月10日"}')}}]);