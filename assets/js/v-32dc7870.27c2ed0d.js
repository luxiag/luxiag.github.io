"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2776],{71781:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(71534);const o=a.p+"assets/img/894001203041232323.b031d69d.png",t=a.p+"assets/img/453001303041232323.2595a68d.png";var p=a(32049),c=a(86171),l=a(97630);const i=(0,e.uE)('<p>部分参考： 《OpenGL 编程指南》、《The Book of Shader》</p><h2 id="长方形" tabindex="-1"><a class="header-anchor" href="#长方形" aria-hidden="true">#</a> 长方形</h2><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv - 2015</span>\n<span class="token comment">// http://patriciogonzalezvivo.com</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_mouse<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// bottom-left</span>\n    <span class="token comment">// step 比0.1大 1  小 0</span>\n    <span class="token keyword">vec2</span> bl <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//放大边框</span>\n    <span class="token keyword">float</span> pct <span class="token operator">=</span> bl<span class="token punctuation">.</span>x <span class="token operator">*</span> bl<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n\n    <span class="token comment">// top-right</span>\n    <span class="token comment">// vec2 tr = step(vec2(0.1),1.0-st);</span>\n    <span class="token comment">// pct *= tr.x * tr.y;</span>\n\n    color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span>pct<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),r=(0,e.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">endif</span></span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>  \n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> uv <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy <span class="token operator">/</span> u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec4</span> color <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span><span class="token number">0.129</span><span class="token punctuation">,</span> <span class="token number">0.588</span><span class="token punctuation">,</span> <span class="token number">0.953</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0.6</span> <span class="token operator">&amp;&amp;</span> uv<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0.6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        gl_FragColor <span class="token operator">=</span> color<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// gl_FragColor = color;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u=(0,e.uE)('<h2 id="圆" tabindex="-1"><a class="header-anchor" href="#圆" aria-hidden="true">#</a> 圆</h2><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv - 2015</span>\n<span class="token comment">// http://patriciogonzalezvivo.com</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_mouse<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> pct <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// a. The DISTANCE from the pixel to the center</span>\n    pct <span class="token operator">=</span> <span class="token function">distance</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// b. The LENGTH of the vector</span>\n    <span class="token comment">//    from the pixel to the center</span>\n    <span class="token comment">// vec2 toCenter = vec2(0.5)-st;</span>\n    <span class="token comment">// pct = length(toCenter);</span>\n\n    <span class="token comment">// c. The SQUARE ROOT of the vector</span>\n    <span class="token comment">//    from the pixel to the center</span>\n    <span class="token comment">// vec2 tC = vec2(0.5)-st;</span>\n    <span class="token comment">// pct = sqrt(tC.x*tC.x+tC.y*tC.y);</span>\n\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span>pct<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span> color<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),d=(0,e.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">//作者：https://www.shadertoy.com/view/XdlSDs</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">endif</span></span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec3</span> iResolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> iTime<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec4</span> iDate<span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token keyword">vec2</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2.0</span><span class="token operator">*</span>gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">-</span>iResolution<span class="token punctuation">.</span>xy<span class="token punctuation">)</span><span class="token operator">/</span>iResolution<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n <span class="token keyword">float</span> tau <span class="token operator">=</span> <span class="token number">3.1415926535</span><span class="token operator">*</span><span class="token number">2.0</span><span class="token punctuation">;</span>\n <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token function">atan</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token punctuation">,</span>p<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0.75</span><span class="token punctuation">;</span>\n <span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>a<span class="token operator">/</span>tau<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n <span class="token comment">//get the color</span>\n <span class="token keyword">float</span> xCol <span class="token operator">=</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>iTime <span class="token operator">/</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3.0</span><span class="token punctuation">;</span>\n xCol <span class="token operator">=</span> <span class="token function">mod</span><span class="token punctuation">(</span>xCol<span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">vec3</span> horColour <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n <span class="token keyword">if</span> <span class="token punctuation">(</span>xCol <span class="token operator">&lt;</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  \n  horColour<span class="token punctuation">.</span>r <span class="token operator">+=</span> <span class="token number">1.0</span> <span class="token operator">-</span> xCol<span class="token punctuation">;</span>\n  horColour<span class="token punctuation">.</span>g <span class="token operator">+=</span> xCol<span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>xCol <span class="token operator">&lt;</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  \n  xCol <span class="token operator">-=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n  horColour<span class="token punctuation">.</span>g <span class="token operator">+=</span> <span class="token number">1.0</span> <span class="token operator">-</span> xCol<span class="token punctuation">;</span>\n  horColour<span class="token punctuation">.</span>b <span class="token operator">+=</span> xCol<span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  \n  xCol <span class="token operator">-=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>\n  horColour<span class="token punctuation">.</span>b <span class="token operator">+=</span> <span class="token number">1.0</span> <span class="token operator">-</span> xCol<span class="token punctuation">;</span>\n  horColour<span class="token punctuation">.</span>r <span class="token operator">+=</span> xCol<span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n\n <span class="token comment">// draw color beam</span>\n uv <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span>uv<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n <span class="token keyword">float</span> beamWidth <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0.7</span><span class="token operator">+</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x<span class="token operator">*</span><span class="token number">10.0</span><span class="token operator">*</span>tau<span class="token operator">*</span><span class="token number">0.15</span><span class="token operator">*</span><span class="token function">clamp</span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">5.0</span> <span class="token operator">+</span> <span class="token number">10.0</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>iTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">30.0</span> <span class="token operator">*</span>uv<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">vec3</span> horBeam <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span>beamWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>\ngl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span> horBeam<span class="token punctuation">)</span><span class="token operator">*</span> horColour<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),k=(0,e.uE)('<h2 id="距离场" tabindex="-1"><a class="header-anchor" href="#距离场" aria-hidden="true">#</a> 距离场</h2><p>通过“空间距离”来重新解释什么是图形。这种技巧被称之为“距离场”</p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv - 2015</span>\n<span class="token comment">// http://patriciogonzalezvivo.com</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_mouse<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">float</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token keyword">float</span> _radius<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> dist <span class="token operator">=</span> _st<span class="token operator">-</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">return</span> <span class="token number">1.</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span>_radius<span class="token operator">-</span><span class="token punctuation">(</span>_radius<span class="token operator">*</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                         _radius<span class="token operator">+</span><span class="token punctuation">(</span>_radius<span class="token operator">*</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                         <span class="token function">dot</span><span class="token punctuation">(</span>dist<span class="token punctuation">,</span>dist<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n\n <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">circle</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span> color<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),v=(0,e.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PI</span> <span class="token expression"><span class="token number">3.14159265359</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TWO_PI</span> <span class="token expression"><span class="token number">6.28318530718</span></span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_mouse<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token comment">// Reference to</span>\n<span class="token comment">// http://thndl.com/square-shaped-shaders.html</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n  st<span class="token punctuation">.</span>x <span class="token operator">*=</span> u_resolution<span class="token punctuation">.</span>x<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n  <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">float</span> d <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Remap the space to -1. to 1.</span>\n  st <span class="token operator">=</span> st <span class="token operator">*</span><span class="token number">2.</span><span class="token operator">-</span><span class="token number">1.</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Number of sides of your shape</span>\n  <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Angle and radius from the current pixel</span>\n  <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token function">atan</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span>x<span class="token punctuation">,</span>st<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token operator">+</span>PI<span class="token punctuation">;</span>\n  <span class="token keyword">float</span> r <span class="token operator">=</span> TWO_PI<span class="token operator">/</span><span class="token keyword">float</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Shaping function that modulate the distance</span>\n  d <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">.5</span><span class="token operator">+</span>a<span class="token operator">/</span>r<span class="token punctuation">)</span><span class="token operator">*</span>r<span class="token operator">-</span>a<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">length</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span><span class="token number">.4</span><span class="token punctuation">,</span><span class="token number">.41</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// color = vec3(d);</span>\n\n  gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),m=(0,e.uE)('<h2 id="极坐标下的图形" tabindex="-1"><a class="header-anchor" href="#极坐标下的图形" aria-hidden="true">#</a> 极坐标下的图形</h2><p><img src="'+o+'" alt="Robert Mangold - Untitled (2008)"></p><p><img src="'+t+'" alt=""></p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code>y <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">3.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//y = abs(cos(x*3.));</span>\n<span class="token comment">//y = abs(cos(x*2.5))*0.5+0.3;</span>\n<span class="token comment">//y = abs(cos(x*12.)*sin(x*3.))*.8+.1;</span>\n<span class="token comment">//y = smoothstep(-.5,1., cos(x*10.))*0.2+0.5;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv - 2015</span>\n<span class="token comment">// http://patriciogonzalezvivo.com</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_mouse<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">vec2</span> pos <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">-</span>st<span class="token punctuation">;</span>\n\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2.0</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token function">atan</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">3.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// f = abs(cos(a*3.));</span>\n    <span class="token comment">// f = abs(cos(a*2.5))*.5+.3;</span>\n    <span class="token comment">// f = abs(cos(a*12.)*sin(a*3.))*.8+.1;</span>\n    <span class="token comment">// f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;</span>\n\n    color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span> <span class="token number">1.</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span>f<span class="token operator">+</span><span class="token number">0.02</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),b={__name:"glsl-shapes.html",setup(n){const s=n=>{const s=new c.xsS,a=new c.SUY,e={u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new c.FM8(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2)}},o=new c.cPb(75,2,.1,1e3);o.position.set(0,0,20),s.add(o);const t=new c.jyz({uniforms:e,fragmentShader:n.fragmentShader,side:c.ehD}),p=new c.Kj0(new c._12(100,100),t);p.position.set(0,0,0),s.add(p);const i=new c.CP7;i.setSize(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2),i.shadowMap.enabled=!0,n.shaderDom.value.appendChild(i.domElement),i.render(s,o);const r=new l.z(o,i.domElement);r.enableDamping=!0,e.u_resolution.value,function n(){e.u_time.value+=a.getDelta(),r.update(),i.render(s,o),requestAnimationFrame(n)}()},a=(0,p.iH)(),o={shaderDom:a,fragmentShader:"\n     #ifdef GL_ES\nprecision mediump float;\n# endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    // bottom-left\n    vec2 bl = step(vec2(0.1),st);\n    float pct = bl.x * bl.y;\n\n    // top-right\n    // vec2 tr = step(vec2(0.1),1.0-st);\n    // pct *= tr.x* tr.y;\n\n    color = vec3(pct);\n\n    gl_FragColor = vec4(color,1.0);\n}\n     "},t=(0,p.iH)(),b={shaderDom:t,fragmentShader:"\n# ifdef GL_ES\nprecision mediump float;\n# endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvoid main(){\n vec2 st = gl_FragCoord.xy/u_resolution;\n    float pct = 0.0;\n\n    // a. The DISTANCE from the pixel to the center\n    pct = distance(st,vec2(0.5));\n\n    // b. The LENGTH of the vector\n    //    from the pixel to the center\n    // vec2 toCenter = vec2(0.5)-st;\n    // pct = length(toCenter);\n\n    // c. The SQUARE ROOT of the vector\n    //    from the pixel to the center\n    // vec2 tC = vec2(0.5)-st;\n    // pct = sqrt(tC.x*tC.x+tC.y*tC.y);\n\n    vec3 color = vec3(pct);\n\n gl_FragColor = vec4( color, 1.0 );\n}\n    "},f=(0,p.iH)(),y={shaderDom:f,fragmentShader:"\n    #ifdef GL_ES\n    precision mediump float;\n    # endif\n    uniform vec2 u_resolution;  \n    void main() {\n        vec2 uv = gl_FragCoord.xy / u_resolution.xy;\n        vec4 color = vec4(0.129, 0.588, 0.953, 1.0);\n\n        if (uv.x < 0.6 && uv.y < 0.6) {\n            gl_FragColor = color;\n        } else {\n            gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n            // gl_FragColor = color;\n        }\n    }\n\n    "},h=(0,p.iH)(),g={shaderDom:h,fragmentShader:"\n# ifdef GL_ES\nprecision mediump float;\n# endif\nuniform vec3 iResolution;\nuniform float iTime;\nuniform vec4 iDate;\n\nvoid main() {\n vec2 p = (2.0*gl_FragCoord.xy-iResolution.xy)/iResolution.y;\n    float tau = 3.1415926535*2.0;\n    float a = atan(p.x,p.y);\n    float r = length(p)*0.75;\n    vec2 uv = vec2(a/tau,r);\n\n //get the color\n float xCol = (uv.x - (iTime / 3.0)) * 3.0;\n xCol = mod(xCol, 3.0);\n vec3 horColour = vec3(0.25, 0.25, 0.25);\n\n if (xCol < 1.0) {\n  \n  horColour.r += 1.0 - xCol;\n  horColour.g += xCol;\n }\n else if (xCol < 2.0) {\n  \n  xCol -= 1.0;\n  horColour.g += 1.0 - xCol;\n  horColour.b += xCol;\n }\n else {\n  \n  xCol -= 2.0;\n  horColour.b += 1.0 - xCol;\n  horColour.r += xCol;\n }\n\n // draw color beam\n uv = (2.0 *uv) - 1.0;\n float beamWidth = (0.7+0.5*cos(uv.x*10.0*tau*0.15*clamp(floor(5.0 + 10.0*cos(iTime)), 0.0, 10.0)))* abs(1.0 / (30.0 *uv.y));\n vec3 horBeam = vec3(beamWidth);\ngl_FragColor = vec4((( horBeam)* horColour), 1.0);\n}\n\n    "},w=(0,p.iH)(),_={shaderDom:w,fragmentShader:"\n    #ifdef GL_ES\nprecision mediump float;\n# endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat circle(in vec2 _st, in float _radius){\nvec2 dist =_st-vec2(0.5);\n return 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\nvoid main(){\n vec2 st = gl_FragCoord.xy/u_resolution.xy;\n\n vec3 color = vec3(circle(st,0.9));\n\n gl_FragColor = vec4( color, 1.0 );\n}\n\n    "},x=(0,p.iH)(),C={shaderDom:x,fragmentShader:"\n    #ifdef GL_ES\nprecision mediump float;\n# endif\n\n# define PI 3.14159265359\n# define TWO_PI 6.28318530718\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n// Reference to\n// http://thndl.com/square-shaped-shaders.html\n\nvoid main(){\n  vec2 st = gl_FragCoord.xy/u_resolution.xy;\n  st.x *= u_resolution.x/u_resolution.y;\n  vec3 color = vec3(0.0);\n  float d = 0.0;\n\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n\n  // Number of sides of your shape\n  int N = 3;\n\n  // Angle and radius from the current pixel\n  float a = atan(st.x,st.y)+PI;\n  float r = TWO_PI/float(N);\n\n  // Shaping function that modulate the distance\n  d = cos(floor(.5+a/r)*r-a)*length(st);\n\n  color = vec3(1.0-smoothstep(.4,.41,d));\n  // color = vec3(d);\n\n  gl_FragColor = vec4(color,1.0);\n}\n\n    "},S=(0,p.iH)(),E={shaderDom:S,fragmentShader:"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    vec2 pos = vec2(0.5)-st;\n\n    float r = length(pos)*2.0;\n    float a = atan(pos.y,pos.x);\n\n    float f = cos(a*3.);\n    // f = abs(cos(a*3.));\n    // f = abs(cos(a*2.5))*.5+.3;\n    // f = abs(cos(a*12.)*sin(a*3.))*.8+.1;\n    // f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n\n    color = vec3( 1.-smoothstep(f,f+0.02,r) );\n\n    gl_FragColor = vec4(color, 1.0);\n}\n    \n    "};return(0,e.bv)((()=>{s(o),s(b),s(y),(n=>{const s=new c.xsS,a=new c.SUY,e={iResolution:{value:new c.Pa4},iTime:{value:0},iTimeDelta:{value:0},iFrameRate:{value:60},iFrame:{value:0},iChannelTime:{value:[0,0,0,0]},iChannelResolution:{value:[new c.Pa4,new c.Pa4,new c.Pa4,new c.Pa4]},iMouse:{value:new c.Ltg},iChannel0:{value:new c.xEZ},iChannel1:{value:new c.xEZ},iChannel2:{value:new c.xEZ},iChannel3:{value:new c.xEZ},iDate:{value:new c.Ltg}},o=new c.cPb(75,2,.1,1e3);o.position.set(0,0,20),s.add(o);const t=new c.jyz({uniforms:e,vertexShader:"\n        precision lowp float;\n        varying vec2 v_uv;\n        void main(){\n            v_uv = uv;\n            gl_Position = projectionMatrix *viewMatrix* modelMatrix * vec4( position, 1.0 );\n        }\n        ",fragmentShader:n.fragmentShader,side:c.ehD}),p=new c.Kj0(new c._12(100,100),t);p.position.set(0,0,0),s.add(p);const i=new c.CP7;i.setSize(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2),i.shadowMap.enabled=!0,n.shaderDom.value.appendChild(i.domElement),i.render(s,o);const r=new l.z(o,i.domElement);r.enableDamping=!0;const u=new c.dpR;t.uniforms.iResolution.value.set(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2,1),t.uniforms.iChannel0.value=u.load("/assets/textures/ca.jpeg"),n.shaderDom.value.addEventListener("mousemove",(n=>{t.uniforms.iMouse.value.set(n.clientX,n.clientY,0,0)})),function n(){r.update(),i.render(s,o),requestAnimationFrame(n);const e=new Date,p=.001*e.getTime();t.uniforms.iTime.value+=a.getDelta(),t.uniforms.iDate.value.set(e.getFullYear(),e.getMonth(),e.getDate(),p)}()})(g),s(_),s(C),s(E)})),(n,s)=>((0,e.wg)(),(0,e.iD)("div",null,[i,(0,e._)("div",{ref_key:"rectangularRef",ref:a},null,512),r,(0,e._)("div",{ref_key:"rectangularRef2",ref:f},null,512),u,(0,e._)("div",{ref_key:"circleRef",ref:t},null,512),d,(0,e._)("div",{ref_key:"circleRef2",ref:h},null,512),k,(0,e._)("div",{ref_key:"whiteCircleRef",ref:w},null,512),v,(0,e._)("div",{ref_key:"whiteTriangleRef",ref:x},null,512),m,(0,e._)("div",{ref_key:"cloverRef",ref:S},null,512)]))}}},4471:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-32dc7870","path":"/glsl/glsl-shapes.html","title":"GLSL中的形状","lang":"zh-CN","frontmatter":{"title":"GLSL中的形状","date":"2022-10-06T00:00:00.000Z","category":["GLSL"],"summary":"部分参考： 《OpenGL 编程指南》、《The Book of Shader》 长方形 圆 距离场 通过“空间距离”来重新解释什么是图形。这种技巧被称之为“距离场” 极坐标下的图形 import {ref,onMounted} from \'vue\' import * as THREE from \'three\' import { OrbitControls ","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/glsl/glsl-shapes.html"}],["meta",{"property":"og:title","content":"GLSL中的形状"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luxiag.github.io/"}],["meta",{"property":"og:updated_time","content":"2023-04-18T09:30:35.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"GLSL中的形状"}],["meta",{"property":"article:published_time","content":"2022-10-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T09:30:35.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"长方形","slug":"长方形","link":"#长方形","children":[]},{"level":2,"title":"圆","slug":"圆","link":"#圆","children":[]},{"level":2,"title":"距离场","slug":"距离场","link":"#距离场","children":[]},{"level":2,"title":"极坐标下的图形","slug":"极坐标下的图形","link":"#极坐标下的图形","children":[]}],"git":{"createdTime":1681810235000,"updatedTime":1681810235000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":1}]},"readingTime":{"minutes":6.08,"words":1825},"filePathRelative":"glsl/glsl-shapes.md","localizedDate":"2022年10月6日"}')}}]);