"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8980],{4153:(n,t,a)=>{a.r(t),a.d(t,{default:()=>x});var s=a(1534);const e=(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",{style:{"text-align":"left"}},"参考：")])],-1),p={style:{"text-align":"left"}},o={href:"https://zhuanlan.zhihu.com/p/349296191",target:"_blank",rel:"noopener noreferrer"},l={style:{"text-align":"left"}},c={href:"https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/",target:"_blank",rel:"noopener noreferrer"},r={style:{"text-align":"left"}},d={href:"https://learnopengl.com/Advanced-OpenGL/Advanced-GLSL",target:"_blank",rel:"noopener noreferrer"},i={style:{"text-align":"left"}},u={href:"https://learnopengl-cn.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},k={style:{"text-align":"left"}},y={href:"https://registry.khronos.org/OpenGL-Refpages/gl4/",target:"_blank",rel:"noopener noreferrer"},g=(0,s._)("tr",null,[(0,s._)("td",{style:{"text-align":"left"}},"《OpenGL 编程指南》")],-1),h=(0,s.uE)('<h2 id="自定义函数" tabindex="-1"><a class="header-anchor" href="#自定义函数" aria-hidden="true">#</a> 自定义函数</h2><p>自定义函数规则和 C 语言差不多，每个 shader 中必须有一个 main 函数。</p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code>\n<span class="token comment">// 随机函数</span>\n<span class="token keyword">float</span> <span class="token function">random</span> <span class="token punctuation">(</span><span class="token keyword">vec2</span> st<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">fract</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span>xy<span class="token punctuation">,</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">12.9898</span><span class="token punctuation">,</span><span class="token number">78.233</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">43758.5453123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 旋转函数</span>\n<span class="token keyword">vec2</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">float</span> rotation<span class="token punctuation">,</span> <span class="token keyword">vec2</span> mid<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>\n      <span class="token function">cos</span><span class="token punctuation">(</span>rotation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x <span class="token operator">-</span> mid<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">sin</span><span class="token punctuation">(</span>rotation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>y <span class="token operator">-</span> mid<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> mid<span class="token punctuation">.</span>x<span class="token punctuation">,</span>\n      <span class="token function">cos</span><span class="token punctuation">(</span>rotation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>y <span class="token operator">-</span> mid<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">sin</span><span class="token punctuation">(</span>rotation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>uv<span class="token punctuation">.</span>x <span class="token operator">-</span> mid<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> mid<span class="token punctuation">.</span>y\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 噪声函数</span>\n<span class="token keyword">float</span> <span class="token function">noise</span> <span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> i <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>_st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">vec2</span> f <span class="token operator">=</span> <span class="token function">fract</span><span class="token punctuation">(</span>_st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Four corners in 2D of a tile</span>\n    <span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> b <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> c <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> d <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">vec2</span> u <span class="token operator">=</span> f <span class="token operator">*</span> f <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">3.0</span> <span class="token operator">-</span> <span class="token number">2.0</span> <span class="token operator">*</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">mix</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> u<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token punctuation">(</span>c <span class="token operator">-</span> a<span class="token punctuation">)</span><span class="token operator">*</span> u<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> u<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token punctuation">(</span>d <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> u<span class="token punctuation">.</span>x <span class="token operator">*</span> u<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数" aria-hidden="true">#</a> 内置函数</h2><h3 id="角和三角函数" tabindex="-1"><a class="header-anchor" href="#角和三角函数" aria-hidden="true">#</a> 角和三角函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>genType radians (genType degrees)</td><td>角度转弧度（degrees to radians）</td></tr><tr><td>genType degrees (genType radians)</td><td>弧度转角度（radians to degrees）</td></tr><tr><td>genType sin (genType angle)</td><td>三角函数-正弦 sine</td></tr><tr><td>genType cos (genType angle)</td><td>三角函数-余弦 cosine</td></tr><tr><td>genType tan (genType angle)</td><td>三角函数-正切 tangent</td></tr><tr><td>genType asin (genType x)</td><td>反三角函数-反正弦 arc sine</td></tr><tr><td>genType atan (genType y, genType x)</td><td>反三角函数-反余弦 arc cosine</td></tr><tr><td>genType atan (genType y_over_x)</td><td>反三角函数-反正切 arc tangent</td></tr></tbody></table><h3 id="指数函数" tabindex="-1"><a class="header-anchor" href="#指数函数" aria-hidden="true">#</a> 指数函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>genType pow (genType x, genType y)</td><td>x 的 y 次方，(x^y)。如果 x&lt;0，则结果是 undefined；如果 x=0 并且 y&lt;=0，则结果是 undefined</td></tr><tr><td>genType exp (genType x)</td><td>x 的自然指数，(e^x)</td></tr><tr><td>genType log (genType x)</td><td>x 的自然对数，(\\log_ex)，即(\\ln{x})x&lt;=0 时结果是 undefined</td></tr><tr><td>genType exp2 (genType x)</td><td>2 的 x 次方，(2^x)</td></tr><tr><td>genType log2 (genType x)</td><td>以 2 为底，x 的自然对数，(log_2x)，x&lt;=0 时结果是 undefined</td></tr><tr><td>genType sqrt (genType x)</td><td>对 x 进行开根号，(\\sqrt{x})，x&lt;0 时结果是 undefined</td></tr><tr><td>genType inversesqrt (genType x)</td><td>sqrt 的倒数，(\\frac{1}{\\sqrt x})，x&lt;=0 时结果是 undefined</td></tr></tbody></table><h3 id="通用函数" tabindex="-1"><a class="header-anchor" href="#通用函数" aria-hidden="true">#</a> 通用函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>genType abs (genType x)</td><td>x 的绝对值</td></tr><tr><td>genType sign (genType x)</td><td>判断 x 是正数、负数，还是零</td></tr><tr><td>genType floor (genType x)</td><td>返回不大于 x 的最大整数</td></tr><tr><td>genType ceil (genType x)</td><td>返回不小于 x 的最小整数</td></tr><tr><td>genType fract (genType x)</td><td>返回 x 的小数部分，即 x-floor(x)</td></tr><tr><td>genType mod (genType x, genType y)</td><td>返回 x – y * floor (x/y)</td></tr><tr><td>genType min (genType x, genType y)</td><td>返回 x 和 y 的较小值</td></tr><tr><td>genType max (genType x, genType y)</td><td>返回 x 和 y 的较大值</td></tr><tr><td>genType clamp (genType x, genType minVal, genType maxVal)</td><td>min (max (x, minVal), maxVal)，如果 minVal &gt; maxVal，则返回 undefined</td></tr><tr><td>genType mix (genType x, genType y, genType a)</td><td>返回 x _ (1−a) + y _ a</td></tr></tbody></table><h3 id="几何函数" tabindex="-1"><a class="header-anchor" href="#几何函数" aria-hidden="true">#</a> 几何函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>genType length (genType x)</td><td>计算向量的长度， (\\sqrt{x1<sup>2+x2</sup>2+...})</td></tr><tr><td>genType distance (genType p0, genType p1)</td><td>p0 和 p1 之间的距离，即 length(p0-p1)</td></tr><tr><td>genType dot (genType x, genType y)</td><td>向量 x 与向量 y 的点积</td></tr><tr><td>genType cross (vec3 x, vec3 y)</td><td>向量 x 与向量 y 的叉积</td></tr><tr><td>genType normalize (genType x)</td><td>返回向量 x 对应的单位向量，即方向相同，长度为 1</td></tr><tr><td>genType faceforward(genType N, genType I, genType Nref)</td><td>如果 dot(Nref, I) &lt; 0，则返回 N，否则返回-N</td></tr><tr><td>genType reflect (genType I, genType N)</td><td>I 是入射光的方向，N 是反射平面的法线，返回值是反射光的方向。I – 2 _ dot(N, I) _ N。N 必须是单位向量。</td></tr><tr><td>genType refract(genType I, genType N, float eta)</td><td>I 是入射光的方向，N 是反射平面的法线，折射率是 eta，返回值是折射后的光线的向量。I 和 N 必须是单位向量。</td></tr></tbody></table><h3 id="矩阵函数" tabindex="-1"><a class="header-anchor" href="#矩阵函数" aria-hidden="true">#</a> 矩阵函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>mat matrixCompMult (mat x, mat y)</td><td>返回矩阵 x 乘以矩阵 y 的结果。例如 result[i][j] 等于 x[i][j] _ y[i][j]。注意：如果想进行线性代数里的乘法，请使用符号“_”。</td></tr></tbody></table><h3 id="向量关系函数" tabindex="-1"><a class="header-anchor" href="#向量关系函数" aria-hidden="true">#</a> 向量关系函数</h3><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>bvec lessThan(vec x, vec y) bvec lessThan(ivec x, ivec y)</td><td>判断 x&lt;y</td></tr><tr><td>bvec lessThanEqual(vec x, vec y) bvec lessThanEqual(ivec x, ivec y)</td><td>判断 x&lt;=y</td></tr><tr><td>bvec greaterThan(vec x, vec y) bvec greaterThan(ivec x, ivec y)</td><td>判断 x&gt;y</td></tr><tr><td>bvec greaterThanEqual(vec x, vec y) bvec greaterThanEqual(ivec x, ivec y)</td><td>判断 x&gt;=y</td></tr><tr><td>bvec equal(vec x, vec y) bvec equal(ivec x, ivec y) bvec equal(bvec x, bvec y)</td><td>判断 x==y</td></tr><tr><td>bvec notEqual(vec x, vec y) bvec notEqual(ivec x, ivec y) bvec notEqual(bvec x, bvec y)</td><td>判断 x!=y</td></tr><tr><td>bool any(bvec x)</td><td>判断 x 的元素是否有 true</td></tr><tr><td>bool all(bvec x)</td><td>判断 x 的元素是否全部为 true</td></tr><tr><td>bool not(bvec x)</td><td>返回 x 的向量逻辑补码。</td></tr></tbody></table><h3 id="texture-查找函数" tabindex="-1"><a class="header-anchor" href="#texture-查找函数" aria-hidden="true">#</a> Texture 查找函数</h3><p>纹理查询的最终目的是从 sampler 中提取指定坐标的颜色信息。</p>',18),v={},x=(0,a(1935).Z)(v,[["render",function(n,t){const a=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("table",null,[e,(0,s._)("tbody",null,[(0,s._)("tr",null,[(0,s._)("td",p,[(0,s._)("a",o,[(0,s.Uk)("https://zhuanlan.zhihu.com/p/349296191"),(0,s.Wm)(a)])])]),(0,s._)("tr",null,[(0,s._)("td",l,[(0,s._)("a",c,[(0,s.Uk)("https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/"),(0,s.Wm)(a)])])]),(0,s._)("tr",null,[(0,s._)("td",r,[(0,s._)("a",d,[(0,s.Uk)("https://learnopengl.com/Advanced-OpenGL/Advanced-GLSL"),(0,s.Wm)(a)])])]),(0,s._)("tr",null,[(0,s._)("td",i,[(0,s._)("a",u,[(0,s.Uk)("https://learnopengl-cn.readthedocs.io/"),(0,s.Wm)(a)])])]),(0,s._)("tr",null,[(0,s._)("td",k,[(0,s._)("a",y,[(0,s.Uk)("https://registry.khronos.org/OpenGL-Refpages/gl4/"),(0,s.Wm)(a)])])]),g])]),h])}]])},1935:(n,t)=>{t.Z=(n,t)=>{const a=n.__vccOpts||n;for(const[n,s]of t)a[n]=s;return a}},8659:(n,t,a)=>{a.r(t),a.d(t,{data:()=>s});const s=JSON.parse('{"key":"v-72ecdb0a","path":"/glsl/glsl-function.html","title":"GLSL中的函数","lang":"zh-CN","frontmatter":{"title":"GLSL中的函数","date":"2022-10-10T00:00:00.000Z","category":["GLSL"],"summary":"参考： :-------------------------------------------------------- https://zhuanlan.zhihu.com/p/349296191 https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/ https://learnopengl.c","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/glsl/glsl-function.html"}],["meta",{"property":"og:title","content":"GLSL中的函数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:32:38.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-10-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:32:38.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"自定义函数","slug":"自定义函数","link":"#自定义函数","children":[]},{"level":2,"title":"内置函数","slug":"内置函数","link":"#内置函数","children":[{"level":3,"title":"角和三角函数","slug":"角和三角函数","link":"#角和三角函数","children":[]},{"level":3,"title":"指数函数","slug":"指数函数","link":"#指数函数","children":[]},{"level":3,"title":"通用函数","slug":"通用函数","link":"#通用函数","children":[]},{"level":3,"title":"几何函数","slug":"几何函数","link":"#几何函数","children":[]},{"level":3,"title":"矩阵函数","slug":"矩阵函数","link":"#矩阵函数","children":[]},{"level":3,"title":"向量关系函数","slug":"向量关系函数","link":"#向量关系函数","children":[]},{"level":3,"title":"Texture 查找函数","slug":"texture-查找函数","link":"#texture-查找函数","children":[]}]}],"git":{"createdTime":1671674066000,"updatedTime":1672392758000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":4},{"name":"卢祥","email":"example@qq.com","commits":1}]},"readingTime":{"minutes":3.65,"words":1094},"filePathRelative":"glsl/glsl-function.md","localizedDate":"2022年10月10日"}')}}]);