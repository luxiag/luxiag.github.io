"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9038],{8460:(n,t,s)=>{s.r(t),s.d(t,{default:()=>l});var a=s(1534);const e=s.p+"assets/img/168012340-11-22-16-43-01.c915f792.png",p=(0,a.uE)('<h2 id="拿走最有价值的物品" tabindex="-1"><a class="header-anchor" href="#拿走最有价值的物品" aria-hidden="true">#</a> 拿走最有价值的物品</h2><p>背包可装 3kg,商品有 3 件</p><table><thead><tr><th>音响</th><th>笔记本电脑</th><th>吉他</th></tr></thead><tbody><tr><td>3000 元</td><td>2000 元</td><td>1500 元</td></tr><tr><td>4 kg</td><td>3 kg</td><td>1 kg</td></tr></tbody></table><p>将问题分成一个个网格</p><table><thead><tr><th>商品/重量</th><th>1kg</th><th>2kg</th><th>3kg</th><th>4kg</th></tr></thead><tbody><tr><td>吉他</td><td></td><td></td><td></td><td></td></tr><tr><td>音响</td><td></td><td></td><td></td><td></td></tr><tr><td>笔记本电脑</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>商品/重量</th><th>1kg</th><th>2kg</th><th>3kg</th><th>4kg</th></tr></thead><tbody><tr><td>吉他</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥1500</td></tr><tr><td>音响</td><td></td><td></td><td></td><td></td></tr><tr><td>笔记本电脑</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>商品/重量</th><th>1kg</th><th>2kg</th><th>3kg</th><th>4kg</th></tr></thead><tbody><tr><td>吉他</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥1500</td></tr><tr><td>音响</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥3000</td></tr><tr><td>笔记本电脑</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>商品/重量</th><th>1kg</th><th>2kg</th><th>3kg</th><th>4kg</th></tr></thead><tbody><tr><td>吉他</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥1500</td></tr><tr><td>音响</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥3000</td></tr><tr><td>笔记本电脑</td><td>¥1500</td><td>¥1500</td><td>¥2000</td><td>¥3500</td></tr></tbody></table><p>发现第四件商品 iPhone</p><table><thead><tr><th>音响</th><th>笔记本电脑</th><th>吉他</th><th>iphone</th></tr></thead><tbody><tr><td>3000 元</td><td>2000 元</td><td>1500 元</td><td>2000 元</td></tr><tr><td>4 kg</td><td>3 kg</td><td>1 kg</td><td>1kg</td></tr></tbody></table><table><thead><tr><th>商品/重量</th><th>1kg</th><th>2kg</th><th>3kg</th><th>4kg</th></tr></thead><tbody><tr><td>吉他</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥1500</td></tr><tr><td>音响</td><td>¥1500</td><td>¥1500</td><td>¥1500</td><td>¥3000</td></tr><tr><td>笔记本电脑</td><td>¥1500</td><td>¥1500</td><td>¥2000</td><td>¥3500</td></tr><tr><td>iphone</td><td>¥2000</td><td>¥3500</td><td>¥3500</td><td>¥4000</td></tr></tbody></table><h2 id="k-站中转内最便宜的航班" tabindex="-1"><a class="header-anchor" href="#k-站中转内最便宜的航班" aria-hidden="true">#</a> K 站中转内最便宜的航班</h2>',12),o={href:"https://leetcode.cn/problems/cheapest-flights-within-k-stops/",target:"_blank",rel:"noopener noreferrer"},c=(0,a.uE)('<p>有 n 个城市通过一些航班连接。给你一个数组 flights ，其中 flights[i] = [fromi, toi, pricei] ，表示该航班都从城市 fromi 开始，以价格 pricei 抵达 toi。</p><p>现在给定所有的城市和航班，以及出发城市 src 和目的地 dst，你的任务是找到出一条最多经过 k 站中转的路线，使得从 src 到 dst 的 价格最便宜 ，并返回该价格。 如果不存在这样的路线，则输出 -1。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>输入:\nn 三个城市 0-&gt;1 100 元,1 -&gt; 2 100 元 ， 0 -&gt; 2 500 元\nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc 出发城市 dst 目的地 k 经过一站\nsrc = 0, dst = 2, k = 1\n输出: 200\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="'+e+'" alt=""></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//来源  https://leetcode.cn/problems/cheapest-flights-within-k-stops/solutions/954402/k-zhan-zhong-zhuan-nei-zui-bian-yi-de-ha-abzi/</span>\n\n<span class="token keyword">var</span> <span class="token function-variable function">findCheapestPrice</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> flights<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token constant">INF</span> <span class="token operator">=</span> <span class="token number">10000</span> <span class="token operator">*</span> <span class="token number">101</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n  <span class="token comment">/*     1   2   3   航班\n     1  花费\n     2\n     3\n     城市\n  */</span>\n  <span class="token comment">// 最多达成k+1次航班 =》 生成 k+2的数组</span>\n  <span class="token comment">// n 个城市</span>\n  <span class="token comment">// f =&gt; 一个二维数组 城市和航班次数</span>\n  <span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token constant">INF</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">//0城市 话费为0 </span>\n  f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>src<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> t <span class="token operator">&lt;=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> flight <span class="token keyword">of</span> flights<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> j <span class="token operator">=</span> flight<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        i <span class="token operator">=</span> flight<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        cost <span class="token operator">=</span> flight<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token comment">// t 航班 i 城市 =  话费</span>\n      f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> cost<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token constant">INF</span><span class="token punctuation">;</span>\n  <span class="token comment">// 遍历航班次数 筛选最小话费</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> t <span class="token operator">&lt;=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ans <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>dst<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> ans <span class="token operator">==</span> <span class="token constant">INF</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> ans<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),d={},l=(0,s(1935).Z)(d,[["render",function(n,t){const s=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[p,(0,a._)("p",null,[(0,a.Uk)("来源："),(0,a._)("a",o,[(0,a.Uk)("https://leetcode.cn/problems/cheapest-flights-within-k-stops/"),(0,a.Wm)(s)])]),c])}]])},1935:(n,t)=>{t.Z=(n,t)=>{const s=n.__vccOpts||n;for(const[n,a]of t)s[n]=a;return s}},3008:(n,t,s)=>{s.r(t),s.d(t,{data:()=>a});const a=JSON.parse('{"key":"v-e2828c72","path":"/algorithm/dynamic-programming.html","title":"动态规划","lang":"zh-CN","frontmatter":{"title":"动态规划","date":"2022-10-04T00:00:00.000Z","category":["算法"],"tag":["算法图解"],"summary":"拿走最有价值的物品 背包可装 3kg,商品有 3 件 音响 笔记本电脑 吉他 ------- ---------- ------- 3000 元 2000 元 1500 元 4 kg 3 kg 1 kg 将问题分成一个个网格 商品/重量 1kg 2kg 3kg 4kg ---------- --- --- --- --- 吉他 音响 笔记本电脑 商品/重量 ","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/algorithm/dynamic-programming.html"}],["meta",{"property":"og:title","content":"动态规划"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luxiag.github.io/"}],["meta",{"property":"og:updated_time","content":"2022-12-05T10:02:18.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"动态规划"}],["meta",{"property":"article:tag","content":"算法图解"}],["meta",{"property":"article:published_time","content":"2022-10-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-05T10:02:18.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"拿走最有价值的物品","slug":"拿走最有价值的物品","link":"#拿走最有价值的物品","children":[]},{"level":2,"title":"K 站中转内最便宜的航班","slug":"k-站中转内最便宜的航班","link":"#k-站中转内最便宜的航班","children":[]}],"git":{"createdTime":1665068249000,"updatedTime":1670234538000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":2},{"name":"luxiang","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":2.06,"words":617},"filePathRelative":"algorithm/dynamic-programming.md","localizedDate":"2022年10月4日"}')}}]);