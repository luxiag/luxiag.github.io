"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5413],{9712:(s,n,a)=>{a.r(n),a.d(n,{default:()=>L});var t=a(1534);const e=a.p+"assets/img/036000705121542222.5c8766ae.png",l=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{style:{"text-align":"left"}},"参考：")])],-1),p={style:{"text-align":"left"}},o={href:"https://zhuanlan.zhihu.com/p/349296191",target:"_blank",rel:"noopener noreferrer"},c={style:{"text-align":"left"}},r={href:"https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/",target:"_blank",rel:"noopener noreferrer"},i={style:{"text-align":"left"}},d={href:"https://learnopengl.com/Advanced-OpenGL/Advanced-GLSL",target:"_blank",rel:"noopener noreferrer"},u={style:{"text-align":"left"}},m={href:"https://learnopengl-cn.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},k={style:{"text-align":"left"}},v={href:"https://registry.khronos.org/OpenGL-Refpages/gl4/",target:"_blank",rel:"noopener noreferrer"},h=(0,t._)("tr",null,[(0,t._)("td",{style:{"text-align":"left"}},"《OpenGL 编程指南》")],-1),g=(0,t._)("h2",{id:"变量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),(0,t.Uk)(" 变量")],-1),_=(0,t.uE)('<table><thead><tr><th>变量类别</th><th>变量类型</th><th>描述</th></tr></thead><tbody><tr><td>空</td><td>void</td><td>用于无返回值的函数或空的参数列表</td></tr><tr><td>标量</td><td>float, int, bool</td><td>浮点型，整型，布尔型的标量数据类型</td></tr><tr><td>浮点型向量</td><td>float, vec2, vec3, vec4</td><td>包含 1，2，3，4 个元素的浮点型向量</td></tr><tr><td>整数型向量</td><td>int, ivec2, ivec3, ivec4</td><td>包含 1，2，3，4 个元素的整型向量</td></tr><tr><td>布尔型向量</td><td>bool, bvec2, bvec3, bvec4</td><td>包含 1，2，3，4 个元素的布尔型向量</td></tr><tr><td>矩阵</td><td>mat2, mat3, mat4</td><td>尺寸为 2x2，3x3，4x4 的浮点型矩阵</td></tr><tr><td>纹理句柄</td><td>sampler2D, samplerCube</td><td>表示 2D，立方体纹理的句柄</td></tr></tbody></table><h3 id="标量" tabindex="-1"><a class="header-anchor" href="#标量" aria-hidden="true">#</a> 标量</h3><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">float</span> myFloat <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n<span class="token keyword">bool</span> myBool <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>\n\nmyFloat <span class="token operator">=</span> <span class="token keyword">float</span><span class="token punctuation">(</span>myBool<span class="token punctuation">)</span><span class="token punctuation">;</span> \t<span class="token comment">// bool -&gt; float</span>\nmyBool <span class="token operator">=</span> <span class="token keyword">bool</span><span class="token punctuation">(</span>myFloat<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// float -&gt; bool</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="向量" tabindex="-1"><a class="header-anchor" href="#向量" aria-hidden="true">#</a> 向量</h3><p><img src="'+e+'" alt=""></p>',5),y=(0,t._)("p",{class:"katex-block"},[(0,t._)("span",{class:"katex-display"},[(0,t._)("span",{class:"katex"},[(0,t._)("span",{class:"katex-mathml"},[(0,t._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[(0,t._)("semantics",null,[(0,t._)("mrow",null,[(0,t._)("mi",null,"y"),(0,t._)("mo",null,"="),(0,t._)("mrow",null,[(0,t._)("mo",{fence:"true"},"("),(0,t._)("mtable",{rowspacing:"0.16em",columnalign:"center",columnspacing:"1em"},[(0,t._)("mtr",null,[(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mi",null,"a")])])]),(0,t._)("mtr",null,[(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mi",null,"b")])])]),(0,t._)("mtr",null,[(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mi",null,"c")])])])]),(0,t._)("mo",{fence:"true"},")")]),(0,t._)("mspace",{width:"1em"})]),(0,t._)("annotation",{encoding:"application/x-tex"}," y = \\begin{pmatrix} a\\\\b\\\\c \\end{pmatrix} \\quad ")])])]),(0,t._)("span",{class:"katex-html","aria-hidden":"true"},[(0,t._)("span",{class:"base"},[(0,t._)("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),(0,t._)("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),(0,t._)("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),(0,t._)("span",{class:"mrel"},"="),(0,t._)("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),(0,t._)("span",{class:"base"},[(0,t._)("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),(0,t._)("span",{class:"minner"},[(0,t._)("span",{class:"mopen"},[(0,t._)("span",{class:"delimsizing mult"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"2.05em"}},[(0,t._)("span",{style:{top:"-4.05em"}},[(0,t._)("span",{class:"pstrut",style:{height:"5.6em"}}),(0,t._)("span",{style:{width:"0.875em",height:"3.600em"}},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.875em",height:"3.600em",viewBox:"0 0 875 3600"},[(0,t._)("path",{d:"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"})])])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.55em"}},[(0,t._)("span")])])])])]),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mtable"},[(0,t._)("span",{class:"col-align-c"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"2.05em"}},[(0,t._)("span",{style:{top:"-4.21em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord mathnormal"},"a")])]),(0,t._)("span",{style:{top:"-3.01em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord mathnormal"},"b")])]),(0,t._)("span",{style:{top:"-1.81em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord mathnormal"},"c")])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.55em"}},[(0,t._)("span")])])])])])]),(0,t._)("span",{class:"mclose"},[(0,t._)("span",{class:"delimsizing mult"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"2.05em"}},[(0,t._)("span",{style:{top:"-4.05em"}},[(0,t._)("span",{class:"pstrut",style:{height:"5.6em"}}),(0,t._)("span",{style:{width:"0.875em",height:"3.600em"}},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.875em",height:"3.600em",viewBox:"0 0 875 3600"},[(0,t._)("path",{d:"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"})])])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.55em"}},[(0,t._)("span")])])])])])]),(0,t._)("span",{class:"mspace",style:{"margin-right":"1em"}})])])])])],-1),b=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">vec4</span> myVec4 <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \t\t\t<span class="token comment">// myVec4 = {1.0, 1.0, 1.0, 1.0}</span>\n<span class="token keyword">vec3</span> myVec3 <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// myVec3 = {1.0, 0.0, 0.5}</span>\n\n<span class="token keyword">vec3</span> temp <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span>myVec3<span class="token punctuation">)</span><span class="token punctuation">;</span> \t\t\t<span class="token comment">// temp = myVec3</span>\n<span class="token keyword">vec2</span> myVec2 <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>myVec3<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// myVec2 = {myVec3.x, myVec3.y}</span>\n\nmyVec4 <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>myVec2<span class="token punctuation">,</span> temp<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// myVec4 = {myVec2.x, myVec2.y , temp, 0.0 }</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>分量访问符</th><th>符号描述</th></tr></thead><tbody><tr><td>(x,y,z,w)</td><td>与位置相关的分量</td></tr><tr><td>(r,g,b,a)</td><td>与颜色相关的分量</td></tr><tr><td>(s,t,p,q)</td><td>与纹理坐标相关的分量</td></tr></tbody></table><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">vec3</span> myVec3 <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// myVec3 = {0.0, 1.0, 2.0}</span>\n<span class="token keyword">vec3</span> temp<span class="token punctuation">;</span>\ntemp <span class="token operator">=</span> myVec3<span class="token punctuation">.</span>xyz<span class="token punctuation">;</span> <span class="token comment">// temp = {0.0, 1.0, 2.0}</span>\ntemp <span class="token operator">=</span> myVec3<span class="token punctuation">.</span>xxx<span class="token punctuation">;</span> <span class="token comment">// temp = {0.0, 0.0, 0.0}</span>\ntemp <span class="token operator">=</span> myVec3<span class="token punctuation">.</span>zyx<span class="token punctuation">;</span> <span class="token comment">// temp = {2.0, 1.0, 0.0}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="矩阵" tabindex="-1"><a class="header-anchor" href="#矩阵" aria-hidden="true">#</a> 矩阵</h3><p>mat2, mat3, mat4 尺寸为 2x2，3x3，4x4 的浮点型矩阵</p>',5),f=(0,t._)("p",{class:"katex-block"},[(0,t._)("span",{class:"katex-display"},[(0,t._)("span",{class:"katex"},[(0,t._)("span",{class:"katex-mathml"},[(0,t._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[(0,t._)("semantics",null,[(0,t._)("mrow",null,[(0,t._)("mrow",null,[(0,t._)("mo",{fence:"true"},"["),(0,t._)("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[(0,t._)("mtr",null,[(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"1")])]),(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"2")])]),(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"3")])])]),(0,t._)("mtr",null,[(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"4")])]),(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"5")])]),(0,t._)("mtd",null,[(0,t._)("mstyle",{scriptlevel:"0",displaystyle:"false"},[(0,t._)("mn",null,"6")])])])]),(0,t._)("mo",{fence:"true"},"]")]),(0,t._)("mspace",{width:"1em"})]),(0,t._)("annotation",{encoding:"application/x-tex"}," \\begin{bmatrix} 1&2&3\\\\4&5&6 \\end{bmatrix} \\quad ")])])]),(0,t._)("span",{class:"katex-html","aria-hidden":"true"},[(0,t._)("span",{class:"base"},[(0,t._)("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),(0,t._)("span",{class:"minner"},[(0,t._)("span",{class:"mopen delimcenter",style:{top:"0em"}},[(0,t._)("span",{class:"delimsizing size3"},"[")]),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mtable"},[(0,t._)("span",{class:"col-align-c"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.45em"}},[(0,t._)("span",{style:{top:"-3.61em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"1")])]),(0,t._)("span",{style:{top:"-2.41em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"4")])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"0.95em"}},[(0,t._)("span")])])])]),(0,t._)("span",{class:"arraycolsep",style:{width:"0.5em"}}),(0,t._)("span",{class:"arraycolsep",style:{width:"0.5em"}}),(0,t._)("span",{class:"col-align-c"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.45em"}},[(0,t._)("span",{style:{top:"-3.61em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"2")])]),(0,t._)("span",{style:{top:"-2.41em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"5")])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"0.95em"}},[(0,t._)("span")])])])]),(0,t._)("span",{class:"arraycolsep",style:{width:"0.5em"}}),(0,t._)("span",{class:"arraycolsep",style:{width:"0.5em"}}),(0,t._)("span",{class:"col-align-c"},[(0,t._)("span",{class:"vlist-t vlist-t2"},[(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"1.45em"}},[(0,t._)("span",{style:{top:"-3.61em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"3")])]),(0,t._)("span",{style:{top:"-2.41em"}},[(0,t._)("span",{class:"pstrut",style:{height:"3em"}}),(0,t._)("span",{class:"mord"},[(0,t._)("span",{class:"mord"},"6")])])]),(0,t._)("span",{class:"vlist-s"},"​")]),(0,t._)("span",{class:"vlist-r"},[(0,t._)("span",{class:"vlist",style:{height:"0.95em"}},[(0,t._)("span")])])])])])]),(0,t._)("span",{class:"mclose delimcenter",style:{top:"0em"}},[(0,t._)("span",{class:"delimsizing size3"},"]")])]),(0,t._)("span",{class:"mspace",style:{"margin-right":"1em"}})])])])])],-1),w=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">mat3</span> myMat3 <span class="token operator">=</span> <span class="token keyword">mat3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>  <span class="token comment">// 第一列</span>\n                   <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>  <span class="token comment">// 第二列</span>\n                   <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 第三列</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">float</span> floatArray<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">vec4</span> vecArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>除了 uniform 变量之外，数组的索引只允许使用常数整型表达式。</li><li>在 GLSL 中不能在创建的同时给数组初始化，即数组中的元素需要在定义数组之后逐个初始化，且数组不能使用 const 限定符。</li></ul><h3 id="结构体" tabindex="-1"><a class="header-anchor" href="#结构体" aria-hidden="true">#</a> 结构体</h3><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">struct</span> <span class="token class-name">rotateMatrix</span> <span class="token punctuation">{</span>\n    <span class="token keyword">float</span> x<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> y<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> z<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> coffee<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内置变量" tabindex="-1"><a class="header-anchor" href="#内置变量" aria-hidden="true">#</a> 内置变量</h2><p><strong>顶点着色器</strong></p><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>gl_Color</td><td>vec4</td><td>输入属性-表示顶点的主颜色</td></tr><tr><td>gl_SecondaryColor</td><td>vec4</td><td>输入属性-表示顶点的辅助颜色</td></tr><tr><td>gl_Normal</td><td>vec3</td><td>输入属性-表示顶点的法线值</td></tr><tr><td>gl_Vertex</td><td>vec4</td><td>输入属性-表示物体空间的顶点位置</td></tr><tr><td>gl_MultiTexCoordn</td><td>vec4</td><td>输入属性-表示顶点的第 n 个纹理的坐标</td></tr><tr><td>gl_FogCoord</td><td>float</td><td>输入属性-表示顶点的雾坐标</td></tr><tr><td>gl_Position</td><td>vec4</td><td>输出属性-变换后的顶点的位置，用于后面的固定的裁剪等操作。<strong>所有的顶点着色器都必须写这个值。</strong></td></tr><tr><td>gl_ClipVertex</td><td>vec4</td><td>输出坐标，用于用户裁剪平面的裁剪</td></tr><tr><td>gl_PointSize</td><td>float</td><td>点的大小</td></tr><tr><td>gl_FrontColor</td><td>vec4</td><td>正面的主颜色的 varying 输出</td></tr><tr><td>gl_BackColor</td><td>vec4</td><td>背面主颜色的 varying 输出</td></tr><tr><td>gl_FrontSecondaryColor</td><td>vec4</td><td>正面的辅助颜色的 varying 输出</td></tr><tr><td>gl_BackSecondaryColor</td><td>vec4</td><td>背面的辅助颜色的 varying 输出</td></tr><tr><td>gl_TexCoord[]</td><td>vec4</td><td>纹理坐标的数组 varying 输出</td></tr><tr><td>gl_FogFragCoord</td><td>float</td><td>雾坐标的 varying 输出</td></tr></tbody></table><p><strong>片段着色器</strong></p><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>gl_Color</td><td>vec4</td><td>包含主颜色的插值只读输入</td></tr><tr><td>gl_SecondaryColor</td><td>vec4</td><td>包含辅助颜色的插值只读输入</td></tr><tr><td>gl_TexCoord[]</td><td>vec4</td><td>包含纹理坐标数组的插值只读输入</td></tr><tr><td>gl_FogFragCoord</td><td>float</td><td>包含雾坐标的插值只读输入</td></tr><tr><td>gl_FragCoord</td><td>vec4</td><td>只读输入，窗口的 x,y,z 和 1/w</td></tr><tr><td>gl_FrontFacing</td><td>bool</td><td>只读输入，如果是窗口正面图元的一部分，则这个值为 true</td></tr><tr><td>gl_PointCoord</td><td>vec2</td><td>点精灵的二维空间坐标范围在(0.0, 0.0)到(1.0, 1.0)之间，仅用于点图元和点精灵开启的情况下。</td></tr><tr><td>gl_FragData[]</td><td>vec4</td><td>使用 glDrawBuffers 输出的数据数组。不能与 gl_FragColor 结合使用。</td></tr><tr><td>gl_FragColor</td><td>vec4</td><td>输出的颜色用于随后的像素操作</td></tr><tr><td>gl_FragDepth</td><td>float</td><td>输出的深度用于随后的像素操作，如果这个值没有被写，则使用固定功能管线的深度值代替</td></tr></tbody></table><h2 id="修饰符" tabindex="-1"><a class="header-anchor" href="#修饰符" aria-hidden="true">#</a> 修饰符</h2><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td>const</td><td>常量值必须在声明时初始化。它是只读的不可修改的。</td></tr><tr><td>attribute</td><td>表示只读的顶点数据，只用在顶点着色器中。数据来自当前的顶点状态或者顶点数组。它必须是全局范围声明的，不能在函数内部。一个 attribute 可以是浮点数类型的标量，向量，或者矩阵。不可以是数组或者结构体</td></tr><tr><td>uniform</td><td>一致变量。在着色器执行期间一致变量的值是不变的。与 const 常量不同的是，这个值在编译时期是未知的是由着色器外部初始化的。一致变量在顶点着色器和片段着色器之间是共享的。它也只能在全局范围进行声明。</td></tr><tr><td>varying</td><td>顶点着色器的输出。例如颜色或者纹理坐标，（插值后的数据）作为片段着色器的只读输入数据。必须是全局范围声明的全局变量。可以是浮点数类型的标量，向量，矩阵。不能是数组或者结构体。</td></tr><tr><td>centorid varying</td><td>在没有多重采样的情况下，与 varying 是一样的意思。在多重采样时，centorid varying 在光栅化的图形内部进行求值而不是在片段中心的固定位置求值。</td></tr><tr><td>invariant (不变量)</td><td>用于表示顶点着色器的输出和任何匹配片段着色器的输入，在不同的着色器中计算产生的值必须是一致的。所有的数据流和控制流，写入一个 invariant 变量的是一致的。编译器为了保证结果是完全一致的，需要放弃那些可能会导致不一致值的潜在的优化。除非必要，不要使用这个修饰符。在多通道渲染中避免 z-fighting 可能会使用到。</td></tr><tr><td>in</td><td>用在函数的参数中，表示这个参数是输入的，在函数中改变这个值，并不会影响对调用的函数产生副作用。（相当于 C 语言的传值），这个是函数参数默认的修饰符</td></tr><tr><td>out</td><td>用在函数的参数中，表示该参数是输出参数，值是会改变的。</td></tr><tr><td>inout</td><td>用在函数的参数，表示这个参数即是输入参数也是输出参数。</td></tr></tbody></table><h2 id="精度限定符" tabindex="-1"><a class="header-anchor" href="#精度限定符" aria-hidden="true">#</a> 精度限定符</h2><table><thead><tr><th>限定符</th><th>描述</th></tr></thead><tbody><tr><td>highp</td><td>满足顶点着色语言的最低要求。对片段着色语言是可选项</td></tr><tr><td>mediump</td><td>满足片段着色语言的最低要求，其对于范围和精度的要求必须不低于 lowp 并且不高于 highp</td></tr><tr><td>lowp</td><td>范围和精度可低于 mediump，但仍可以表示所有颜色通道的所有颜色值</td></tr></tbody></table><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">highp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniforms" tabindex="-1"><a class="header-anchor" href="#uniforms" aria-hidden="true">#</a> uniforms</h2><p>尽管每个线程和其他线程之间不能有数据交换，但我们能从 CPU 给每个线程输入数据。因为显卡的架构，所有线程的输入值必须统一（uniform），而且必须设为只读。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> uniforms <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">u_time</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1.0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">u_resolution</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;v2&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>ShaderMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">uniforms</span><span class="token operator">:</span> uniforms<span class="token punctuation">,</span>\n  <span class="token literal-property property">vertexShader</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;vertexShader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent<span class="token punctuation">,</span>\n  <span class="token literal-property property">fragmentShader</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;fragmentShader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  uniforms<span class="token punctuation">.</span>u_resolution<span class="token punctuation">.</span>value<span class="token punctuation">.</span>x <span class="token operator">=</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>width<span class="token punctuation">;</span>\n  uniforms<span class="token punctuation">.</span>u_resolution<span class="token punctuation">.</span>value<span class="token punctuation">.</span>y <span class="token operator">=</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">let</span> clock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  uniforms<span class="token punctuation">.</span>u_time<span class="token punctuation">.</span>value <span class="token operator">+=</span> clock<span class="token punctuation">.</span><span class="token function">getDelta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',19),x={},L=(0,a(1935).Z)(x,[["render",function(s,n){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("table",null,[l,(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",p,[(0,t._)("a",o,[(0,t.Uk)("https://zhuanlan.zhihu.com/p/349296191"),(0,t.Wm)(a)])])]),(0,t._)("tr",null,[(0,t._)("td",c,[(0,t._)("a",r,[(0,t.Uk)("https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/"),(0,t.Wm)(a)])])]),(0,t._)("tr",null,[(0,t._)("td",i,[(0,t._)("a",d,[(0,t.Uk)("https://learnopengl.com/Advanced-OpenGL/Advanced-GLSL"),(0,t.Wm)(a)])])]),(0,t._)("tr",null,[(0,t._)("td",u,[(0,t._)("a",m,[(0,t.Uk)("https://learnopengl-cn.readthedocs.io/"),(0,t.Wm)(a)])])]),(0,t._)("tr",null,[(0,t._)("td",k,[(0,t._)("a",v,[(0,t.Uk)("https://registry.khronos.org/OpenGL-Refpages/gl4/"),(0,t.Wm)(a)])])]),h])]),g,(0,t.kq)(" | 类型  | 含义                              |\n| ----- | --------------------------------- |\n| vecn  | 包含 n 个 float 分量的默认向量    |\n| bvecn | 包含 n 个 bool 分量的向量         |\n| ivecn | 包含 n 个 int 分量的向量          |\n| uvecn | 包含 n 个 unsigned int 分量的向量 |\n| dvecn | 包含 n 个 double 分量的向量       | "),_,y,b,f,w])}]])},1935:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,t]of n)a[s]=t;return a}},6203:(s,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t=JSON.parse('{"key":"v-6ced71b6","path":"/glsl/glsl-vars.html","title":"GLSL的变量","lang":"zh-CN","frontmatter":{"title":"GLSL的变量","category":["GLSL"],"date":"2022-12-06T00:00:00.000Z","summary":"参考： :-------------------------------------------------------- https://zhuanlan.zhihu.com/p/349296191 https://colin1994.github.io/2017/11/11/OpenGLES-Lesson04/ https://learnopengl.c","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/glsl/glsl-vars.html"}],["meta",{"property":"og:title","content":"GLSL的变量"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luxiag.github.io/"}],["meta",{"property":"og:updated_time","content":"2023-01-19T03:28:45.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"GLSL的变量"}],["meta",{"property":"article:published_time","content":"2022-12-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-19T03:28:45.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"标量","slug":"标量","link":"#标量","children":[]},{"level":3,"title":"向量","slug":"向量","link":"#向量","children":[]},{"level":3,"title":"矩阵","slug":"矩阵","link":"#矩阵","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"结构体","slug":"结构体","link":"#结构体","children":[]}]},{"level":2,"title":"内置变量","slug":"内置变量","link":"#内置变量","children":[]},{"level":2,"title":"修饰符","slug":"修饰符","link":"#修饰符","children":[]},{"level":2,"title":"精度限定符","slug":"精度限定符","link":"#精度限定符","children":[]},{"level":2,"title":"uniforms","slug":"uniforms","link":"#uniforms","children":[]}],"git":{"createdTime":1671175256000,"updatedTime":1674098925000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":2},{"name":"luxiag","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":6.14,"words":1841},"filePathRelative":"glsl/glsl-vars.md","localizedDate":"2022年12月6日"}')}}]);