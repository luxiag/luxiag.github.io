"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9762],{8117:(n,s,a)=>{a.r(s),a.d(s,{default:()=>_});var t=a(1534),p=a(6171),e=a(2049),o=a(7630);const c=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>vUv<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),l=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>vUv<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),i=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> vUv<span class="token punctuation">.</span>x<span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> vUv<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),r=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">-</span>vUv<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),k=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">//利用uv实现短范围内渐变</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span><span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),d=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token comment">//7利用通过取模达到反复效果</span>\n   <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n   gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),v=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token comment">//8利用step(edge, x)如果x &lt; edge，返回0.0，否则返回1.0</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span>  <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span>strength<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),m=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token comment">//9利用step(edge, x)如果x &lt; edge，返回0.0，否则返回1.0</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span>  <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span>strength<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),g=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">//10利用step(edge, x)如果x &lt; edge，返回0.0，否则返回1.0</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span>  <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span>strength<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),b=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 11条纹相加</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">+=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n     gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),y=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 12条纹相乘</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">*=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n     gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),f=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 13条纹相减</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">-=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n     gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),h=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token comment">// 14方块图形</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    strength <span class="token operator">*=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n     gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),w=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> uTime<span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">float</span> barX <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x<span class="token operator">+</span>uTime<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> barX <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token operator">-</span> <span class="token number">0.2</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> barY <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> barX<span class="token operator">+</span>barY<span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span><span class="token keyword">vec4</span><span class="token punctuation">(</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span>strength<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),U=(0,t.uE)('<div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token keyword">precision</span> <span class="token keyword">lowp</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> uTime<span class="token punctuation">;</span>\n<span class="token keyword">varying</span> <span class="token keyword">vec2</span> vUv<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">float</span> barX <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x<span class="token operator">+</span>uTime<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> barX <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token operator">-</span> <span class="token number">0.2</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> barY <span class="token operator">=</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token function">mod</span><span class="token punctuation">(</span>vUv<span class="token punctuation">.</span>x <span class="token operator">*</span> <span class="token number">10.0</span> <span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">;</span>\n    <span class="token keyword">float</span> strength <span class="token operator">=</span> barX<span class="token operator">+</span>barY<span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>vUv<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>strength<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),_={__name:"glsl-graphical-part1.html",setup(n){const s=n=>{const s=new p.xsS,a=new p.SUY,t={u_time:{type:"f",value:1},uTime:{type:"f",value:1},u_resolution:{type:"v2",value:new p.FM8}},e=new p.cPb(75,2,.1,1e3);e.position.set(0,0,10),s.add(e);const c=new p.jyz({uniforms:t,fragmentShader:n.fragmentShader,vertexShader:"\n        precision lowp float;\n        varying vec2 vUv;\n        void main(){\n            vUv = uv;\n            gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( position, 1.0 );\n        }\n        ",side:p.ehD}),l=new p.Kj0(new p._12(10,10),c);s.add(l);const i=new p.CP7;i.setPixelRatio(window.devicePixelRatio),i.setSize(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2),i.shadowMap.enabled=!0,n.shaderDom.value.appendChild(i.domElement),i.render(s,e);const u=new o.z(e,i.domElement);u.enableDamping=!0,t.u_resolution.value.x=i.domElement.width,t.u_resolution.value.y=i.domElement.height,function n(){t.u_time.value+=a.getDelta(),t.uTime.value+=a.getDelta(),u.update(),i.render(s,e),requestAnimationFrame(n)}()},a=(0,e.iH)(),_={fragmentShader:" \n#ifdef GL_ES \nprecision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){ \n    gl_FragColor =vec4(vUv,0,1) ; \n} ",shaderDom:a},x=(0,e.iH)(),C={fragmentShader:" \n#ifdef GL_ES \nprecision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){ \n    gl_FragColor =vec4(vUv,1,1) ; \n} ",shaderDom:x},F=(0,e.iH)(),S={fragmentShader:"\n #ifdef GL_ES \n precision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){  \n    float strength = vUv.x;\n     gl_FragColor =vec4(strength,strength,strength,1);; \n} ",shaderDom:F},E=(0,e.iH)(),D={fragmentShader:"\n #ifdef GL_ES \n precision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){  \n    float strength = vUv.y;\n     gl_FragColor =vec4(strength,strength,strength,1);; \n} ",shaderDom:E},T=(0,e.iH)(),H={fragmentShader:"\n #ifdef GL_ES \n precision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){  \n    float strength = 1.0-vUv.y;\n     gl_FragColor =vec4(strength,strength,strength,1);; \n} ",shaderDom:T},L=(0,e.iH)(),X={fragmentShader:"\n #ifdef GL_ES \n precision mediump float; \n#endif \nvarying vec2 vUv; \nvoid main(){  \n    float strength = vUv.y * 10.0;\n     gl_FragColor =vec4(strength,strength,strength,1);; \n} ",shaderDom:L},G=(0,e.iH)(),Y={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n     //7利用通过取模达到反复效果\n   float strength = mod(vUv.y * 10.0 , 1.0) ;\n   gl_FragColor =vec4(strength,strength,strength,1);\n}",shaderDom:G},z=(0,e.iH)(),M={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n     //8利用step(edge, x)如果x < edge，返回0.0，否则返回1.0\n    float strength =  mod(vUv.y * 10.0 , 1.0) ;\n    strength = step(0.5,strength);\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:z},P=(0,e.iH)(),j={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n     //9利用step(edge, x)如果x < edge，返回0.0，否则返回1.0\n    float strength =  mod(vUv.y * 10.0 , 1.0) ;\n    strength = step(0.8,strength);\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:P},R=(0,e.iH)(),Z={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n    //10利用step(edge, x)如果x < edge，返回0.0，否则返回1.0\n    float strength =  mod(vUv.x * 10.0 , 1.0) ;\n    strength = step(0.8,strength);\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:R},q=(0,e.iH)(),N={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n    // 11条纹相加\n    float strength = step(0.8, mod(vUv.x * 10.0 , 1.0)) ;\n    strength += step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:q},O=(0,e.iH)(),W={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n    // 12条纹相乘\n    float strength = step(0.8, mod(vUv.x * 10.0 , 1.0)) ;\n    strength *= step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:O},A=(0,e.iH)(),J={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n    // 13条纹相减\n    float strength = step(0.8, mod(vUv.x * 10.0 , 1.0)) ;\n    strength -= step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:A},K=(0,e.iH)(),B={fragmentShader:"\nprecision lowp float;\nvarying vec2 vUv;\nvoid main(){\n     // 14方块图形\n    float strength = step(0.2, mod(vUv.x * 10.0 , 1.0)) ;\n    strength *= step(0.2, mod(vUv.y * 10.0 , 1.0)) ;\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:K},I=(0,e.iH)(),Q={fragmentShader:"\nprecision lowp float;\nuniform float uTime;\nvarying vec2 vUv;\nvoid main(){\n    float barX = step(0.4, mod((vUv.x+uTime*0.1) * 10.0 , 1.0))*step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    //float barX = step(0.4, mod(vUv.x * 10.0 - 0.2 , 1.0))*step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    float barY = step(0.4, mod(vUv.y * 10.0 , 1.0))*step(0.8, mod(vUv.x * 10.0 , 1.0))  ;\n    float strength = barX+barY;\n\n    gl_FragColor =vec4(strength,strength,strength,1);\n}\n    ",shaderDom:I},V=(0,e.iH)(),$={fragmentShader:"\nprecision lowp float;\nuniform float uTime;\nvarying vec2 vUv;\nvoid main(){\n    float barX = step(0.4, mod((vUv.x+uTime*0.1) * 10.0 , 1.0))*step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    //float barX = step(0.4, mod(vUv.x * 10.0 - 0.2 , 1.0))*step(0.8, mod(vUv.y * 10.0 , 1.0)) ;\n    float barY = step(0.4, mod(vUv.y * 10.0 , 1.0))*step(0.8, mod(vUv.x * 10.0 , 1.0))  ;\n    float strength = barX+barY;\n\n    gl_FragColor = vec4(vUv,1,strength);\n}\n    ",shaderDom:V};return(0,t.bv)((()=>{s(_),s(C),s(S),s(D),s(H),s(X),s(Y),s(M),s(j),s(Z),s(N),s(W),s(J),s(B),s(Q),s($)})),(n,s)=>((0,t.wg)(),(0,t.iD)("div",null,[c,(0,t._)("div",{ref_key:"part1",ref:a},null,512),l,(0,t._)("div",{ref_key:"part2",ref:x},null,512),i,(0,t._)("div",{ref_key:"part3",ref:F},null,512),u,(0,t._)("div",{ref_key:"part4",ref:E},null,512),r,(0,t._)("div",{ref_key:"part5",ref:T},null,512),k,(0,t._)("div",{ref_key:"part6",ref:L},null,512),d,(0,t._)("div",{ref_key:"part7",ref:G},null,512),v,(0,t._)("div",{ref_key:"part8",ref:z},null,512),m,(0,t._)("div",{ref_key:"part9",ref:P},null,512),g,(0,t._)("div",{ref_key:"part10",ref:R},null,512),b,(0,t._)("div",{ref_key:"part11",ref:q},null,512),y,(0,t._)("div",{ref_key:"part12",ref:O},null,512),f,(0,t._)("div",{ref_key:"part13",ref:A},null,512),h,(0,t._)("div",{ref_key:"part14",ref:K},null,512),w,(0,t._)("div",{ref_key:"part15",ref:I},null,512),U,(0,t._)("div",{ref_key:"part16",ref:V},null,512)]))}}},595:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-37a052cc","path":"/glsl/glsl-graphical-part1.html","title":"GLSL图形（一）","lang":"zh-CN","frontmatter":{"title":"GLSL图形（一）","date":"2022-10-10T00:00:00.000Z","category":["GLSL"],"summary":"import * as THREE from \'three\' import {ref,onMounted} from \'vue\' // 导入轨道控制器 import { OrbitControls } from \'three/examples/jsm/controls/OrbitControls\' const initScene = (shader)=>{ ","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/glsl/glsl-graphical-part1.html"}],["meta",{"property":"og:title","content":"GLSL图形（一）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-19T03:28:45.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-10-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-19T03:28:45.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1672392758000,"updatedTime":1674098925000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":5.14,"words":1542},"filePathRelative":"glsl/glsl-graphical-part1.md","localizedDate":"2022年10月10日"}')}}]);