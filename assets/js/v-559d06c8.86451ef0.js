"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[109],{81336:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var p=a(71534);const t=a.p+"assets/img/957004303041232323.4391a7b0.png",e=a.p+"assets/img/400004802041452323.c8b92fe0.png",o=a.p+"assets/img/709004802041452323.89f6346e.png",c=a.p+"assets/img/394005002041452323.d610fbd8.png";var l=a(32049),u=a(86171),i=a(97630);const r=(0,p.uE)('<h2 id="平移" tabindex="-1"><a class="header-anchor" href="#平移" aria-hidden="true">#</a> 平移</h2><p><img src="'+t+'" alt=""></p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv ( patriciogonzalezvivo.com ) - 2015</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">float</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token keyword">vec2</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    _size <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">-</span> _size<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>\n    <span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                        _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        _st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    uv <span class="token operator">*=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                    _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token operator">-</span>_st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> uv<span class="token punctuation">.</span>x<span class="token operator">*</span>uv<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">cross</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">float</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span>  <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">,</span>_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// To move the cross we move the space</span>\n    <span class="token keyword">vec2</span> translate <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token function">cos</span><span class="token punctuation">(</span>u_time<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sin</span><span class="token punctuation">(</span>u_time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    st <span class="token operator">+=</span> translate<span class="token operator">*</span><span class="token number">0.35</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Show the coordinates of the space on the background</span>\n    <span class="token comment">// color = vec3(st.x,st.y,0.0);</span>\n\n    <span class="token comment">// Add the shape on the foreground</span>\n    color <span class="token operator">+=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">cross</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),k=(0,p.uE)('<h2 id="旋转" tabindex="-1"><a class="header-anchor" href="#旋转" aria-hidden="true">#</a> 旋转</h2><p><img src="'+e+'" alt=""></p><p><img src="'+o+'" alt=""></p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv ( patriciogonzalezvivo.com ) - 2015</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PI</span> <span class="token expression"><span class="token number">3.14159265359</span></span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">mat2</span> <span class="token function">rotate2d</span><span class="token punctuation">(</span><span class="token keyword">float</span> _angle<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">mat2</span><span class="token punctuation">(</span><span class="token function">cos</span><span class="token punctuation">(</span>_angle<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token function">sin</span><span class="token punctuation">(</span>_angle<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token function">sin</span><span class="token punctuation">(</span>_angle<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">cos</span><span class="token punctuation">(</span>_angle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token keyword">vec2</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    _size <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">-</span> _size<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>\n    <span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                        _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        _st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    uv <span class="token operator">*=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                    _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token operator">-</span>_st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> uv<span class="token punctuation">.</span>x<span class="token operator">*</span>uv<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">cross</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">float</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span>  <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">,</span>_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// move space from the center to the vec2(0.0)</span>\n    st <span class="token operator">-=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// rotate the space</span>\n    st <span class="token operator">=</span> <span class="token function">rotate2d</span><span class="token punctuation">(</span> <span class="token function">sin</span><span class="token punctuation">(</span>u_time<span class="token punctuation">)</span><span class="token operator">*</span>PI <span class="token punctuation">)</span> <span class="token operator">*</span> st<span class="token punctuation">;</span>\n    <span class="token comment">// move it back to the original place</span>\n    st <span class="token operator">+=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Show the coordinates of the space on the background</span>\n    <span class="token comment">// color = vec3(st.x,st.y,0.0);</span>\n\n    <span class="token comment">// Add the shape on the foreground</span>\n    color <span class="token operator">+=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">cross</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),d=(0,p.uE)('<h2 id="缩放" tabindex="-1"><a class="header-anchor" href="#缩放" aria-hidden="true">#</a> 缩放</h2><p><img src="'+c+'" alt=""></p><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">// Author @patriciogv ( patriciogonzalezvivo.com ) - 2015</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PI</span> <span class="token expression"><span class="token number">3.14159265359</span></span></span>\n\n<span class="token keyword">uniform</span> <span class="token keyword">vec2</span> u_resolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> u_time<span class="token punctuation">;</span>\n\n<span class="token keyword">mat2</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> _scale<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">mat2</span><span class="token punctuation">(</span>_scale<span class="token punctuation">.</span>x<span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span>\n                <span class="token number">0.0</span><span class="token punctuation">,</span>_scale<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token keyword">vec2</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    _size <span class="token operator">=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">-</span> _size<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">;</span>\n    <span class="token keyword">vec2</span> uv <span class="token operator">=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                        _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        _st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    uv <span class="token operator">*=</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>\n                    _size<span class="token operator">+</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token operator">-</span>_st<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> uv<span class="token punctuation">.</span>x<span class="token operator">*</span>uv<span class="token punctuation">.</span>y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">cross</span><span class="token punctuation">(</span><span class="token keyword">in</span> <span class="token keyword">vec2</span> _st<span class="token punctuation">,</span> <span class="token keyword">float</span> _size<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span>  <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token punctuation">,</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token function">box</span><span class="token punctuation">(</span>_st<span class="token punctuation">,</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span>_size<span class="token operator">/</span><span class="token number">4.</span><span class="token punctuation">,</span>_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> st <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token operator">/</span>u_resolution<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token keyword">vec3</span> color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    st <span class="token operator">-=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    st <span class="token operator">=</span> <span class="token function">scale</span><span class="token punctuation">(</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span>u_time<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">*</span> st<span class="token punctuation">;</span>\n    st <span class="token operator">+=</span> <span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Show the coordinates of the space on the background</span>\n    <span class="token comment">// color = vec3(st.x,st.y,0.0);</span>\n\n    <span class="token comment">// Add the shape on the foreground</span>\n    color <span class="token operator">+=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">cross</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),v=(0,p.uE)('<h2 id="雷达" tabindex="-1"><a class="header-anchor" href="#雷达" aria-hidden="true">#</a> 雷达</h2><div class="language-glsl line-numbers-mode" data-ext="glsl"><pre class="language-glsl"><code><span class="token comment">//作者： https://www.shadertoy.com/view/4s2SRt</span>\n<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">ifdef</span> <span class="token expression">GL_ES</span></span>\n<span class="token keyword">precision</span> <span class="token keyword">mediump</span> <span class="token keyword">float</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">endif</span></span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec3</span> iResolution<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">float</span> iTime<span class="token punctuation">;</span>\n<span class="token keyword">uniform</span> <span class="token keyword">vec4</span> iDate<span class="token punctuation">;</span>\n<span class="token comment">//Sci-fi radar based on the work of gmunk for Oblivion</span>\n<span class="token comment">//http://work.gmunk.com/OBLIVION-GFX</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">SMOOTH</span><span class="token expression"><span class="token punctuation">(</span>r<span class="token punctuation">,</span>R<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span>R<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span>R<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">RANGE</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span> <span class="token function">step</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">step</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">RS</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>x<span class="token punctuation">)</span> <span class="token punctuation">(</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span>b<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M_PI</span> <span class="token expression"><span class="token number">3.1415926535897932384626433832795</span></span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">blue1</span> <span class="token expression"><span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.74</span><span class="token punctuation">,</span><span class="token number">0.95</span><span class="token punctuation">,</span><span class="token number">1.00</span><span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">blue2</span> <span class="token expression"><span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.87</span><span class="token punctuation">,</span><span class="token number">0.98</span><span class="token punctuation">,</span><span class="token number">1.00</span><span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">blue3</span> <span class="token expression"><span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.35</span><span class="token punctuation">,</span><span class="token number">0.76</span><span class="token punctuation">,</span><span class="token number">0.83</span><span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">blue4</span> <span class="token expression"><span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">0.953</span><span class="token punctuation">,</span><span class="token number">0.969</span><span class="token punctuation">,</span><span class="token number">0.89</span><span class="token punctuation">)</span></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">red</span>   <span class="token expression"><span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1.00</span><span class="token punctuation">,</span><span class="token number">0.38</span><span class="token punctuation">,</span><span class="token number">0.227</span><span class="token punctuation">)</span></span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">MOV</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>t<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">vec2</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">+</span>b<span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">*</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">+</span>d<span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">*</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>\n\n<span class="token keyword">float</span> <span class="token function">movingLine</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//angle of the line</span>\n    <span class="token keyword">float</span> theta0 <span class="token operator">=</span> <span class="token number">90.0</span> <span class="token operator">*</span> iTime<span class="token punctuation">;</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span> d<span class="token punctuation">,</span> d <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">&lt;</span>radius<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">//compute the distance to the line theta=theta0</span>\n        <span class="token keyword">vec2</span> p <span class="token operator">=</span> radius<span class="token operator">*</span><span class="token keyword">vec2</span><span class="token punctuation">(</span><span class="token function">cos</span><span class="token punctuation">(</span>theta0<span class="token operator">*</span>M_PI<span class="token operator">/</span><span class="token number">180.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            <span class="token operator">-</span><span class="token function">sin</span><span class="token punctuation">(</span>theta0<span class="token operator">*</span>M_PI<span class="token operator">/</span><span class="token number">180.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">float</span> l <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span> d <span class="token operator">-</span> p<span class="token operator">*</span><span class="token function">clamp</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">dot</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \td <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//compute gradient based on angle difference to theta0</span>\n   \t \t<span class="token keyword">float</span> theta <span class="token operator">=</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">180.0</span><span class="token operator">*</span><span class="token function">atan</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">,</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token operator">/</span>M_PI<span class="token operator">+</span>theta0<span class="token punctuation">,</span><span class="token number">360.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">float</span> gradient <span class="token operator">=</span> <span class="token function">clamp</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span>theta<span class="token operator">/</span><span class="token number">90.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0.5</span><span class="token operator">*</span>gradient<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">,</span> <span class="token keyword">float</span> width<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>uv <span class="token operator">-</span> center<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">+</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">circle2</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">,</span> <span class="token keyword">float</span> width<span class="token punctuation">,</span> <span class="token keyword">float</span> opening<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span> d<span class="token punctuation">,</span> d <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    d <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">&gt;</span> opening <span class="token punctuation">)</span>\n\t    <span class="token keyword">return</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">+</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span>\n        <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">float</span> <span class="token function">circle3</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">,</span> <span class="token keyword">float</span> width<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span> d<span class="token punctuation">,</span> d <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    d <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> theta <span class="token operator">=</span> <span class="token number">180.0</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">atan</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">,</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token operator">/</span>M_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">2.1</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">mod</span><span class="token punctuation">(</span>theta<span class="token operator">+</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">45.0</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span>\n        <span class="token function">mix</span><span class="token punctuation">(</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token number">45.0</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">mod</span><span class="token punctuation">(</span>theta<span class="token punctuation">,</span> <span class="token number">180.0</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">90.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">*</span>\n        <span class="token punctuation">(</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token operator">+</span>width<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span>radius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">triangles</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">RS</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>x<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span> <span class="token number">7.0</span><span class="token operator">+</span>d<span class="token punctuation">.</span>x<span class="token operator">-</span>radius<span class="token punctuation">,</span><span class="token number">9.0</span><span class="token operator">+</span>d<span class="token punctuation">.</span>x<span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n         <span class="token operator">+</span> <span class="token function">RS</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>x<span class="token operator">+</span>radius<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span> <span class="token number">7.0</span><span class="token operator">-</span>d<span class="token punctuation">.</span>x<span class="token operator">-</span>radius<span class="token punctuation">,</span><span class="token number">9.0</span><span class="token operator">-</span>d<span class="token punctuation">.</span>x<span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n         <span class="token operator">+</span> <span class="token function">RS</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>y<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span> <span class="token number">7.0</span><span class="token operator">+</span>d<span class="token punctuation">.</span>y<span class="token operator">-</span>radius<span class="token punctuation">,</span><span class="token number">9.0</span><span class="token operator">+</span>d<span class="token punctuation">.</span>y<span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n         <span class="token operator">+</span> <span class="token function">RS</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>y<span class="token operator">+</span>radius<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token function">smoothstep</span><span class="token punctuation">(</span> <span class="token number">7.0</span><span class="token operator">-</span>d<span class="token punctuation">.</span>y<span class="token operator">-</span>radius<span class="token punctuation">,</span><span class="token number">9.0</span><span class="token operator">-</span>d<span class="token punctuation">.</span>y<span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">float</span> <span class="token function">_cross</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span> d<span class="token punctuation">,</span> d <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>r<span class="token operator">&lt;</span>radius<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>x<span class="token operator">==</span>y<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token operator">-</span>y<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">float</span> <span class="token function">dots</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec2</span> d <span class="token operator">=</span> uv <span class="token operator">-</span> center<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span> <span class="token function">dot</span><span class="token punctuation">(</span> d<span class="token punctuation">,</span> d <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> r <span class="token operator">&lt;=</span> <span class="token number">2.5</span> <span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> r<span class="token operator">&lt;=</span> radius<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token function">mod</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>x<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">50.0</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2.0</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> r <span class="token operator">&gt;=</span> <span class="token number">50.0</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> r <span class="token operator">&lt;</span> <span class="token number">115.0</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span>\n\t    <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">float</span> <span class="token function">bip1</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>uv <span class="token operator">-</span> center<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">float</span> <span class="token function">bip2</span><span class="token punctuation">(</span><span class="token keyword">vec2</span> uv<span class="token punctuation">,</span> <span class="token keyword">vec2</span> center<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">float</span> r <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>uv <span class="token operator">-</span> center<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> R <span class="token operator">=</span> <span class="token number">8.0</span><span class="token operator">+</span><span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">87.0</span><span class="token operator">*</span>iTime<span class="token punctuation">,</span> <span class="token number">80.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">0.5</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">30.0</span><span class="token operator">*</span>iTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token number">5.0</span><span class="token punctuation">)</span>\n        <span class="token operator">+</span> <span class="token function">SMOOTH</span><span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span><span class="token number">8.0</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span>\n        <span class="token operator">+</span> <span class="token function">smoothstep</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">8.0</span><span class="token punctuation">,</span>R<span class="token operator">-</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>R<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">SMOOTH</span><span class="token punctuation">(</span>R<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>  <span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">vec3</span> finalColor<span class="token punctuation">;</span>\n\t<span class="token keyword">vec2</span> uv <span class="token operator">=</span> gl_FragCoord<span class="token punctuation">.</span>xy<span class="token punctuation">;</span>\n    <span class="token comment">//center of the image</span>\n    <span class="token keyword">vec2</span> c <span class="token operator">=</span> iResolution<span class="token punctuation">.</span>xy<span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">;</span>\n    finalColor <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span> <span class="token number">0.3</span><span class="token operator">*</span><span class="token function">_cross</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">240.0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token punctuation">(</span> <span class="token function">circle</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">100.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span>\n                  <span class="token operator">+</span> <span class="token function">circle</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">165.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">*</span> blue1<span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token function">circle</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">240.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//+ dots(uv,c,240.0)) * blue4;</span>\n    finalColor <span class="token operator">+=</span> <span class="token function">circle3</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">313.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">)</span> <span class="token operator">*</span> blue1<span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token function">triangles</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">315.0</span> <span class="token operator">+</span> <span class="token number">30.0</span><span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>iTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> blue2<span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token function">movingLine</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">240.0</span><span class="token punctuation">)</span> <span class="token operator">*</span> blue3<span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token function">circle</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token operator">*</span> blue3<span class="token punctuation">;</span>\n    finalColor <span class="token operator">+=</span> <span class="token number">0.7</span> <span class="token operator">*</span> <span class="token function">circle2</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">262.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token operator">+</span><span class="token number">0.2</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>iTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> blue3<span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">length</span><span class="token punctuation">(</span>uv<span class="token operator">-</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">240.0</span> <span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">//animate some bips with random movements</span>\n    \t<span class="token keyword">vec2</span> p <span class="token operator">=</span> <span class="token number">130.0</span><span class="token operator">*</span><span class="token function">MOV</span><span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.4</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token operator">+</span><span class="token number">0.1</span><span class="token operator">*</span>iTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   \t\tfinalColor <span class="token operator">+=</span> <span class="token function">bip1</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token operator">+</span>p<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        p <span class="token operator">=</span> <span class="token number">130.0</span><span class="token operator">*</span><span class="token function">MOV</span><span class="token punctuation">(</span><span class="token number">0.9</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">,</span><span class="token number">1.7</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2.0</span><span class="token operator">+</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">*</span>iTime<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0.15</span><span class="token operator">*</span>iTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        finalColor <span class="token operator">+=</span> <span class="token function">bip1</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span> c<span class="token operator">+</span>p<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        p <span class="token operator">=</span> <span class="token number">50.0</span><span class="token operator">*</span><span class="token function">MOV</span><span class="token punctuation">(</span><span class="token number">1.54</span><span class="token punctuation">,</span><span class="token number">1.7</span><span class="token punctuation">,</span><span class="token number">1.37</span><span class="token punctuation">,</span><span class="token number">1.8</span><span class="token punctuation">,</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">*</span>iTime<span class="token operator">+</span><span class="token number">7.0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0.2</span><span class="token operator">*</span>iTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        finalColor <span class="token operator">+=</span> <span class="token function">bip2</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span>c<span class="token operator">+</span>p<span class="token punctuation">)</span> <span class="token operator">*</span> red<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    gl_FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span> finalColor<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>  \n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),m={__name:"glsl-matrices.html",setup(n){const s=n=>{const s=new u.xsS,a=new u.SUY,p={u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new u.FM8}},t=new u.cPb(75,2,.1,1e3);t.position.set(0,0,20),s.add(t);const e=new u.jyz({uniforms:p,vertexShader:"\n        precision lowp float;\n        varying vec2 v_uv;\n        void main(){\n            v_uv = uv;\n            gl_Position = projectionMatrix *viewMatrix* modelMatrix * vec4( position, 1.0 );\n        }\n        ",fragmentShader:n.fragmentShader,side:u.ehD}),o=new u.Kj0(new u._12(100,100),e);o.position.set(0,0,0),s.add(o);const c=new u.CP7;c.setSize(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2),c.shadowMap.enabled=!0,n.shaderDom.value.appendChild(c.domElement),c.render(s,t);const l=new i.z(t,c.domElement);l.enableDamping=!0,p.u_resolution.value.x=c.domElement.width,p.u_resolution.value.y=c.domElement.height,function n(){p.u_time.value+=a.getDelta(),l.update(),c.render(s,t),requestAnimationFrame(n)}()},a=(0,l.iH)(),t={shaderDom:a,fragmentShader:"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat newCross(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) + box(_st, vec2(_size/4.,_size));\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    // To move the cross we move the space\n    // -1 到 1 \n    vec2 translate = vec2(cos(u_time),sin(u_time));\n    // z坐标移动\n    st += translate*0.35;\n\n    // Show the coordinates of the space on the background\n    // color = vec3(st.x,st.y,0.0);\n\n    // Add the shape on the foreground\n    color += vec3(newCross(st,0.25));\n\n    gl_FragColor = vec4(color,1.0);\n}\n    "},e=(0,l.iH)(),o={shaderDom:e,fragmentShader:"\n    #ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat newCross(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    // move space from the center to the vec2(0.0)\n    st -= vec2(0.5);\n    // rotate the space\n    st = rotate2d( sin(u_time)*PI ) * st;\n    // move it back to the original place\n    st += vec2(0.5);\n\n    // Show the coordinates of the space on the background\n    // color = vec3(st.x,st.y,0.0);\n\n    // Add the shape on the foreground\n    color += vec3(newCross(st,0.4));\n\n    gl_FragColor = vec4(color,1.0);\n}\n    \n    "},c=(0,l.iH)(),m={shaderDom:c,fragmentShader:"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat newCross(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    st -= vec2(0.5);\n    st = scale( vec2(sin(u_time)+1.0) ) * st;\n    st += vec2(0.5);\n\n    // Show the coordinates of the space on the background\n    // color = vec3(st.x,st.y,0.0);\n\n    // Add the shape on the foreground\n    color += vec3(newCross(st,0.2));\n\n    gl_FragColor = vec4(color,1.0);\n}\n    \n    "},b=(0,l.iH)(),f={shaderDom:b,fragmentShader:"\n# ifdef GL_ES\nprecision mediump float;\n# endif\nuniform vec3 iResolution;\nuniform float iTime;\nuniform vec4 iDate;\n//Sci-fi radar based on the work of gmunk for Oblivion\n//http://work.gmunk.com/OBLIVION-GFX\n\n#define SMOOTH(r,R) (1.0-smoothstep(R-1.0,R+1.0, r))\n#define RANGE(a,b,x) ( step(a,x)*(1.0-step(b,x)) )\n#define RS(a,b,x) ( smoothstep(a-1.0,a+1.0,x)*(1.0-smoothstep(b-1.0,b+1.0,x)) )\n#define M_PI 3.1415926535897932384626433832795\n\n#define blue1 vec3(0.74,0.95,1.00)\n#define blue2 vec3(0.87,0.98,1.00)\n#define blue3 vec3(0.35,0.76,0.83)\n#define blue4 vec3(0.953,0.969,0.89)\n#define red   vec3(1.00,0.38,0.227)\n\n#define MOV(a,b,c,d,t) (vec2(a*cos(t)+b*cos(0.1*(t)), c*sin(t)+d*cos(0.1*(t))))\n\nfloat movingLine(vec2 uv, vec2 center, float radius)\n{\n    //angle of the line\n    float theta0 = 90.0 * iTime;\n    vec2 d = uv - center;\n    float r = sqrt( dot( d, d ) );\n    if(r<radius)\n    {\n        //compute the distance to the line theta=theta0\n        vec2 p = radius*vec2(cos(theta0*M_PI/180.0),\n                            -sin(theta0*M_PI/180.0));\n        float l = length( d - p*clamp( dot(d,p)/dot(p,p), 0.0, 1.0) );\n    \td = normalize(d);\n        //compute gradient based on angle difference to theta0\n   \t \tfloat theta = mod(180.0*atan(d.y,d.x)/M_PI+theta0,360.0);\n        float gradient = clamp(1.0-theta/90.0,0.0,1.0);\n        return SMOOTH(l,1.0)+0.5*gradient;\n    }\n    else return 0.0;\n}\n\nfloat circle(vec2 uv, vec2 center, float radius, float width)\n{\n    float r = length(uv - center);\n    return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\n}\n\nfloat circle2(vec2 uv, vec2 center, float radius, float width, float opening)\n{\n    vec2 d = uv - center;\n    float r = sqrt( dot( d, d ) );\n    d = normalize(d);\n    if( abs(d.y) > opening )\n\t    return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\n    else\n        return 0.0;\n}\nfloat circle3(vec2 uv, vec2 center, float radius, float width)\n{\n    vec2 d = uv - center;\n    float r = sqrt( dot( d, d ) );\n    d = normalize(d);\n    float theta = 180.0*(atan(d.y,d.x)/M_PI);\n    return smoothstep(2.0, 2.1, abs(mod(theta+2.0,45.0)-2.0)) *\n        mix( 0.5, 1.0, step(45.0, abs(mod(theta, 180.0)-90.0)) ) *\n        (SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius));\n}\n\nfloat triangles(vec2 uv, vec2 center, float radius)\n{\n    vec2 d = uv - center;\n    return RS(-8.0, 0.0, d.x-radius) * (1.0-smoothstep( 7.0+d.x-radius,9.0+d.x-radius, abs(d.y)))\n         + RS( 0.0, 8.0, d.x+radius) * (1.0-smoothstep( 7.0-d.x-radius,9.0-d.x-radius, abs(d.y)))\n         + RS(-8.0, 0.0, d.y-radius) * (1.0-smoothstep( 7.0+d.y-radius,9.0+d.y-radius, abs(d.x)))\n         + RS( 0.0, 8.0, d.y+radius) * (1.0-smoothstep( 7.0-d.y-radius,9.0-d.y-radius, abs(d.x)));\n}\n\nfloat _cross(vec2 uv, vec2 center, float radius)\n{\n    vec2 d = uv - center;\n    int x = int(d.x);\n    int y = int(d.y);\n    float r = sqrt( dot( d, d ) );\n    if( (r<radius) && ( (x==y) || (x==-y) ) )\n        return 1.0;\n    else return 0.0;\n}\nfloat dots(vec2 uv, vec2 center, float radius)\n{\n    vec2 d = uv - center;\n    float r = sqrt( dot( d, d ) );\n    if( r <= 2.5 )\n        return 1.0;\n    if( ( r<= radius) && ( (abs(d.y+0.5)<=1.0) && ( mod(d.x+1.0, 50.0) < 2.0 ) ) )\n        return 1.0;\n    else if ( (abs(d.y+0.5)<=1.0) && ( r >= 50.0 ) && ( r < 115.0 ) )\n        return 0.5;\n    else\n\t    return 0.0;\n}\nfloat bip1(vec2 uv, vec2 center)\n{\n    return SMOOTH(length(uv - center),3.0);\n}\nfloat bip2(vec2 uv, vec2 center)\n{\n    float r = length(uv - center);\n    float R = 8.0+mod(87.0*iTime, 80.0);\n    return (0.5-0.5*cos(30.0*iTime)) * SMOOTH(r,5.0)\n        + SMOOTH(6.0,r)-SMOOTH(8.0,r)\n        + smoothstep(max(8.0,R-20.0),R,r)-SMOOTH(R,r);\n}\nvoid main(  )\n{\n    vec3 finalColor;\n\tvec2 uv = gl_FragCoord.xy;\n    //center of the image\n    vec2 c = iResolution.xy/2.0;\n    finalColor = vec3( 0.3*_cross(uv, c, 240.0) );\n    finalColor += ( circle(uv, c, 100.0, 1.0)\n                  + circle(uv, c, 165.0, 1.0) ) * blue1;\n    finalColor += (circle(uv, c, 240.0, 2.0) );//+ dots(uv,c,240.0)) * blue4;\n    finalColor += circle3(uv, c, 313.0, 4.0) * blue1;\n    finalColor += triangles(uv, c, 315.0 + 30.0*sin(iTime)) * blue2;\n    finalColor += movingLine(uv, c, 240.0) * blue3;\n    finalColor += circle(uv, c, 10.0, 1.0) * blue3;\n    finalColor += 0.7 * circle2(uv, c, 262.0, 1.0, 0.5+0.2*cos(iTime)) * blue3;\n    if( length(uv-c) < 240.0 )\n    {\n        //animate some bips with random movements\n    \tvec2 p = 130.0*MOV(1.3,1.0,1.0,1.4,3.0+0.1*iTime);\n   \t\tfinalColor += bip1(uv, c+p) * vec3(1,1,1);\n        p = 130.0*MOV(0.9,-1.1,1.7,0.8,-2.0+sin(0.1*iTime)+0.15*iTime);\n        finalColor += bip1(uv, c+p) * vec3(1,1,1);\n        p = 50.0*MOV(1.54,1.7,1.37,1.8,sin(0.1*iTime+7.0)+0.2*iTime);\n        finalColor += bip2(uv,c+p) * red;\n    }\n\n    gl_FragColor = vec4( finalColor, 1.0 );\n}    \n    \n    "};return(0,p.bv)((()=>{s(t),s(o),s(m),(n=>{const s=new u.xsS,a=new u.SUY,p={iResolution:{value:new u.Pa4},iTime:{value:0},iTimeDelta:{value:0},iFrameRate:{value:60},iFrame:{value:0},iChannelTime:{value:[0,0,0,0]},iChannelResolution:{value:[new u.Pa4,new u.Pa4,new u.Pa4,new u.Pa4]},iMouse:{value:new u.Ltg},iChannel0:{value:new u.xEZ},iChannel1:{value:new u.xEZ},iChannel2:{value:new u.xEZ},iChannel3:{value:new u.xEZ},iDate:{value:new u.Ltg}},t=new u.cPb(75,2,.1,1e3);t.position.set(0,0,20),s.add(t);const e=new u.jyz({uniforms:p,vertexShader:"\n        precision lowp float;\n        varying vec2 v_uv;\n        void main(){\n            v_uv = uv;\n            gl_Position = projectionMatrix *viewMatrix* modelMatrix * vec4( position, 1.0 );\n        }\n        ",fragmentShader:n.fragmentShader,side:u.ehD}),o=new u.Kj0(new u._12(100,100),e);o.position.set(0,0,0),s.add(o);const c=new u.CP7;c.setSize(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2),c.shadowMap.enabled=!0,n.shaderDom.value.appendChild(c.domElement),c.render(s,t);const l=new i.z(t,c.domElement);l.enableDamping=!0;const r=new u.dpR;e.uniforms.iResolution.value.set(n.shaderDom.value.offsetWidth,n.shaderDom.value.offsetWidth/2,1),e.uniforms.iChannel0.value=r.load("/assets/textures/ca.jpeg"),n.shaderDom.value.addEventListener("mousemove",(n=>{e.uniforms.iMouse.value.set(n.clientX,n.clientY,0,0)})),function n(){l.update(),c.render(s,t),requestAnimationFrame(n);const p=new Date,o=.001*p.getTime();e.uniforms.iTime.value+=a.getDelta(),e.uniforms.iDate.value.set(p.getFullYear(),p.getMonth(),p.getDate(),o)}()})(f)})),(n,s)=>((0,p.wg)(),(0,p.iD)("div",null,[r,(0,p._)("div",{ref_key:"translationRef",ref:a},null,512),k,(0,p._)("div",{ref_key:"rotateRef",ref:e},null,512),d,(0,p._)("div",{ref_key:"scaleRef",ref:c},null,512),v,(0,p._)("div",{ref_key:"radarRef",ref:b},null,512)]))}}},7833:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p=JSON.parse('{"key":"v-559d06c8","path":"/glsl/glsl-matrices.html","title":"GLSL中的矩阵","lang":"zh-CN","frontmatter":{"title":"GLSL中的矩阵","date":"2022-10-13T00:00:00.000Z","category":["GLSL"],"summary":"平移 旋转 缩放 雷达 import {ref,onMounted} from \'vue\' import * as THREE from \'three\' import { OrbitControls } from \'three/examples/jsm/controls/OrbitControls\' const initScene = (shader)=>{","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/glsl/glsl-matrices.html"}],["meta",{"property":"og:title","content":"GLSL中的矩阵"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luxiag.github.io/"}],["meta",{"property":"og:updated_time","content":"2023-04-18T09:30:35.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"GLSL中的矩阵"}],["meta",{"property":"article:published_time","content":"2022-10-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T09:30:35.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"平移","slug":"平移","link":"#平移","children":[]},{"level":2,"title":"旋转","slug":"旋转","link":"#旋转","children":[]},{"level":2,"title":"缩放","slug":"缩放","link":"#缩放","children":[]},{"level":2,"title":"雷达","slug":"雷达","link":"#雷达","children":[]}],"git":{"createdTime":1681810235000,"updatedTime":1681810235000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":1}]},"readingTime":{"minutes":9.06,"words":2717},"filePathRelative":"glsl/glsl-matrices.md","localizedDate":"2022年10月13日"}')}}]);