"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3860],{89558:(n,a,s)=>{s.r(a),s.d(a,{default:()=>u});var t=s(71534),e=s(32049),o=s(86171),i=s(33344),p=s(32314);const c={href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},l=(0,t.uE)('<h2 id="动画类型" tabindex="-1"><a class="header-anchor" href="#动画类型" aria-hidden="true">#</a> 动画类型</h2><table><thead><tr><th>动画类型</th><th>描述</th></tr></thead><tbody><tr><td>帧动画 (Frame Animation)</td><td>将一系列图片按照顺序播放，形成动画效果，类似于传统手绘动画。</td></tr><tr><td>逐帧动画 (Sprite Animation)</td><td>通过改变精灵纹理的位置或贴图来模拟运动，常用于游戏中的人物、道具等的动画效果。</td></tr><tr><td>骨骼动画 (Skeletal Animation)</td><td>通过骨骼的动画变化来模拟角色的运动，将角色的形态分解成多个骨骼，并通过调整骨骼的变换来实现动画效果。</td></tr><tr><td>形状关键帧动画 (Morph Target Animation)</td><td>通过调整网格顶点的位置、法线和颜色等属性，来模拟物体的形变和运动，比如角色的面部表情、物体的形变等。</td></tr><tr><td>粒子动画 (Particle Animation)</td><td>通过控制一组小粒子的运动轨迹、大小、透明度等属性，来模拟各种自然现象，比如烟雾、火花、雨滴等。</td></tr><tr><td>基于物理引擎的动画 (Physics-based Animation)</td><td>通过物理引擎模拟物体的运动、碰撞、重力、弹性等物理特性，来实现更加真实的动画效果，常用于游戏中的角色、物体等。</td></tr></tbody></table><h2 id="threejs-中的动画类" tabindex="-1"><a class="header-anchor" href="#threejs-中的动画类" aria-hidden="true">#</a> ThreeJS 中的动画类</h2><ol><li><p><code>AnimationMixer</code></p><ul><li>使用格式：<code>const mixer = new AnimationMixer( object : Object3D )</code></li><li>功能：管理和混合场景中的动画数据。</li><li>参数说明： <ul><li><code>object</code>：要添加动画数据的 <code>Object3D</code> 对象。</li></ul></li><li>示例：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mixer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AnimationMixer</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationClip</code></p><ul><li>使用格式：<code>AnimationClip( name : String, duration : Number, tracks : Array )</code></li><li>功能：表示一个包含一组 <code>AnimationTrack</code> 的动画片段。</li><li>参数说明： <ul><li><code>name</code>：动画片段的名称。</li><li><code>duration</code>：动画片段的持续时间（秒）。</li><li><code>tracks</code>：包含 <code>AnimationTrack</code> 对象的数组。</li></ul></li><li>示例：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> clip <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>AnimationClip<span class="token punctuation">.</span><span class="token function">CreateFromMorphTargetSequence</span><span class="token punctuation">(</span>\n  <span class="token string">&quot;morph&quot;</span><span class="token punctuation">,</span>\n  geometry<span class="token punctuation">.</span>morphAttributes<span class="token punctuation">.</span>position<span class="token punctuation">,</span>\n  <span class="token number">30</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationAction</code></p><ul><li>使用格式：<code>AnimationAction( mixer : AnimationMixer, clip : AnimationClip, localRoot : Object3D )</code></li><li>功能：表示一个 <code>AnimationClip</code> 在 <code>AnimationMixer</code> 中的播放实例。</li><li>参数说明： <ul><li><code>mixer</code>：<code>AnimationMixer</code> 对象。</li><li><code>clip</code>：<code>AnimationClip</code> 对象。</li><li><code>localRoot</code>：本地根对象，动画中的对象将相对于此对象移动。</li></ul></li><li>示例：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> action <span class="token operator">=</span> mixer<span class="token punctuation">.</span><span class="token function">clipAction</span><span class="token punctuation">(</span>clip<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationObjectGroup</code></p><ul><li>使用格式：<code>AnimationObjectGroup( ...objects : Object3D[] )</code></li><li>功能：管理多个对象的动画。</li><li>参数说明： <ul><li><code>objects</code>：要添加到 <code>AnimationObjectGroup</code> 的 <code>Object3D</code> 对象。</li></ul></li><li>示例：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AnimationObjectGroup</span><span class="token punctuation">(</span>mesh1<span class="token punctuation">,</span> mesh2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> clip <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>AnimationClip<span class="token punctuation">.</span><span class="token function">CreateFromAction</span><span class="token punctuation">(</span>animationAction<span class="token punctuation">)</span><span class="token punctuation">;</span>\nclip<span class="token punctuation">.</span>tracks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 移除第一条跟踪轨迹</span>\ngroup<span class="token punctuation">.</span><span class="token function">clipAction</span><span class="token punctuation">(</span>clip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 播放动画</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>KeyframeTrack</code></p><ul><li>使用格式：<code>KeyframeTrack( name : String, times : Array, values : Array, interpolation : InterpolationModes )</code></li><li>功能：表示动画的关键帧序列。</li><li>参数说明： <ul><li><code>name</code>：关键帧序列的名称。</li><li><code>times</code>：关键帧时间的数组。</li><li><code>values</code>：与关键帧相关联的值的数组。</li><li><code>interpolation</code>：插值模式，默认为 <code>THREE.InterpolateLinear</code>。</li></ul></li><li>示例：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> times <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>NumberKeyframeTrack</span><span class="token punctuation">(</span><span class="token string">&quot;.opacity&quot;</span><span class="token punctuation">,</span> times<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><p>动画的运行是通过 AnimationMixer 类实现的。当一个模型需要播放动画时，我们需要将模型的动画剪辑（AnimationClip）添加到 AnimationMixer 实例中，然后通过 mixer.clipAction() 方法获取一个动画动作（AnimationAction）实例，调用 play() 方法播放动画，AnimationAction 的更新又通过 AnimationMixer.update() 方法实现。</p><ul><li>创建动画剪辑（AnimationClip），并将其包含的动画轨迹（AnimationTrack）绑定到场景中的对象上。</li><li>创建动画混合器（AnimationMixer），并将动画剪辑添加到混合器中。</li><li>调用混合器的 update 方法，更新当前时间下各个对象的状态。</li><li>将更新后的状态应用到场景中的对象上，使动画动起来。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 使用GLTFLoader加载模型</span>\nloader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;models/gltf/Soldier.glb&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 获取模型</span>\n  model <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span>\n  <span class="token comment">// 将模型添加到场景中</span>\n  scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 遍历模型内的所有对象</span>\n  model<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 如果对象是网格，则开启阴影投射</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span> object<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 创建骨骼辅助对象，用于调试和查看骨骼结构</span>\n  skeleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SkeletonHelper</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 设置骨骼辅助对象为不可见</span>\n  skeleton<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token comment">// 将骨骼辅助对象添加到场景中</span>\n  scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 创建面板</span>\n  <span class="token function">createPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 获取模型的动画数组</span>\n  <span class="token keyword">const</span> animations <span class="token operator">=</span> gltf<span class="token punctuation">.</span>animations<span class="token punctuation">;</span>\n\n  <span class="token comment">// 创建动画混合器</span>\n  mixer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AnimationMixer</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 获取模型的不同动作，并将其加入动画混合器中</span>\n  idleAction <span class="token operator">=</span> mixer<span class="token punctuation">.</span><span class="token function">clipAction</span><span class="token punctuation">(</span>animations<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  walkAction <span class="token operator">=</span> mixer<span class="token punctuation">.</span><span class="token function">clipAction</span><span class="token punctuation">(</span>animations<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  runAction <span class="token operator">=</span> mixer<span class="token punctuation">.</span><span class="token function">clipAction</span><span class="token punctuation">(</span>animations<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 将不同动作保存在数组中</span>\n  actions <span class="token operator">=</span> <span class="token punctuation">[</span>idleAction<span class="token punctuation">,</span> walkAction<span class="token punctuation">,</span> runAction<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 激活所有动作</span>\n  <span class="token function">activateAllActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 调用动画循环函数</span>\n  <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">activateAllActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">setWeight</span><span class="token punctuation">(</span>idleAction<span class="token punctuation">,</span> settings<span class="token punctuation">[</span><span class="token string">&quot;modify idle weight&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">setWeight</span><span class="token punctuation">(</span>walkAction<span class="token punctuation">,</span> settings<span class="token punctuation">[</span><span class="token string">&quot;modify walk weight&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">setWeight</span><span class="token punctuation">(</span>runAction<span class="token punctuation">,</span> settings<span class="token punctuation">[</span><span class="token string">&quot;modify run weight&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  actions<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    action<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> weight</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 设置动画的权重值</span>\n  action<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 启用当前动画</span>\n  action<span class="token punctuation">.</span><span class="token function">setEffectiveTimeScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置动画播放速度为正常速度</span>\n  action<span class="token punctuation">.</span><span class="token function">setEffectiveWeight</span><span class="token punctuation">(</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置动画权重值</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">let</span> mixerUpdateDelta <span class="token operator">=</span> clock<span class="token punctuation">.</span><span class="token function">getDelta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tmixer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span> mixerUpdateDelta <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',7),u={__name:"threejs-bone-animation.html",setup(n){let a;const u=(0,e.iH)();return(0,t.bv)((async()=>{a=await s.e(464).then(s.bind(s,70464)),(()=>{let n,a,s,t,e,c,l;const d=[];let r,k,m,v,b,f,h,g,w=!1,y=0;function A(n){t.visible=n}function j(n){e.visible=n}function x(n){c.timeScale=n}function E(){h.forEach((function(n){n.stop()}))}function T(){R(r,g["modify idle weight"]),R(k,g["modify walk weight"]),R(m,g["modify run weight"]),h.forEach((function(n){n.play()}))}function S(){w?(w=!1,C()):r.paused?C():h.forEach((function(n){n.paused=!0}))}function C(){h.forEach((function(n){n.paused=!1}))}function M(){C(),w=!0,y=g["modify step size"]}function q(n,a,s){const t=function(n){return g["use default duration"]?n:g["set custom duration"]}(s);w=!1,C(),n===r?W(n,a,t):function(n,a,s){c.addEventListener("loop",(function t(e){e.action===n&&(c.removeEventListener("loop",t),W(n,a,s))}))}(n,a,t)}function W(n,a,s){R(a,1),a.time=0,n.crossFadeTo(a,s,!0)}function R(n,a){n.enabled=!0,n.setEffectiveTimeScale(1),n.setEffectiveWeight(a)}function D(){s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)}function F(){requestAnimationFrame(F),v=r.getEffectiveWeight(),b=k.getEffectiveWeight(),f=m.getEffectiveWeight(),g["modify idle weight"]=v,g["modify walk weight"]=b,g["modify run weight"]=f,1===v&&0===b&&0===f&&(d[0].disable(),d[1].enable(),d[2].disable(),d[3].disable()),0===v&&1===b&&0===f&&(d[0].enable(),d[1].disable(),d[2].enable(),d[3].disable()),0===v&&0===b&&1===f&&(d[0].disable(),d[1].disable(),d[2].disable(),d[3].enable());let t=l.getDelta();w&&(t=y,y=0),c.update(t),a.render(n,s)}!function(){s=new o.cPb(45,2,1,1e3),s.position.set(1,2,-3),s.lookAt(0,1,0),l=new o.SUY,n=new o.xsS,n.background=new o.Ilk(10526880),n.fog=new o.ybr(10526880,10,50);const v=new o.vmT(16777215,4473924);v.position.set(0,20,0),n.add(v);const b=new o.Ox3(16777215);b.position.set(-3,10,-10),b.castShadow=!0,b.shadow.camera.top=2,b.shadow.camera.bottom=-2,b.shadow.camera.left=-2,b.shadow.camera.right=2,b.shadow.camera.near=.1,b.shadow.camera.far=40,n.add(b);const f=new o.Kj0(new o._12(100,100),new o.xoR({color:10066329,depthWrite:!1}));f.rotation.x=-Math.PI/2,f.receiveShadow=!0,n.add(f),(new i.E).load("/threejs/models/gltf/Soldier.glb",(function(a){t=a.scene,n.add(t),t.traverse((function(n){n.isMesh&&(n.castShadow=!0)})),e=new o._YX(t),e.visible=!1,n.add(e),function(){const n=new p.XS({width:310});u.value.appendChild(n.domElement),n.domElement.style.position="absolute",n.domElement.style.right=0,n.domElement.style.top=0,n.domElement.style.bottom=0;const a=n.addFolder("Visibility"),s=n.addFolder("Activation/Deactivation"),t=n.addFolder("Pausing/Stepping"),e=n.addFolder("Crossfading"),o=n.addFolder("Blend Weights"),i=n.addFolder("General Speed");g={"show model":!0,"show skeleton":!1,"deactivate all":E,"activate all":T,"pause/continue":S,"make single step":M,"modify step size":.05,"from walk to idle":function(){q(k,r,1)},"from idle to walk":function(){q(r,k,.5)},"from walk to run":function(){q(k,m,2.5)},"from run to walk":function(){q(m,k,5)},"use default duration":!0,"set custom duration":3.5,"modify idle weight":0,"modify walk weight":1,"modify run weight":0,"modify time scale":1},a.add(g,"show model").onChange(A),a.add(g,"show skeleton").onChange(j),s.add(g,"deactivate all"),s.add(g,"activate all"),t.add(g,"pause/continue"),t.add(g,"make single step"),t.add(g,"modify step size",.01,.1,.001),d.push(e.add(g,"from walk to idle")),d.push(e.add(g,"from idle to walk")),d.push(e.add(g,"from walk to run")),d.push(e.add(g,"from run to walk")),e.add(g,"use default duration"),e.add(g,"set custom duration",0,10,.01),o.add(g,"modify idle weight",0,1,.01).listen().onChange((function(n){R(r,n)})),o.add(g,"modify walk weight",0,1,.01).listen().onChange((function(n){R(k,n)})),o.add(g,"modify run weight",0,1,.01).listen().onChange((function(n){R(m,n)})),i.add(g,"modify time scale",0,1.5,.01).onChange(x),a.open(),s.open(),t.open(),e.open(),o.open(),i.open()}();const s=a.animations;c=new o.Xcj(t),r=c.clipAction(s[0]),k=c.clipAction(s[3]),m=c.clipAction(s[1]),h=[r,k,m],T(),F()})),a=new o.CP7({antialias:!0}),a.setPixelRatio(window.devicePixelRatio),a.setSize(u.value.offsetWidth,u.value.offsetWidth/2),a.outputEncoding=o.knz,a.shadowMap.enabled=!0,u.value.appendChild(a.domElement),window.addEventListener("resize",D)}()})()})),(n,a)=>{const s=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("p",null,[(0,t.Uk)("参考："),(0,t._)("a",c,[(0,t.Uk)("https://threejs.org/"),(0,t.Wm)(s)])]),l,(0,t._)("div",{ref_key:"blendingRef",ref:u,class:"ref"},null,512)])}}}},14268:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-ade69b52","path":"/threejs/threejs-bone-animation.html","title":"ThreeJS中的动画","lang":"zh-CN","frontmatter":{"title":"ThreeJS中的动画","category":["ThreeJS"],"date":"2022-03-22T00:00:00.000Z","summary":"参考：https://threejs.org/ 动画类型 动画类型 描述 -------------------------------------------- --------------------------------------------------------------------------------------------------","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/threejs/threejs-bone-animation.html"}],["meta",{"property":"og:title","content":"ThreeJS中的动画"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-27T03:25:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-03-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-27T03:25:07.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"动画类型","slug":"动画类型","link":"#动画类型","children":[]},{"level":2,"title":"ThreeJS 中的动画类","slug":"threejs-中的动画类","link":"#threejs-中的动画类","children":[]}],"git":{"createdTime":1682066702000,"updatedTime":1682565907000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":7.17,"words":2152},"filePathRelative":"threejs/threejs-bone-animation.md","localizedDate":"2022年3月22日"}')}}]);